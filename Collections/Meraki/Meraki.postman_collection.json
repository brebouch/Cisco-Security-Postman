{
	"info": {
		"_postman_id": "7ae955ec-17bf-4d5c-bea7-fd8c1cc8f2d0",
		"name": "Meraki",
		"description": "# Meraki Dashboard API\n\nA RESTful API to programmatically manage and monitor Meraki networks at scale.\n\n<img src=\"https://pubhub.devnetcloud.com/media/Meraki-Dashboard-API-v1-Documentation/docs/images/cloud-code.png#developer.cisco.com\">\n\n## What can you do with it?\n\n- Add new organizations, admins, networks, devices, VLANs, and more\n- Configure thousands of networks in minutes\n- On-board and off-board new employees’ teleworker setup automatically\n- Build your own dashboard for store managers, field techs, or unique use cases\n    \n\nCheckout out the [Explore]() section for open source projects, or browse the [Marketplace]() for partner solutions.\n\n## What's New in v1\n\nThe Dashboard API has evolved significantly, providing hundreds of endpoints to manage your Meraki networks!\n\nWe want to do so much more. But in order for us to include many of these new features or improvements, we need to break a few things.\n\nThe focus of this **major** version is on **Simplicity** and **Scale**, by providing an enjoyable developer experience.\n\nThe API documentation, Postman collection, and Python library will remain synced and up-to-date with improved navigation and features.\n\nIn addition, several improvements and new endpoints have been included with this major release.\n\n### API Documentation\n\nThe API Endpoint documentation and complimenting Postman Collection have a new folder structure for navigating the API.\n\n#### Categories\n\nThe services are grouped into categories, providing a collection of endpoints that behave in a similar way.\n\n**CONFIGURE** endpoints are for managing cloud configurations\n\n**MONITOR** endpoints will return status and history information\n\n**LIVE TOOL** endpoints will directly interact with the device\n\n### Resource Path changes\n\nThe endpoint URL paths will always contain the Meraki product if required, reducing ambiguity when working with resources that have similar yet unique functionality.\n\n> \n\n**Examples of a product and service**\n\n`/appliance/ports`\n\n`/switch/ports`\n\n \n  \n\n### Base URI\n\nIn most parts of the world, every API request will begin with the following **base URI**:\n\n> \n\n`https://api.meraki.com/api/v1`\n\n \n  \n\nFor organizations hosted in the China dashboard, please specify the following base URI instead:\n\n> \n\n`https://api.meraki.cn/api/v1`\n\n \n  \n\n### See all the changes\n\nVisit the [Changelog]() for all the details.\n\n### SDKs\n\nGoing forward, the custom Meraki [Python library]() will be the recommended SDK for simplified API scripting. The previously auto-generated Python, Node.js, and Ruby SDKs for **v0** will remain in the Meraki GitHub but will no longer be maintained.\n\n#### Python\n\nThe Meraki [Python Library]() has been updated to take advantage of all the new API enhancements plus many custom features to help both beginners and experienced programmers.\n\n## Authorization\n\nDashboard API v1 supports Bearer Auth using the standard `Authorization` header parameter. The value will be a string that begins with the word `Bearer`, followed by your Meraki API key.\n\n> \n\n**Note:** When developing scripts, it's a best practice to create a local environment variable `MERAKI_DASHBOARD_API_KEY` and set it to your API key, so that you can omit it from your source code. Instructions vary by operating system, so please consult your OS vendor for more information.\n\n \n  \n\nJSONCURLPYTHON\n\n``` json\nCopy{\n \"Authorization\": \"Bearer \"\n}\n\n ```\n\n## Obtaining your Meraki API key\n\nIn order to interact with the Dashboard API, you must first obtain an API key.\n\n- Open your Meraki dashboard: [https://dashboard.meraki.com]()\n- Once logged in, navigate to the _Organization > Settings_ page.\n- Ensure that the API Access is set to “Enable access to the Cisco Meraki Dashboard API”\n    \n\n<img src=\"https://pubhub.devnetcloud.com/media/Meraki-Dashboard-API-v1-Documentation/docs/images/dashEnableOrgAPI.png#developer.cisco.com\">\n\nThen go to your profile by clicking on your account email address (on the upper-right) _\\> My profile_ to generate the API key.\n\n> &lt;p &gt;save this key in a secure location, as it represents your admin credentials&lt;/p&gt; \n  \n\n<img src=\"https://pubhub.devnetcloud.com/media/Meraki-Dashboard-API-v1-Documentation/docs/images/dashGenerateAPIkey.png#developer.cisco.com\">\n\n### Troubleshooting\n\nIf you get a 401 Unauthorized error (with message _\"Missing API key\"_) when using dashboard API v1 with Bearer token, check the following to troubleshoot:\n\n1. As an example, when using your API key to retrieve the [GET /organizations]() endpoint, you should see the same data as shown when navigating to [https://api.meraki.com/api/v1/organizations]() in your browser, using an authenticated session with the credentials that generated the API key.\n2. Next, check that your API call has the correct header with the following (and not v0's `X-Cisco-Meraki-API-Key`):\n    \n\nJSON\n\n``` json\nCopyAuthorization: Bearer {API_KEY}\n\n ```\n\n1. If making the API call in cURL, check that the **\\--location-trusted** flag is included.\n\n4. If you really want to write your own functions in Python, then you will need to define a new instance of the **requests.Session** class that does not _rebuild_auth_ upon a redirect. For example:\n    \n\nPYTHON\n\n``` python\nCopyfrom requests import Session\nclass NoRebuildAuthSession(Session):\n    def rebuild_auth(self, prepared_request, response):\n      '''\n      No code here means requests will always preserve the Authorization header when redirected.\n      Be careful not to leak your credentials to untrusted hosts!\n      '''\nsession = NoRebuildAuthSession()\nAPI_KEY = '6bec40cf957de430a6f1f2baf056b99a4fac9ea0'\nresponse = session.get('https://api.meraki.com/api/v1/organizations/', headers={'Authorization': f'Bearer {API_KEY}'})\nprint(response.JSON())\n\n ```\n\n1. If using PowerShell with **Invoke-RestMethod**, make sure that the _\\-PreserveAuthorizationOnRedirect_ flag is included.\n2. The behavior here is standard and due to API clients like cURL and Postman stripping the Authorization header, for security purposes, when following an HTTP redirect.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8695710",
		"_collection_link": "https://galactic-astronaut-430691.postman.co/workspace/Cisco-Security~ff5542bd-d893-4a19-ae32-6a56f151c6e7/collection/8695710-7ae955ec-17bf-4d5c-bea7-fd8c1cc8f2d0?action=share&creator=8695710&source=collection_link"
	},
	"item": [
		{
			"name": "networks",
			"item": [
				{
					"name": "{networkId}",
					"item": [
						{
							"name": "wireless",
							"item": [
								{
									"name": "usageHistory",
									"item": [
										{
											"name": "Return AP usage over time for a device or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"usageHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device. Requires :band."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag; either :client_id or :deviceSerial must be jointly specified."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID number."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return AP usage over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"usageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device. Requires :band."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag; either :client_id or :deviceSerial must be jointly specified."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID number."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"totalKbps\": \"<integer>\",\n    \"sentKbps\": \"<integer>\",\n    \"receivedKbps\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"totalKbps\": \"<integer>\",\n    \"sentKbps\": \"<integer>\",\n    \"receivedKbps\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "ssids",
									"item": [
										{
											"name": "{number}",
											"item": [
												{
													"name": "vpn",
													"item": [
														{
															"name": "List the VPN settings for the SSID.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/vpn",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"vpn"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the VPN settings for the SSID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/vpn",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"vpn"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update the VPN settings for the SSID",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"concentrator\": {\n    \"networkId\": \"<string>\",\n    \"vlanId\": \"<integer>\"\n  },\n  \"splitTunnel\": {\n    \"enabled\": \"<boolean>\",\n    \"rules\": [\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"Any\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      },\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"TCP\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      }\n    ]\n  },\n  \"failover\": {\n    \"requestIp\": \"<string>\",\n    \"heartbeatInterval\": \"<integer>\",\n    \"idleTimeout\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/vpn",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"vpn"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the VPN settings for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"concentrator\": {\n    \"networkId\": \"<string>\",\n    \"vlanId\": \"<integer>\"\n  },\n  \"splitTunnel\": {\n    \"enabled\": \"<boolean>\",\n    \"rules\": [\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"Any\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      },\n      {\n        \"destCidr\": \"<string>\",\n        \"policy\": \"<string>\",\n        \"protocol\": \"TCP\",\n        \"destPort\": \"<string>\",\n        \"comment\": \"<string>\"\n      }\n    ]\n  },\n  \"failover\": {\n    \"requestIp\": \"<string>\",\n    \"heartbeatInterval\": \"<integer>\",\n    \"idleTimeout\": \"<integer>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/vpn",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"vpn"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "trafficShaping",
													"item": [
														{
															"name": "rules",
															"item": [
																{
																	"name": "Update the traffic shaping settings for an SSID on an MR network",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"trafficShapingEnabled\": \"<boolean>\",\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/trafficShaping/rules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"trafficShaping",
																				"rules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update the traffic shaping settings for an SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"trafficShapingEnabled\": \"<boolean>\",\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"pcpTagValue\": \"<integer>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/trafficShaping/rules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"trafficShaping",
																						"rules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Display the traffic shaping settings for a SSID on an MR network",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/trafficShaping/rules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"trafficShaping",
																				"rules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Display the traffic shaping settings for a SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/:ssid_id/:ssid_id/trafficShaping/rules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						":ssid_id",
																						":ssid_id",
																						"trafficShaping",
																						"rules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "splash",
													"item": [
														{
															"name": "settings",
															"item": [
																{
																	"name": "Display the splash page settings for the given SSID",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/splash/settings",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"splash",
																				"settings"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Display the splash page settings for the given SSID"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/splash/settings",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"splash",
																						"settings"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ssidNumber\": \"<integer>\",\n  \"splashPage\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashUrl\": \"<string>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"<string>\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"focused\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": \"<boolean>\",\n    \"authorizationType\": \"auto\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Modify the splash page settings for the given SSID",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"splashUrl\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"gif\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"jpg\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"gif\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"restricted\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"strict\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/splash/settings",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"splash",
																				"settings"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Modify the splash page settings for the given SSID"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"splashUrl\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"gif\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"jpg\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\",\n    \"image\": {\n      \"format\": \"gif\",\n      \"contents\": \"<string>\"\n    }\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"restricted\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"strict\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/splash/settings",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"splash",
																						"settings"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"ssidNumber\": \"<integer>\",\n  \"splashPage\": \"<string>\",\n  \"useSplashUrl\": \"<boolean>\",\n  \"splashUrl\": \"<string>\",\n  \"splashTimeout\": \"<integer>\",\n  \"redirectUrl\": \"<string>\",\n  \"useRedirectUrl\": \"<boolean>\",\n  \"welcomeMessage\": \"<string>\",\n  \"splashLogo\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"splashImage\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"splashPrepaidFront\": {\n    \"md5\": \"<string>\",\n    \"extension\": \"<string>\"\n  },\n  \"guestSponsorship\": {\n    \"durationInMinutes\": \"<integer>\",\n    \"guestCanRequestTimeframe\": \"<boolean>\"\n  },\n  \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n  \"controllerDisconnectionBehavior\": \"<string>\",\n  \"allowSimultaneousLogins\": \"<boolean>\",\n  \"billing\": {\n    \"freeAccess\": {\n      \"enabled\": \"<boolean>\",\n      \"durationInMinutes\": \"<integer>\"\n    },\n    \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n    \"replyToEmailAddress\": \"<string>\"\n  },\n  \"sentryEnrollment\": {\n    \"systemsManagerNetwork\": {\n      \"id\": \"<string>\"\n    },\n    \"strength\": \"focused\",\n    \"enforcedSystems\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"selfRegistration\": {\n    \"enabled\": \"<boolean>\",\n    \"authorizationType\": \"auto\"\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "schedules",
													"item": [
														{
															"name": "List the outage schedule for the SSID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/schedules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"schedules"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the outage schedule for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/schedules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"schedules"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update the outage schedule for the SSID",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"ranges\": [\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    },\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    },\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/schedules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"schedules"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the outage schedule for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"ranges\": [\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    },\n    {\n      \"startDay\": \"<string>\",\n      \"startTime\": \"<string>\",\n      \"endDay\": \"<string>\",\n      \"endTime\": \"<string>\"\n    }\n  ],\n  \"rangesInSeconds\": [\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    },\n    {\n      \"start\": \"<integer>\",\n      \"end\": \"<integer>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/schedules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"schedules"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "identityPsks",
													"item": [
														{
															"name": "{identityPskId}",
															"item": [
																{
																	"name": "Return an Identity PSK",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"identityPsks",
																				":identity_psk_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":identity_psk_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return an Identity PSK"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"identityPsks",
																						":identity_psk_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						},
																						{
																							"key": ":identity_psk_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"wifiPersonalNetworkId\": \"<string>\",\n  \"email\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}"
																		}
																	]
																},
																{
																	"name": "Update an Identity PSK",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"identityPsks",
																				":identity_psk_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":identity_psk_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update an Identity PSK"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"identityPsks",
																						":identity_psk_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						},
																						{
																							"key": ":identity_psk_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Delete an Identity PSK",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"identityPsks",
																				":identity_psk_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":identity_psk_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Delete an Identity PSK"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks/:identity_psk_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"identityPsks",
																						":identity_psk_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						},
																						{
																							"key": ":identity_psk_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "List all Identity PSKs in a wireless network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"identityPsks"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List all Identity PSKs in a wireless network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"identityPsks"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"groupPolicyId\": \"<string>\",\n    \"passphrase\": \"<string>\",\n    \"wifiPersonalNetworkId\": \"<string>\",\n    \"email\": \"<string>\",\n    \"expiresAt\": \"<dateTime>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"groupPolicyId\": \"<string>\",\n    \"passphrase\": \"<string>\",\n    \"wifiPersonalNetworkId\": \"<string>\",\n    \"email\": \"<string>\",\n    \"expiresAt\": \"<dateTime>\"\n  }\n]"
																}
															]
														},
														{
															"name": "Create an Identity PSK",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"identityPsks"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Create an Identity PSK"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"passphrase\": \"<string>\",\n  \"expiresAt\": \"<dateTime>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/identityPsks",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"identityPsks"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "hotspot20",
													"item": [
														{
															"name": "Update the Hotspot 2.0 settings of an SSID",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"operator\": {\n    \"name\": \"<string>\"\n  },\n  \"venue\": {\n    \"name\": \"<string>\",\n    \"type\": \"Bar\"\n  },\n  \"networkAccessType\": \"Test or experimental\",\n  \"domains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"roamConsortOis\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    },\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"0\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        }\n      ]\n    },\n    {\n      \"format\": \"1\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/hotspot20",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"hotspot20"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the Hotspot 2.0 settings of an SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"operator\": {\n    \"name\": \"<string>\"\n  },\n  \"venue\": {\n    \"name\": \"<string>\",\n    \"type\": \"Bar\"\n  },\n  \"networkAccessType\": \"Test or experimental\",\n  \"domains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"roamConsortOis\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mccMncs\": [\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    },\n    {\n      \"mcc\": \"<string>\",\n      \"mnc\": \"<string>\"\n    }\n  ],\n  \"naiRealms\": [\n    {\n      \"format\": \"0\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        }\n      ]\n    },\n    {\n      \"format\": \"1\",\n      \"realm\": \"<string>\",\n      \"methods\": [\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        },\n        {\n          \"id\": \"<string>\",\n          \"authenticationTypes\": {}\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/hotspot20",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"hotspot20"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Return the Hotspot 2.0 settings for an SSID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/hotspot20",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"hotspot20"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the Hotspot 2.0 settings for an SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/hotspot20",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"hotspot20"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "firewall",
													"item": [
														{
															"name": "l7FirewallRules",
															"item": [
																{
																	"name": "Return the L7 firewall rules for an SSID on an MR network",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l7FirewallRules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"firewall",
																				"l7FirewallRules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return the L7 firewall rules for an SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l7FirewallRules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"firewall",
																						"l7FirewallRules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Update the L7 firewall rules of an SSID on an MR network",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l7FirewallRules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"firewall",
																				"l7FirewallRules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update the L7 firewall rules of an SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"ipRange\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l7FirewallRules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"firewall",
																						"l7FirewallRules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														},
														{
															"name": "l3FirewallRules",
															"item": [
																{
																	"name": "Return the L3 firewall rules for an SSID on an MR network",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l3FirewallRules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"firewall",
																				"l3FirewallRules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return the L3 firewall rules for an SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l3FirewallRules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"firewall",
																						"l3FirewallRules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Update the L3 firewall rules of an SSID on an MR network",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"tcp\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    }\n  ],\n  \"allowLanAccess\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l3FirewallRules",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"firewall",
																				"l3FirewallRules"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":ssid_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update the L3 firewall rules of an SSID on an MR network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"tcp\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"destPort\": \"<string>\"\n    }\n  ],\n  \"allowLanAccess\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/firewall/l3FirewallRules",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"wireless",
																						"ssids",
																						":ssid_id",
																						"firewall",
																						"l3FirewallRules"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":ssid_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "eapOverride",
													"item": [
														{
															"name": "Return the EAP overridden parameters for an SSID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/eapOverride",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"eapOverride"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the EAP overridden parameters for an SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/eapOverride",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"eapOverride"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"timeout\": \"<integer>\",\n  \"maxRetries\": \"<integer>\",\n  \"identity\": {\n    \"retries\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"eapolKey\": {\n    \"retries\": \"<integer>\",\n    \"timeoutInMs\": \"<integer>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update the EAP overridden parameters for an SSID.",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"timeout\": \"<integer>\",\n  \"identity\": {\n    \"retries\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"maxRetries\": \"<integer>\",\n  \"eapolKey\": {\n    \"retries\": \"<integer>\",\n    \"timeoutInMs\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/eapOverride",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"eapOverride"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the EAP overridden parameters for an SSID."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"timeout\": \"<integer>\",\n  \"identity\": {\n    \"retries\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"maxRetries\": \"<integer>\",\n  \"eapolKey\": {\n    \"retries\": \"<integer>\",\n    \"timeoutInMs\": \"<integer>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/eapOverride",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"eapOverride"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"timeout\": \"<integer>\",\n  \"maxRetries\": \"<integer>\",\n  \"identity\": {\n    \"retries\": \"<integer>\",\n    \"timeout\": \"<integer>\"\n  },\n  \"eapolKey\": {\n    \"retries\": \"<integer>\",\n    \"timeoutInMs\": \"<integer>\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "deviceTypeGroupPolicies",
													"item": [
														{
															"name": "List the device type group policies for the SSID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/deviceTypeGroupPolicies",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"deviceTypeGroupPolicies"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the device type group policies for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/deviceTypeGroupPolicies",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"deviceTypeGroupPolicies"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update the device type group policies for the SSID",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"iPhone\",\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<integer>\"\n    },\n    {\n      \"deviceType\": \"Chrome OS\",\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/deviceTypeGroupPolicies",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"deviceTypeGroupPolicies"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the device type group policies for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"deviceTypePolicies\": [\n    {\n      \"deviceType\": \"iPhone\",\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<integer>\"\n    },\n    {\n      \"deviceType\": \"Chrome OS\",\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<integer>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/deviceTypeGroupPolicies",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"deviceTypeGroupPolicies"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "bonjourForwarding",
													"item": [
														{
															"name": "List the Bonjour forwarding setting and rules for the SSID",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/bonjourForwarding",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"bonjourForwarding"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the Bonjour forwarding setting and rules for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/bonjourForwarding",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"bonjourForwarding"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update the bonjour forwarding setting and rules for the SSID",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"AFP\",\n        \"AirPlay\"\n      ],\n      \"description\": \"<string>\"\n    },\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"iChat\",\n        \"FTP\"\n      ],\n      \"description\": \"<string>\"\n    }\n  ],\n  \"exception\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/bonjourForwarding",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id",
																		"bonjourForwarding"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":ssid_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update the bonjour forwarding setting and rules for the SSID"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"AFP\",\n        \"AirPlay\"\n      ],\n      \"description\": \"<string>\"\n    },\n    {\n      \"vlanId\": \"<string>\",\n      \"services\": [\n        \"iChat\",\n        \"FTP\"\n      ],\n      \"description\": \"<string>\"\n    }\n  ],\n  \"exception\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id/bonjourForwarding",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"ssids",
																				":ssid_id",
																				"bonjourForwarding"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":ssid_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "Return a single MR SSID",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"ssids",
																":ssid_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":ssid_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a single MR SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":ssid_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"splashPage\": \"Sponsored guest\",\n  \"ssidAdminAccessible\": \"<boolean>\",\n  \"authMode\": \"open-with-nac\",\n  \"encryptionMode\": \"wep\",\n  \"wpaEncryptionMode\": \"WPA1 and WPA2\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusEnabled\": \"<boolean>\",\n  \"radiusAttributeForGroupPolicies\": \"Reply-Message\",\n  \"radiusFailoverPolicy\": \"Deny access\",\n  \"radiusLoadBalancingPolicy\": \"Strict priority order\",\n  \"ipAssignmentMode\": \"Layer 3 roaming with a concentrator\",\n  \"adminSplashUrl\": \"<string>\",\n  \"splashTimeout\": \"<string>\",\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"minBitrate\": \"<integer>\",\n  \"bandSelection\": \"5 GHz band only\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"mandatoryDhcpEnabled\": \"<boolean>\"\n}"
														}
													]
												},
												{
													"name": "Update the attributes of an MR SSID",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"authMode\": \"8021x-google\",\n  \"enterpriseAdminAccess\": \"access disabled\",\n  \"encryptionMode\": \"wpa\",\n  \"psk\": \"<string>\",\n  \"wpaEncryptionMode\": \"WPA3 192-bit Security\",\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  },\n  \"dot11r\": {\n    \"enabled\": \"<boolean>\",\n    \"adaptive\": \"<boolean>\"\n  },\n  \"splashPage\": \"Google Apps domain\",\n  \"splashGuestSponsorDomains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"oauth\": {\n    \"allowedDomains\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"localRadius\": {\n    \"cacheTimeout\": \"<integer>\",\n    \"passwordAuthentication\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"certificateAuthentication\": {\n      \"enabled\": \"<boolean>\",\n      \"useLdap\": \"<boolean>\",\n      \"useOcsp\": \"<boolean>\",\n      \"ocspResponderUrl\": \"<string>\",\n      \"clientRootCaCertificate\": {\n        \"contents\": \"<string>\"\n      }\n    }\n  },\n  \"ldap\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"distinguishedName\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"baseDistinguishedName\": \"<string>\",\n    \"serverCaCertificate\": {\n      \"contents\": \"<string>\"\n    }\n  },\n  \"activeDirectory\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"logonName\": \"<string>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusProxyEnabled\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCalledStationId\": \"<string>\",\n  \"radiusAuthenticationNasId\": \"<string>\",\n  \"radiusServerTimeout\": \"<integer>\",\n  \"radiusServerAttemptsLimit\": \"<integer>\",\n  \"radiusFallbackEnabled\": \"<boolean>\",\n  \"radiusCoaEnabled\": \"<boolean>\",\n  \"radiusFailoverPolicy\": \"Allow access\",\n  \"radiusLoadBalancingPolicy\": \"Strict priority order\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingInterimInterval\": \"<integer>\",\n  \"radiusAttributeForGroupPolicies\": \"Reply-Message\",\n  \"ipAssignmentMode\": \"<string>\",\n  \"useVlanTagging\": \"<boolean>\",\n  \"concentratorNetworkId\": \"<string>\",\n  \"secondaryConcentratorNetworkId\": \"<string>\",\n  \"disassociateClientsOnVpnFailover\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"apTagsAndVlanIds\": [\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    },\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    }\n  ],\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"gre\": {\n    \"concentrator\": {\n      \"host\": \"<string>\"\n    },\n    \"key\": \"<integer>\"\n  },\n  \"radiusOverride\": \"<boolean>\",\n  \"radiusGuestVlanEnabled\": \"<boolean>\",\n  \"radiusGuestVlanId\": \"<integer>\",\n  \"minBitrate\": \"<float>\",\n  \"bandSelection\": \"<string>\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"lanIsolationEnabled\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mandatoryDhcpEnabled\": \"<boolean>\",\n  \"adultContentFilteringEnabled\": \"<boolean>\",\n  \"dnsRewrite\": {\n    \"enabled\": \"<boolean>\",\n    \"dnsCustomNameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"speedBurst\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"ssids",
																":ssid_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":ssid_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the attributes of an MR SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"authMode\": \"8021x-google\",\n  \"enterpriseAdminAccess\": \"access disabled\",\n  \"encryptionMode\": \"wpa\",\n  \"psk\": \"<string>\",\n  \"wpaEncryptionMode\": \"WPA3 192-bit Security\",\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  },\n  \"dot11r\": {\n    \"enabled\": \"<boolean>\",\n    \"adaptive\": \"<boolean>\"\n  },\n  \"splashPage\": \"Google Apps domain\",\n  \"splashGuestSponsorDomains\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"oauth\": {\n    \"allowedDomains\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"localRadius\": {\n    \"cacheTimeout\": \"<integer>\",\n    \"passwordAuthentication\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"certificateAuthentication\": {\n      \"enabled\": \"<boolean>\",\n      \"useLdap\": \"<boolean>\",\n      \"useOcsp\": \"<boolean>\",\n      \"ocspResponderUrl\": \"<string>\",\n      \"clientRootCaCertificate\": {\n        \"contents\": \"<string>\"\n      }\n    }\n  },\n  \"ldap\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"distinguishedName\": \"<string>\",\n      \"password\": \"<string>\"\n    },\n    \"baseDistinguishedName\": \"<string>\",\n    \"serverCaCertificate\": {\n      \"contents\": \"<string>\"\n    }\n  },\n  \"activeDirectory\": {\n    \"servers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"credentials\": {\n      \"logonName\": \"<string>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusProxyEnabled\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCalledStationId\": \"<string>\",\n  \"radiusAuthenticationNasId\": \"<string>\",\n  \"radiusServerTimeout\": \"<integer>\",\n  \"radiusServerAttemptsLimit\": \"<integer>\",\n  \"radiusFallbackEnabled\": \"<boolean>\",\n  \"radiusCoaEnabled\": \"<boolean>\",\n  \"radiusFailoverPolicy\": \"Allow access\",\n  \"radiusLoadBalancingPolicy\": \"Strict priority order\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\",\n      \"radsecEnabled\": \"<boolean>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingInterimInterval\": \"<integer>\",\n  \"radiusAttributeForGroupPolicies\": \"Reply-Message\",\n  \"ipAssignmentMode\": \"<string>\",\n  \"useVlanTagging\": \"<boolean>\",\n  \"concentratorNetworkId\": \"<string>\",\n  \"secondaryConcentratorNetworkId\": \"<string>\",\n  \"disassociateClientsOnVpnFailover\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"apTagsAndVlanIds\": [\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    },\n    {\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"vlanId\": \"<integer>\"\n    }\n  ],\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"gre\": {\n    \"concentrator\": {\n      \"host\": \"<string>\"\n    },\n    \"key\": \"<integer>\"\n  },\n  \"radiusOverride\": \"<boolean>\",\n  \"radiusGuestVlanEnabled\": \"<boolean>\",\n  \"radiusGuestVlanId\": \"<integer>\",\n  \"minBitrate\": \"<float>\",\n  \"bandSelection\": \"<string>\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"lanIsolationEnabled\": \"<boolean>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mandatoryDhcpEnabled\": \"<boolean>\",\n  \"adultContentFilteringEnabled\": \"<boolean>\",\n  \"dnsRewrite\": {\n    \"enabled\": \"<boolean>\",\n    \"dnsCustomNameservers\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"speedBurst\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids/:ssid_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"ssids",
																		":ssid_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":ssid_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"splashPage\": \"Sponsored guest\",\n  \"ssidAdminAccessible\": \"<boolean>\",\n  \"authMode\": \"open-with-nac\",\n  \"encryptionMode\": \"wep\",\n  \"wpaEncryptionMode\": \"WPA1 and WPA2\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"openRoamingCertificateId\": \"<integer>\",\n      \"caCertificate\": \"<string>\"\n    }\n  ],\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusEnabled\": \"<boolean>\",\n  \"radiusAttributeForGroupPolicies\": \"Reply-Message\",\n  \"radiusFailoverPolicy\": \"Deny access\",\n  \"radiusLoadBalancingPolicy\": \"Strict priority order\",\n  \"ipAssignmentMode\": \"Layer 3 roaming with a concentrator\",\n  \"adminSplashUrl\": \"<string>\",\n  \"splashTimeout\": \"<string>\",\n  \"walledGardenEnabled\": \"<boolean>\",\n  \"walledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"minBitrate\": \"<integer>\",\n  \"bandSelection\": \"5 GHz band only\",\n  \"perClientBandwidthLimitUp\": \"<integer>\",\n  \"perClientBandwidthLimitDown\": \"<integer>\",\n  \"visible\": \"<boolean>\",\n  \"availableOnAllAps\": \"<boolean>\",\n  \"availabilityTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"perSsidBandwidthLimitUp\": \"<integer>\",\n  \"perSsidBandwidthLimitDown\": \"<integer>\",\n  \"mandatoryDhcpEnabled\": \"<boolean>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the MR SSIDs in a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"ssids"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the MR SSIDs in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/ssids",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"ssids"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"splashPage\": \"Password-protected with LDAP\",\n    \"ssidAdminAccessible\": \"<boolean>\",\n    \"authMode\": \"ipsk-without-radius\",\n    \"encryptionMode\": \"wpa\",\n    \"wpaEncryptionMode\": \"WPA1 only\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      }\n    ],\n    \"radiusAccountingServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      }\n    ],\n    \"radiusAccountingEnabled\": \"<boolean>\",\n    \"radiusEnabled\": \"<boolean>\",\n    \"radiusAttributeForGroupPolicies\": \"Aruba-User-Role\",\n    \"radiusFailoverPolicy\": \"Deny access\",\n    \"radiusLoadBalancingPolicy\": \"Round robin\",\n    \"ipAssignmentMode\": \"Bridge mode\",\n    \"adminSplashUrl\": \"<string>\",\n    \"splashTimeout\": \"<string>\",\n    \"walledGardenEnabled\": \"<boolean>\",\n    \"walledGardenRanges\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"minBitrate\": \"<integer>\",\n    \"bandSelection\": \"Dual band operation\",\n    \"perClientBandwidthLimitUp\": \"<integer>\",\n    \"perClientBandwidthLimitDown\": \"<integer>\",\n    \"visible\": \"<boolean>\",\n    \"availableOnAllAps\": \"<boolean>\",\n    \"availabilityTags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"perSsidBandwidthLimitUp\": \"<integer>\",\n    \"perSsidBandwidthLimitDown\": \"<integer>\",\n    \"mandatoryDhcpEnabled\": \"<boolean>\"\n  },\n  {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"splashPage\": \"None\",\n    \"ssidAdminAccessible\": \"<boolean>\",\n    \"authMode\": \"psk\",\n    \"encryptionMode\": \"wep\",\n    \"wpaEncryptionMode\": \"WPA1 only\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      }\n    ],\n    \"radiusAccountingServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\",\n        \"openRoamingCertificateId\": \"<integer>\",\n        \"caCertificate\": \"<string>\"\n      }\n    ],\n    \"radiusAccountingEnabled\": \"<boolean>\",\n    \"radiusEnabled\": \"<boolean>\",\n    \"radiusAttributeForGroupPolicies\": \"Filter-Id\",\n    \"radiusFailoverPolicy\": \"Deny access\",\n    \"radiusLoadBalancingPolicy\": \"Round robin\",\n    \"ipAssignmentMode\": \"Layer 3 roaming\",\n    \"adminSplashUrl\": \"<string>\",\n    \"splashTimeout\": \"<string>\",\n    \"walledGardenEnabled\": \"<boolean>\",\n    \"walledGardenRanges\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"minBitrate\": \"<integer>\",\n    \"bandSelection\": \"Dual band operation\",\n    \"perClientBandwidthLimitUp\": \"<integer>\",\n    \"perClientBandwidthLimitDown\": \"<integer>\",\n    \"visible\": \"<boolean>\",\n    \"availableOnAllAps\": \"<boolean>\",\n    \"availabilityTags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"perSsidBandwidthLimitUp\": \"<integer>\",\n    \"perSsidBandwidthLimitDown\": \"<integer>\",\n    \"mandatoryDhcpEnabled\": \"<boolean>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "signalQualityHistory",
									"item": [
										{
											"name": "Return signal quality (SNR/RSSI) over time for a device or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/signalQualityHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"signalQualityHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag; either :client_id or :deviceSerial must be jointly specified."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID number."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return signal quality (SNR/RSSI) over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/signalQualityHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"signalQualityHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag; either :client_id or :deviceSerial must be jointly specified."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID number."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"snr\": \"<integer>\",\n    \"rssi\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"snr\": \"<integer>\",\n    \"rssi\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "Return the wireless settings for a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the wireless settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"meshingEnabled\": \"<boolean>\",\n  \"ipv6BridgeEnabled\": \"<boolean>\",\n  \"locationAnalyticsEnabled\": \"<boolean>\",\n  \"upgradeStrategy\": \"minimizeClientDowntime\",\n  \"ledLightsOn\": \"<boolean>\",\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": \"<boolean>\",\n      \"duration\": \"<integer>\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Update the wireless settings for a network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"meshingEnabled\": \"<boolean>\",\n  \"ipv6BridgeEnabled\": \"<boolean>\",\n  \"locationAnalyticsEnabled\": \"<boolean>\",\n  \"upgradeStrategy\": \"minimizeUpgradeTime\",\n  \"ledLightsOn\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the wireless settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"meshingEnabled\": \"<boolean>\",\n  \"ipv6BridgeEnabled\": \"<boolean>\",\n  \"locationAnalyticsEnabled\": \"<boolean>\",\n  \"upgradeStrategy\": \"minimizeUpgradeTime\",\n  \"ledLightsOn\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"meshingEnabled\": \"<boolean>\",\n  \"ipv6BridgeEnabled\": \"<boolean>\",\n  \"locationAnalyticsEnabled\": \"<boolean>\",\n  \"upgradeStrategy\": \"minimizeClientDowntime\",\n  \"ledLightsOn\": \"<boolean>\",\n  \"namedVlans\": {\n    \"poolDhcpMonitoring\": {\n      \"enabled\": \"<boolean>\",\n      \"duration\": \"<integer>\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "rfProfiles",
									"item": [
										{
											"name": "{rfProfileId}",
											"item": [
												{
													"name": "Updates specified RF profile for this network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ssid\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"2.4ghz\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"2.4\",\n          \"2.4\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"5\",\n          \"5\"\n        ]\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates specified RF profile for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"band\",\n  \"bandSelectionType\": \"ssid\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"2.4ghz\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"2.4\",\n          \"2.4\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"5\",\n          \"5\"\n        ]\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Delete a RF Profile",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a RF Profile"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Return a RF profile",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a RF profile"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "List RF profiles for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles?includeTemplateProfiles=<boolean>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"rfProfiles"
													],
													"query": [
														{
															"key": "includeTemplateProfiles",
															"value": "<boolean>",
															"description": "If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List RF profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles?includeTemplateProfiles=<boolean>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"rfProfiles"
															],
															"query": [
																{
																	"key": "includeTemplateProfiles",
																	"value": "<boolean>",
																	"description": "If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Creates new RF profile for this network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"bandSelectionType\": \"ssid\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"ssid\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"5\",\n          \"6\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"6\",\n          \"6\"\n        ]\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"rfProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates new RF profile for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"bandSelectionType\": \"ssid\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"ssid\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"dual\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"minBitrate\": \"<float>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  },\n  \"flexRadios\": {\n    \"byModel\": [\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"5\",\n          \"6\"\n        ]\n      },\n      {\n        \"model\": \"<string>\",\n        \"bands\": [\n          \"6\",\n          \"6\"\n        ]\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/rfProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"clientBalancingEnabled\": \"<boolean>\",\n  \"minBitrateType\": \"<string>\",\n  \"bandSelectionType\": \"<string>\",\n  \"apBandSettings\": {\n    \"bandOperationMode\": \"<string>\",\n    \"bandSteeringEnabled\": \"<boolean>\"\n  },\n  \"twoFourGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<float>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"axEnabled\": \"<boolean>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"sixGhzSettings\": {\n    \"maxPower\": \"<integer>\",\n    \"minPower\": \"<integer>\",\n    \"minBitrate\": \"<integer>\",\n    \"validAutoChannels\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"channelWidth\": \"<string>\",\n    \"rxsop\": \"<integer>\"\n  },\n  \"transmission\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"0\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"1\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"5\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"6\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"7\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"8\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"9\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"10\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"11\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"12\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"13\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"14\": {\n      \"name\": \"<string>\",\n      \"minBitrate\": \"<integer>\",\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "meshStatuses",
									"item": [
										{
											"name": "List wireless mesh statuses for repeaters",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/meshStatuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"meshStatuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List wireless mesh statuses for repeaters"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/meshStatuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"meshStatuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "latencyStats",
									"item": [
										{
											"name": "Aggregated latency info for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"latencyStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID"
														},
														{
															"key": "vlan",
															"value": "<integer>",
															"description": "Filter results by VLAN"
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP Tag"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Aggregated latency info for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "latencyHistory",
									"item": [
										{
											"name": "Return average wireless latency over time for a network, device, or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>&accessCategory=voiceTraffic",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"latencyHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID number."
														},
														{
															"key": "accessCategory",
															"value": "voiceTraffic",
															"description": "Filter by access category."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return average wireless latency over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>&accessCategory=voiceTraffic",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"latencyHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID number."
																},
																{
																	"key": "accessCategory",
																	"value": "voiceTraffic",
																	"description": "Filter by access category."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"avgLatencyMs\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"avgLatencyMs\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "failedConnections",
									"item": [
										{
											"name": "List of all failed client connection events on this network in a given time range",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/failedConnections?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&:serial=<string>&:client_id=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"failedConnections"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID"
														},
														{
															"key": "vlan",
															"value": "<integer>",
															"description": "Filter results by VLAN"
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP Tag"
														},
														{
															"key": ":serial",
															"value": "<string>",
															"description": "Filter by AP"
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter by client MAC"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List of all failed client connection events on this network in a given time range"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/failedConnections?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&:serial=<string>&:client_id=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"failedConnections"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																},
																{
																	"key": ":serial",
																	"value": "<string>",
																	"description": "Filter by AP"
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter by client MAC"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ssidNumber\": \"<integer>\",\n    \"vlan\": \"<integer>\",\n    \"clientMac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"failureStep\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ts\": \"<dateTime>\"\n  },\n  {\n    \"ssidNumber\": \"<integer>\",\n    \"vlan\": \"<integer>\",\n    \"clientMac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"failureStep\": \"<string>\",\n    \"type\": \"<string>\",\n    \"ts\": \"<dateTime>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "latencyStats",
											"item": [
												{
													"name": "Aggregated latency info for this network, grouped by node",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/devices/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"devices",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Aggregated latency info for this network, grouped by node"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/devices/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"devices",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "connectionStats",
											"item": [
												{
													"name": "Aggregated connectivity info for this network, grouped by node",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/devices/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"devices",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Aggregated connectivity info for this network, grouped by node"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/devices/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"devices",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"connectionStats\": {\n      \"assoc\": \"<integer>\",\n      \"auth\": \"<integer>\",\n      \"dhcp\": \"<integer>\",\n      \"dns\": \"<integer>\",\n      \"success\": \"<integer>\"\n    }\n  },\n  {\n    \"serial\": \"<string>\",\n    \"connectionStats\": {\n      \"assoc\": \"<integer>\",\n      \"auth\": \"<integer>\",\n      \"dhcp\": \"<integer>\",\n      \"dns\": \"<integer>\",\n      \"success\": \"<integer>\"\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "dataRateHistory",
									"item": [
										{
											"name": "Return PHY data rates over time for a network, device, or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/dataRateHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"dataRateHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID number."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return PHY data rates over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/dataRateHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"dataRateHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID number."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"averageKbps\": \"<integer>\",\n    \"downloadKbps\": \"<integer>\",\n    \"uploadKbps\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"averageKbps\": \"<integer>\",\n    \"downloadKbps\": \"<integer>\",\n    \"uploadKbps\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "connectionStats",
									"item": [
										{
											"name": "Aggregated connectivity info for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"connectionStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID"
														},
														{
															"key": "vlan",
															"value": "<integer>",
															"description": "Filter results by VLAN"
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP Tag"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Aggregated connectivity info for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"assoc\": \"<integer>\",\n  \"auth\": \"<integer>\",\n  \"dhcp\": \"<integer>\",\n  \"dns\": \"<integer>\",\n  \"success\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "clients",
									"item": [
										{
											"name": "{clientId}",
											"item": [
												{
													"name": "latencyStats",
													"item": [
														{
															"name": "Aggregated latency info for a given client on this network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		":client_id",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":client_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"clients",
																				":client_id",
																				"latencyStats"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																				},
																				{
																					"key": "band",
																					"value": "5",
																					"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																				},
																				{
																					"key": "ssid",
																					"value": "<integer>",
																					"description": "Filter results by SSID"
																				},
																				{
																					"key": "vlan",
																					"value": "<integer>",
																					"description": "Filter results by VLAN"
																				},
																				{
																					"key": "apTag",
																					"value": "<string>",
																					"description": "Filter results by AP Tag"
																				},
																				{
																					"key": "fields",
																					"value": "<string>",
																					"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":client_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "latencyHistory",
													"item": [
														{
															"name": "Return the latency history for a client",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		":client_id",
																		"latencyHistory"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>",
																			"description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":client_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/latencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"clients",
																				":client_id",
																				"latencyHistory"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
																				},
																				{
																					"key": "resolution",
																					"value": "<integer>",
																					"description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":client_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[]"
																}
															]
														}
													]
												},
												{
													"name": "connectivityEvents",
													"item": [
														{
															"name": "List the wireless connectivity events for a client within a network in the timespan.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/connectivityEvents?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&types=roam&types=roam&includedSeverities=warn&includedSeverities=warn&band=5&ssidNumber=10&deviceSerial=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		":client_id",
																		"connectivityEvents"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		},
																		{
																			"key": "types",
																			"value": "roam",
																			"description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'."
																		},
																		{
																			"key": "types",
																			"value": "roam",
																			"description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'."
																		},
																		{
																			"key": "includedSeverities",
																			"value": "warn",
																			"description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'."
																		},
																		{
																			"key": "includedSeverities",
																			"value": "warn",
																			"description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5', '6')."
																		},
																		{
																			"key": "ssidNumber",
																			"value": "10",
																			"description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
																		},
																		{
																			"key": "deviceSerial",
																			"value": "<string>",
																			"description": "Filter results by an AP's serial number."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":client_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the wireless connectivity events for a client within a network in the timespan."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/connectivityEvents?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&types=roam&includedSeverities=warn&band=5&ssidNumber=10&deviceSerial=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"clients",
																				":client_id",
																				"connectivityEvents"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				},
																				{
																					"key": "types",
																					"value": "roam",
																					"description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'."
																				},
																				{
																					"key": "includedSeverities",
																					"value": "warn",
																					"description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'."
																				},
																				{
																					"key": "band",
																					"value": "5",
																					"description": "Filter results by band (either '2.4', '5', '6')."
																				},
																				{
																					"key": "ssidNumber",
																					"value": "10",
																					"description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
																				},
																				{
																					"key": "deviceSerial",
																					"value": "<string>",
																					"description": "Filter results by an AP's serial number."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":client_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[]"
																}
															]
														}
													]
												},
												{
													"name": "connectionStats",
													"item": [
														{
															"name": "Aggregated connectivity info for a given client on this network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		":client_id",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":client_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/:client_id/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"wireless",
																				"clients",
																				":client_id",
																				"connectionStats"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																				},
																				{
																					"key": "band",
																					"value": "5",
																					"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																				},
																				{
																					"key": "ssid",
																					"value": "<integer>",
																					"description": "Filter results by SSID"
																				},
																				{
																					"key": "vlan",
																					"value": "<integer>",
																					"description": "Filter results by VLAN"
																				},
																				{
																					"key": "apTag",
																					"value": "<string>",
																					"description": "Filter results by AP Tag"
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":client_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "latencyStats",
											"item": [
												{
													"name": "Aggregated latency info for this network, grouped by clients",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"clients",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Aggregated latency info for this network, grouped by clients"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		"latencyStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		},
																		{
																			"key": "fields",
																			"value": "<string>",
																			"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "connectionStats",
											"item": [
												{
													"name": "Aggregated connectivity info for this network, grouped by clients",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"clients",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Aggregated connectivity info for this network, grouped by clients"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/clients/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"clients",
																		"connectionStats"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																		},
																		{
																			"key": "band",
																			"value": "5",
																			"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																		},
																		{
																			"key": "ssid",
																			"value": "<integer>",
																			"description": "Filter results by SSID"
																		},
																		{
																			"key": "vlan",
																			"value": "<integer>",
																			"description": "Filter results by VLAN"
																		},
																		{
																			"key": "apTag",
																			"value": "<string>",
																			"description": "Filter results by AP Tag"
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "clientCountHistory",
									"item": [
										{
											"name": "Return wireless client counts over time for a network, device, or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/clientCountHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"clientCountHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID number."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return wireless client counts over time for a network, device, or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/clientCountHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5&ssid=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"clientCountHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID number."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"clientCount\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"clientCount\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "channelUtilizationHistory",
									"item": [
										{
											"name": "Return AP channel utilization over time for a device or network client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/channelUtilizationHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"channelUtilizationHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400."
														},
														{
															"key": "autoResolution",
															"value": "<boolean>",
															"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
														},
														{
															"key": ":client_id",
															"value": "<string>",
															"description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :client_id must be jointly specified."
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :client_id or :deviceSerial must be jointly specified."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6')."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return AP channel utilization over time for a device or network client"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/channelUtilizationHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&autoResolution=<boolean>&:client_id=<string>&deviceSerial=<string>&apTag=<string>&band=5",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"channelUtilizationHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400."
																},
																{
																	"key": "autoResolution",
																	"value": "<boolean>",
																	"description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
																},
																{
																	"key": ":client_id",
																	"value": "<string>",
																	"description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history."
																},
																{
																	"key": "deviceSerial",
																	"value": "<string>",
																	"description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :client_id must be jointly specified."
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :client_id or :deviceSerial must be jointly specified."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6')."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"utilizationTotal\": \"<float>\",\n    \"utilization80211\": \"<float>\",\n    \"utilizationNon80211\": \"<float>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"utilizationTotal\": \"<float>\",\n    \"utilization80211\": \"<float>\",\n    \"utilizationNon80211\": \"<float>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "bluetooth",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/bluetooth/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/bluetooth/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scanningEnabled\": \"<boolean>\",\n  \"advertisingEnabled\": \"<boolean>\",\n  \"uuid\": \"<string>\",\n  \"majorMinorAssignmentMode\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\",\n  \"eslEnabled\": \"<boolean>\"\n}"
														}
													]
												},
												{
													"name": "Update the Bluetooth settings for a network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"scanningEnabled\": \"<boolean>\",\n  \"advertisingEnabled\": \"<boolean>\",\n  \"uuid\": \"<string>\",\n  \"majorMinorAssignmentMode\": \"Non-unique\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/bluetooth/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"scanningEnabled\": \"<boolean>\",\n  \"advertisingEnabled\": \"<boolean>\",\n  \"uuid\": \"<string>\",\n  \"majorMinorAssignmentMode\": \"Non-unique\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/wireless/bluetooth/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scanningEnabled\": \"<boolean>\",\n  \"advertisingEnabled\": \"<boolean>\",\n  \"uuid\": \"<string>\",\n  \"majorMinorAssignmentMode\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\",\n  \"eslEnabled\": \"<boolean>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "billing",
									"item": [
										{
											"name": "Return the billing settings of this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/billing",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"billing"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the billing settings of this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/billing",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"billing"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"id\": \"<string>\",\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the billing settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"1 hour\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"30 days\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/billing",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"billing"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the billing settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"1 hour\",\n      \"id\": \"<string>\"\n    },\n    {\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"30 days\",\n      \"id\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/billing",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"billing"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"currency\": \"<string>\",\n  \"plans\": [\n    {\n      \"id\": \"<string>\",\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"price\": \"<float>\",\n      \"bandwidthLimits\": {\n        \"limitUp\": \"<integer>\",\n        \"limitDown\": \"<integer>\"\n      },\n      \"timeLimit\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "alternateManagementInterface",
									"item": [
										{
											"name": "Return alternate management interface and devices with IP assigned",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/alternateManagementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return alternate management interface and devices with IP assigned"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/alternateManagementInterface",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update alternate management interface and device static IP",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"syslog\",\n    \"ldap\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/alternateManagementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update alternate management interface and device static IP"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"syslog\",\n    \"ldap\"\n  ],\n  \"accessPoints\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\",\n      \"dns1\": \"<string>\",\n      \"dns2\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/alternateManagementInterface",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "airMarshal",
									"item": [
										{
											"name": "List Air Marshal scan results from a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/wireless/airMarshal?t0=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"wireless",
														"airMarshal"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List Air Marshal scan results from a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/wireless/airMarshal?t0=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"wireless",
																"airMarshal"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "webhooks",
							"item": [
								{
									"name": "webhookTests",
									"item": [
										{
											"name": "{webhookTestId}",
											"item": [
												{
													"name": "Return the status of a webhook test for a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/webhookTests/:webhook_test_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"webhookTests",
																":webhook_test_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":webhook_test_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the status of a webhook test for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/webhookTests/:webhook_test_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"webhookTests",
																		":webhook_test_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":webhook_test_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"url\": \"<string>\",\n  \"status\": \"processing\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Send a test webhook for a network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"\",\n  \"payloadTemplateId\": \"<string>\",\n  \"payloadTemplateName\": \"<string>\",\n  \"alertTypeId\": \"power_supply_down\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/webhooks/webhookTests",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"webhooks",
														"webhookTests"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Send a test webhook for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"\",\n  \"payloadTemplateId\": \"<string>\",\n  \"payloadTemplateName\": \"<string>\",\n  \"alertTypeId\": \"power_supply_down\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/webhookTests",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"webhookTests"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"url\": \"<string>\",\n  \"status\": \"processing\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "payloadTemplates",
									"item": [
										{
											"name": "{payloadTemplateId}",
											"item": [
												{
													"name": "Get the webhook payload template for a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"payloadTemplates",
																":payload_template_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":payload_template_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get the webhook payload template for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"payloadTemplates",
																		":payload_template_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":payload_template_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"payloadTemplateId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"body\": \"<string>\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Destroy a webhook payload template for a network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"payloadTemplates",
																":payload_template_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":payload_template_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Destroy a webhook payload template for a network. Does not work for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or 'wpt_00006')"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"payloadTemplates",
																		":payload_template_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":payload_template_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a webhook payload template for a network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<string>\",\n  \"headersFile\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"payloadTemplates",
																":payload_template_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":payload_template_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a webhook payload template for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<string>\",\n  \"headersFile\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates/:payload_template_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"payloadTemplates",
																		":payload_template_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":payload_template_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"payloadTemplateId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"body\": \"<string>\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the webhook payload templates for a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"webhooks",
														"payloadTemplates"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the webhook payload templates for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"payloadTemplates"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"payloadTemplateId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"headers\": [\n      {\n        \"name\": \"<string>\",\n        \"template\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"template\": \"<string>\"\n      }\n    ],\n    \"body\": \"<string>\",\n    \"sharing\": {\n      \"byNetwork\": {\n        \"adminsCanModify\": \"<boolean>\"\n      }\n    }\n  },\n  {\n    \"payloadTemplateId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"headers\": [\n      {\n        \"name\": \"<string>\",\n        \"template\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"template\": \"<string>\"\n      }\n    ],\n    \"body\": \"<string>\",\n    \"sharing\": {\n      \"byNetwork\": {\n        \"adminsCanModify\": \"<boolean>\"\n      }\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "Create a webhook payload template for a network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<string>\",\n  \"headersFile\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"webhooks",
														"payloadTemplates"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create a webhook payload template for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"body\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"bodyFile\": \"<string>\",\n  \"headersFile\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/payloadTemplates",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"payloadTemplates"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"payloadTemplateId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"headers\": [\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"template\": \"<string>\"\n    }\n  ],\n  \"body\": \"<string>\",\n  \"sharing\": {\n    \"byNetwork\": {\n      \"adminsCanModify\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "httpServers",
									"item": [
										{
											"name": "{httpServerId}",
											"item": [
												{
													"name": "Return an HTTP server for a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"httpServers",
																":http_server_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":http_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return an HTTP server for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"httpServers",
																		":http_server_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":http_server_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update an HTTP server",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"httpServers",
																":http_server_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":http_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an HTTP server. To change a URL, create a new HTTP server."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"httpServers",
																		":http_server_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":http_server_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Delete an HTTP server from a network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"httpServers",
																":http_server_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":http_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete an HTTP server from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers/:http_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"webhooks",
																		"httpServers",
																		":http_server_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":http_server_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the HTTP servers for a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"webhooks",
														"httpServers"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the HTTP servers for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"httpServers"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"payloadTemplate\": {\n      \"payloadTemplateId\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"payloadTemplate\": {\n      \"payloadTemplateId\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "Add an HTTP server to a network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"webhooks",
														"httpServers"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add an HTTP server to a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"sharedSecret\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/webhooks/httpServers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"webhooks",
																"httpServers"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"payloadTemplate\": {\n    \"payloadTemplateId\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "unbind",
							"item": [
								{
									"name": "Unbind a network from a template.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"retainConfigs\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/unbind",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"unbind"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Unbind a network from a template."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retainConfigs\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/unbind",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"unbind"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"url\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isBoundToConfigTemplate\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "trafficShaping",
							"item": [
								{
									"name": "dscpTaggingOptions",
									"item": [
										{
											"name": "Returns the available DSCP tagging options for your traffic shaping rules.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/trafficShaping/dscpTaggingOptions",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"trafficShaping",
														"dscpTaggingOptions"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns the available DSCP tagging options for your traffic shaping rules."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/trafficShaping/dscpTaggingOptions",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"trafficShaping",
																"dscpTaggingOptions"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "applicationCategories",
									"item": [
										{
											"name": "Returns the application categories for traffic shaping rules.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/trafficShaping/applicationCategories",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"trafficShaping",
														"applicationCategories"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns the application categories for traffic shaping rules."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/trafficShaping/applicationCategories",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"trafficShaping",
																"applicationCategories"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "trafficAnalysis",
							"item": [
								{
									"name": "Return the traffic analysis settings for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/trafficAnalysis",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"trafficAnalysis"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the traffic analysis settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/trafficAnalysis",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"trafficAnalysis"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update the traffic analysis settings for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mode\": \"basic\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"ipRange\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"host\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/trafficAnalysis",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"trafficAnalysis"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the traffic analysis settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"basic\",\n  \"customPieChartItems\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"ipRange\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"host\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/trafficAnalysis",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"trafficAnalysis"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "traffic",
							"item": [
								{
									"name": "Return the traffic analysis data for this network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/traffic?t0=<string>&timespan=<float>&deviceType=wireless",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"traffic"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days."
												},
												{
													"key": "deviceType",
													"value": "wireless",
													"description": "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage."
												}
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the traffic analysis data for this network. Traffic analysis with hostname visibility must be enabled on the network."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/traffic?t0=<string>&timespan=<float>&deviceType=wireless",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"traffic"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days."
														},
														{
															"key": "deviceType",
															"value": "wireless",
															"description": "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage."
														}
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "topology",
							"item": [
								{
									"name": "linkLayer",
									"item": [
										{
											"name": "List the LLDP and CDP information for all discovered devices and connections in a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/topology/linkLayer",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"topology",
														"linkLayer"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the LLDP and CDP information for all discovered devices and connections in a network. At least one MX or MS device must be in the network in order to build the topology."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/topology/linkLayer",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"topology",
																"linkLayer"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "syslogServers",
							"item": [
								{
									"name": "List the syslog servers for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/syslogServers",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"syslogServers"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the syslog servers for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/syslogServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"syslogServers"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update the syslog servers for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/syslogServers",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"syslogServers"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the syslog servers for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/syslogServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"syslogServers"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"servers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"roles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "switch",
							"item": [
								{
									"name": "stp",
									"item": [
										{
											"name": "Returns STP settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stp"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns STP settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stp"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Updates STP settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpBridgePriority\": [\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stp"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Updates STP settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpBridgePriority\": [\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"stpPriority\": \"<integer>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stp"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "stormControl",
									"item": [
										{
											"name": "Return the storm control configuration for a switch network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stormControl",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stormControl"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the storm control configuration for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stormControl",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stormControl"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"broadcastThreshold\": \"<integer>\",\n  \"multicastThreshold\": \"<integer>\",\n  \"unknownUnicastThreshold\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Update the storm control configuration for a switch network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"broadcastThreshold\": \"<integer>\",\n  \"multicastThreshold\": \"<integer>\",\n  \"unknownUnicastThreshold\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stormControl",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stormControl"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the storm control configuration for a switch network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"broadcastThreshold\": \"<integer>\",\n  \"multicastThreshold\": \"<integer>\",\n  \"unknownUnicastThreshold\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stormControl",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stormControl"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "stacks",
									"item": [
										{
											"name": "{switchStackId}",
											"item": [
												{
													"name": "routing",
													"item": [
														{
															"name": "staticRoutes",
															"item": [
																{
																	"name": "{staticRouteId}",
																	"item": [
																		{
																			"name": "Return a layer 3 static route for a switch stack",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"staticRoutes",
																						":static_route_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":static_route_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Return a layer 3 static route for a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"staticRoutes",
																								":static_route_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":static_route_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		},
																		{
																			"name": "Update a layer 3 static route for a switch stack",
																			"request": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"staticRoutes",
																						":static_route_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":static_route_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Update a layer 3 static route for a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"staticRoutes",
																								":static_route_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":static_route_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		},
																		{
																			"name": "Delete a layer 3 static route for a switch stack",
																			"request": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"staticRoutes",
																						":static_route_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":static_route_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Delete a layer 3 static route for a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes/:static_route_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"staticRoutes",
																								":static_route_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":static_route_id"
																								}
																							]
																						}
																					},
																					"status": "No Content",
																					"code": 204,
																					"_postman_previewlanguage": "text",
																					"header": [],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List layer 3 static routes for a switch stack",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"routing",
																				"staticRoutes"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":switch_stack_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "List layer 3 static routes for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"staticRoutes"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":switch_stack_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[]"
																		}
																	]
																},
																{
																	"name": "Create a layer 3 static route for a switch stack",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"routing",
																				"staticRoutes"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":switch_stack_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Create a layer 3 static route for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/staticRoutes",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"staticRoutes"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":switch_stack_id"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														},
														{
															"name": "interfaces",
															"item": [
																{
																	"name": "{interfaceId}",
																	"item": [
																		{
																			"name": "dhcp",
																			"item": [
																				{
																					"name": "Return a layer 3 interface DHCP configuration for a switch stack",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id/dhcp",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"interfaces",
																								":interface_id",
																								"dhcp"
																							],
																							"variable": [
																								{
																									"key": ":network_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":switch_stack_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":interface_id",
																									"value": "<string>"
																								}
																							]
																						},
																						"description": "Return a layer 3 interface DHCP configuration for a switch stack"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: apikey",
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>"
																									}
																								],
																								"url": {
																									"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id/dhcp",
																									"protocol": "https",
																									"host": [
																										"{{hostname}}"
																									],
																									"path": [
																										"networks",
																										":network_id",
																										"switch",
																										"stacks",
																										":switch_stack_id",
																										"routing",
																										"interfaces",
																										":interface_id",
																										"dhcp"
																									],
																									"variable": [
																										{
																											"key": ":network_id"
																										},
																										{
																											"key": ":switch_stack_id"
																										},
																										{
																											"key": ":interface_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"dhcpMode\": \"<string>\",\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameserversOption\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}"
																						}
																					]
																				},
																				{
																					"name": "Update a layer 3 interface DHCP configuration for a switch stack",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"dhcpMode\": \"dhcpRelay\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"30 minutes\",\n  \"dnsNameserversOption\": \"googlePublicDns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id/dhcp",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"interfaces",
																								":interface_id",
																								"dhcp"
																							],
																							"variable": [
																								{
																									"key": ":network_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":switch_stack_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":interface_id",
																									"value": "<string>"
																								}
																							]
																						},
																						"description": "Update a layer 3 interface DHCP configuration for a switch stack"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: apikey",
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"dhcpMode\": \"dhcpRelay\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"30 minutes\",\n  \"dnsNameserversOption\": \"googlePublicDns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id/dhcp",
																									"protocol": "https",
																									"host": [
																										"{{hostname}}"
																									],
																									"path": [
																										"networks",
																										":network_id",
																										"switch",
																										"stacks",
																										":switch_stack_id",
																										"routing",
																										"interfaces",
																										":interface_id",
																										"dhcp"
																									],
																									"variable": [
																										{
																											"key": ":network_id"
																										},
																										{
																											"key": ":switch_stack_id"
																										},
																										{
																											"key": ":interface_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Return a layer 3 interface from a switch stack",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"interfaces",
																						":interface_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":interface_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Return a layer 3 interface from a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"interfaces",
																								":interface_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":interface_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		},
																		{
																			"name": "Update a layer 3 interface for a switch stack",
																			"request": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"enabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"interfaces",
																						":interface_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":interface_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Update a layer 3 interface for a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"enabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"interfaces",
																								":interface_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":interface_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		},
																		{
																			"name": "Delete a layer 3 interface from a switch stack",
																			"request": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"interfaces",
																						":interface_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":switch_stack_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":interface_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Delete a layer 3 interface from a switch stack"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces/:interface_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"networks",
																								":network_id",
																								"switch",
																								"stacks",
																								":switch_stack_id",
																								"routing",
																								"interfaces",
																								":interface_id"
																							],
																							"variable": [
																								{
																									"key": ":network_id"
																								},
																								{
																									"key": ":switch_stack_id"
																								},
																								{
																									"key": ":interface_id"
																								}
																							]
																						}
																					},
																					"status": "No Content",
																					"code": 204,
																					"_postman_previewlanguage": "text",
																					"header": [],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List layer 3 interfaces for a switch stack",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"routing",
																				"interfaces"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":switch_stack_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "List layer 3 interfaces for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"interfaces"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":switch_stack_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[]"
																		}
																	]
																},
																{
																	"name": "Create a layer 3 interface for a switch stack",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"enabled\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"routing",
																				"interfaces"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":switch_stack_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Create a layer 3 interface for a switch stack"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"enabled\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/routing/interfaces",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"stacks",
																						":switch_stack_id",
																						"routing",
																						"interfaces"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":switch_stack_id"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "remove",
													"item": [
														{
															"name": "Remove a switch from a stack",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serial\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/remove",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"stacks",
																		":switch_stack_id",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":switch_stack_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Remove a switch from a stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"serial\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/remove",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"remove"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":switch_stack_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "add",
													"item": [
														{
															"name": "Add a switch to a stack",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serial\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/add",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"stacks",
																		":switch_stack_id",
																		"add"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":switch_stack_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Add a switch to a stack"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"serial\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id/add",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"stacks",
																				":switch_stack_id",
																				"add"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":switch_stack_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Show a switch stack",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stacks",
																":switch_stack_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":switch_stack_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Show a switch stack"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"stacks",
																		":switch_stack_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":switch_stack_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete a stack",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stacks",
																":switch_stack_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":switch_stack_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a stack"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/stacks/:switch_stack_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"stacks",
																		":switch_stack_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":switch_stack_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the switch stacks in a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stacks",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stacks"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the switch stacks in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stacks",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stacks"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Create a stack",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/stacks",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"stacks"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create a stack"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/stacks",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"stacks"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "Returns the switch network settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns the switch network settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vlan\": \"<integer>\",\n  \"useCombinedPower\": \"<boolean>\",\n  \"powerExceptions\": [\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"useNetworkSetting\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update switch network settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlan\": \"<integer>\",\n  \"useCombinedPower\": \"<boolean>\",\n  \"powerExceptions\": [\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update switch network settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlan\": \"<integer>\",\n  \"useCombinedPower\": \"<boolean>\",\n  \"powerExceptions\": [\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vlan\": \"<integer>\",\n  \"useCombinedPower\": \"<boolean>\",\n  \"powerExceptions\": [\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"useNetworkSetting\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"powerType\": \"redundant\"\n    }\n  ],\n  \"uplinkClientSampling\": {\n    \"enabled\": \"<boolean>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "routing",
									"item": [
										{
											"name": "ospf",
											"item": [
												{
													"name": "Return layer 3 OSPF routing configuration",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/routing/ospf",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"routing",
																"ospf"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return layer 3 OSPF routing configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/ospf",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"ospf"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update layer 3 OSPF routing configuration",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"helloTimerInSeconds\": \"<integer>\",\n  \"deadTimerInSeconds\": \"<integer>\",\n  \"areas\": [\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"stub\"\n    },\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"nssa\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": \"<boolean>\",\n    \"helloTimerInSeconds\": \"<integer>\",\n    \"deadTimerInSeconds\": \"<integer>\",\n    \"areas\": [\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"nssa\"\n      },\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"nssa\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": \"<boolean>\",\n  \"md5AuthenticationKey\": {\n    \"id\": \"<integer>\",\n    \"passphrase\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/routing/ospf",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"routing",
																"ospf"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update layer 3 OSPF routing configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"helloTimerInSeconds\": \"<integer>\",\n  \"deadTimerInSeconds\": \"<integer>\",\n  \"areas\": [\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"stub\"\n    },\n    {\n      \"areaId\": \"<string>\",\n      \"areaName\": \"<string>\",\n      \"areaType\": \"nssa\"\n    }\n  ],\n  \"v3\": {\n    \"enabled\": \"<boolean>\",\n    \"helloTimerInSeconds\": \"<integer>\",\n    \"deadTimerInSeconds\": \"<integer>\",\n    \"areas\": [\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"nssa\"\n      },\n      {\n        \"areaId\": \"<string>\",\n        \"areaName\": \"<string>\",\n        \"areaType\": \"nssa\"\n      }\n    ]\n  },\n  \"md5AuthenticationEnabled\": \"<boolean>\",\n  \"md5AuthenticationKey\": {\n    \"id\": \"<integer>\",\n    \"passphrase\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/ospf",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"ospf"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "multicast",
											"item": [
												{
													"name": "rendezvousPoints",
													"item": [
														{
															"name": "{rendezvousPointId}",
															"item": [
																{
																	"name": "Return a multicast rendezvous point",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvous_point_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":rendezvous_point_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return a multicast rendezvous point"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"routing",
																						"multicast",
																						"rendezvousPoints",
																						":rendezvous_point_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":rendezvous_point_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Delete a multicast rendezvous point",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvous_point_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":rendezvous_point_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Delete a multicast rendezvous point"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"routing",
																						"multicast",
																						"rendezvousPoints",
																						":rendezvous_point_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":rendezvous_point_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update a multicast rendezvous point",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints",
																				":rendezvous_point_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":rendezvous_point_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update a multicast rendezvous point"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints/:rendezvous_point_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"routing",
																						"multicast",
																						"rendezvousPoints",
																						":rendezvous_point_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":rendezvous_point_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														},
														{
															"name": "List multicast rendezvous points",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List multicast rendezvous points"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  [],\n  []\n]"
																}
															]
														},
														{
															"name": "Create a multicast rendezvous point",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"multicast",
																		"rendezvousPoints"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Create a multicast rendezvous point"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"interfaceIp\": \"<string>\",\n  \"multicastGroup\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast/rendezvousPoints",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"routing",
																				"multicast",
																				"rendezvousPoints"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "Return multicast settings for a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"routing",
																"multicast"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return multicast settings for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"multicast"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": \"<boolean>\",\n    \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n  },\n  \"overrides\": [\n    {\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n    },\n    {\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update multicast settings for a network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": \"<boolean>\",\n    \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n  },\n  \"overrides\": [\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"routing",
																"multicast"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update multicast settings for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"defaultSettings\": {\n    \"igmpSnoopingEnabled\": \"<boolean>\",\n    \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\"\n  },\n  \"overrides\": [\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"igmpSnoopingEnabled\": \"<boolean>\",\n      \"floodUnknownMulticastTrafficEnabled\": \"<boolean>\",\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"stacks\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/routing/multicast",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"routing",
																		"multicast"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "qosRules",
									"item": [
										{
											"name": "{qosRuleId}",
											"item": [
												{
													"name": "Return a quality of service rule",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules",
																":qos_rule_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":qos_rule_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a quality of service rule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"qosRules",
																		":qos_rule_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":qos_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"<string>\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}"
														}
													]
												},
												{
													"name": "Delete a quality of service rule",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules",
																":qos_rule_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":qos_rule_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a quality of service rule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"qosRules",
																		":qos_rule_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":qos_rule_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a quality of service rule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"TCP\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules",
																":qos_rule_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":qos_rule_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a quality of service rule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"TCP\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/:qos_rule_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"qosRules",
																		":qos_rule_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":qos_rule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "order",
											"item": [
												{
													"name": "Return the quality of service rule IDs by order in which they will be processed by the switch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/order",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules",
																"order"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the quality of service rule IDs by order in which they will be processed by the switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/order",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"qosRules",
																		"order"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the order in which the rules should be processed by the switch",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ruleIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/order",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules",
																"order"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the order in which the rules should be processed by the switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ruleIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules/order",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"qosRules",
																		"order"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List quality of service rules",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"qosRules"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List quality of service rules"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Add a quality of service rule",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"UDP\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"qosRules"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a quality of service rule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlan\": \"<integer>\",\n  \"protocol\": \"UDP\",\n  \"srcPort\": \"<integer>\",\n  \"srcPortRange\": \"<string>\",\n  \"dstPort\": \"<integer>\",\n  \"dstPortRange\": \"<string>\",\n  \"dscp\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/qosRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"qosRules"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "portSchedules",
									"item": [
										{
											"name": "{portScheduleId}",
											"item": [
												{
													"name": "Delete a switch port schedule",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules/:port_schedule_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"portSchedules",
																":port_schedule_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":port_schedule_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a switch port schedule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules/:port_schedule_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"portSchedules",
																		":port_schedule_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":port_schedule_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a switch port schedule",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules/:port_schedule_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"portSchedules",
																":port_schedule_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":port_schedule_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a switch port schedule"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules/:port_schedule_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"portSchedules",
																		":port_schedule_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":port_schedule_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List switch port schedules",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"portSchedules"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List switch port schedules"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"portSchedules"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Add a switch port schedule",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"portSchedules"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a switch port schedule"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"portSchedule\": {\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/portSchedules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"portSchedules"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "mtu",
									"item": [
										{
											"name": "Return the MTU configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/mtu",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"mtu"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the MTU configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/mtu",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"mtu"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"defaultMtuSize\": \"<integer>\",\n  \"overrides\": [\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the MTU configuration",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"defaultMtuSize\": \"<integer>\",\n  \"overrides\": [\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/mtu",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"mtu"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the MTU configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultMtuSize\": \"<integer>\",\n  \"overrides\": [\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"mtuSize\": \"<integer>\",\n      \"switches\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"switchProfiles\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/mtu",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"mtu"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "linkAggregations",
									"item": [
										{
											"name": "{linkAggregationId}",
											"item": [
												{
													"name": "Update a link aggregation group",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations/:link_aggregation_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"linkAggregations",
																":link_aggregation_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":link_aggregation_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a link aggregation group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations/:link_aggregation_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"linkAggregations",
																		":link_aggregation_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":link_aggregation_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Split a link aggregation group into separate ports",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations/:link_aggregation_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"linkAggregations",
																":link_aggregation_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":link_aggregation_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Split a link aggregation group into separate ports"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations/:link_aggregation_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"linkAggregations",
																		":link_aggregation_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":link_aggregation_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List link aggregation groups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"linkAggregations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List link aggregation groups"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"linkAggregations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Create a link aggregation group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"linkAggregations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create a link aggregation group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"switchPorts\": [\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ],\n  \"switchProfilePorts\": [\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    },\n    {\n      \"profile\": \"<string>\",\n      \"portId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/linkAggregations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"linkAggregations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "dscpToCosMappings",
									"item": [
										{
											"name": "Return the DSCP to CoS mappings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/dscpToCosMappings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"dscpToCosMappings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the DSCP to CoS mappings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/dscpToCosMappings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"dscpToCosMappings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"mappings\": [\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the DSCP to CoS mappings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mappings\": [\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/dscpToCosMappings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"dscpToCosMappings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the DSCP to CoS mappings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mappings\": [\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"dscp\": \"<integer>\",\n      \"cos\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/dscpToCosMappings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"dscpToCosMappings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "dhcpServerPolicy",
									"item": [
										{
											"name": "arpInspection",
											"item": [
												{
													"name": "warnings",
													"item": [
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "Return the devices that have a Dynamic ARP Inspection warning and their warnings",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/warnings/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"warnings",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return the devices that have a Dynamic ARP Inspection warning and their warnings"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/warnings/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"dhcpServerPolicy",
																						"arpInspection",
																						"warnings",
																						"byDevice"
																					],
																					"query": [
																						{
																							"key": "perPage",
																							"value": "<integer>",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						}
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "Link",
																					"value": "<string>",
																					"description": {
																						"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"supportsInspection\": \"<boolean>\",\n    \"hasTrustedPort\": \"<boolean>\"\n  },\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"supportsInspection\": \"<boolean>\",\n    \"hasTrustedPort\": \"<boolean>\"\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "trustedServers",
													"item": [
														{
															"name": "{trustedServerId}",
															"item": [
																{
																	"name": "Update a server that is trusted by Dynamic ARP Inspection on this network",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers/:trusted_server_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers",
																				":trusted_server_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":trusted_server_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update a server that is trusted by Dynamic ARP Inspection on this network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers/:trusted_server_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"dhcpServerPolicy",
																						"arpInspection",
																						"trustedServers",
																						":trusted_server_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":trusted_server_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"trustedServerId\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Remove a server from being trusted by Dynamic ARP Inspection on this network",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers/:trusted_server_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers",
																				":trusted_server_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":trusted_server_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Remove a server from being trusted by Dynamic ARP Inspection on this network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers/:trusted_server_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"dhcpServerPolicy",
																						"arpInspection",
																						"trustedServers",
																						":trusted_server_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":trusted_server_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Return the list of servers trusted by Dynamic ARP Inspection on this network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the list of servers trusted by Dynamic ARP Inspection on this network. These are also known as allow listed snoop entries"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"trustedServerId\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"vlan\": \"<integer>\",\n    \"ipv4\": {\n      \"address\": \"<string>\"\n    }\n  },\n  {\n    \"trustedServerId\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"vlan\": \"<integer>\",\n    \"ipv4\": {\n      \"address\": \"<string>\"\n    }\n  }\n]"
																}
															]
														},
														{
															"name": "Add a server to be trusted by Dynamic ARP Inspection on this network",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"dhcpServerPolicy",
																		"arpInspection",
																		"trustedServers"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Add a server to be trusted by Dynamic ARP Inspection on this network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy/arpInspection/trustedServers",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcpServerPolicy",
																				"arpInspection",
																				"trustedServers"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"trustedServerId\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"ipv4\": {\n    \"address\": \"<string>\"\n  }\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Return the DHCP server settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"dhcpServerPolicy"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"dhcpServerPolicy"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"defaultPolicy\": \"allow\",\n  \"blockedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"allowedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": \"<boolean>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update the DHCP server settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"defaultPolicy\": \"allow\",\n  \"allowedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"dhcpServerPolicy"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alerts\": {\n    \"email\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"defaultPolicy\": \"allow\",\n  \"allowedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedServers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"arpInspection\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/dhcpServerPolicy",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"dhcpServerPolicy"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "v4",
											"item": [
												{
													"name": "servers",
													"item": [
														{
															"name": "seen",
															"item": [
																{
																	"name": "Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/switch/dhcp/v4/servers/seen?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"switch",
																				"dhcp",
																				"v4",
																				"servers",
																				"seen"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/switch/dhcp/v4/servers/seen?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"switch",
																						"dhcp",
																						"v4",
																						"servers",
																						"seen"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						}
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "Link",
																					"value": "<string>",
																					"description": {
																						"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"vlan\": \"<integer>\",\n    \"clientId\": \"<string>\",\n    \"isAllowed\": \"<boolean>\",\n    \"lastSeenAt\": \"<dateTime>\",\n    \"seenBy\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"type\": \"discovered\",\n    \"device\": {\n      \"serial\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"interface\": {\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    },\n    \"ipv4\": {\n      \"address\": \"<string>\",\n      \"subnet\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    \"isConfigured\": \"<boolean>\",\n    \"lastAck\": {\n      \"ts\": \"<dateTime>\",\n      \"ipv4\": {\n        \"address\": \"<string>\"\n      }\n    },\n    \"lastPacket\": {\n      \"source\": {\n        \"mac\": \"<string>\",\n        \"ipv4\": {\n          \"address\": \"<string>\"\n        },\n        \"port\": \"<integer>\"\n      },\n      \"destination\": {\n        \"mac\": \"<string>\",\n        \"ipv4\": {\n          \"address\": \"<string>\"\n        },\n        \"port\": \"<integer>\"\n      },\n      \"type\": \"<string>\",\n      \"ethernet\": {\n        \"type\": \"<string>\"\n      },\n      \"ip\": {\n        \"id\": \"<string>\",\n        \"version\": 4,\n        \"length\": \"<integer>\",\n        \"headerLength\": \"<integer>\",\n        \"protocol\": \"<integer>\",\n        \"ttl\": \"<integer>\",\n        \"dscp\": {\n          \"tag\": \"<integer>\",\n          \"ecn\": \"<integer>\"\n        }\n      },\n      \"udp\": {\n        \"length\": \"<integer>\",\n        \"checksum\": \"<string>\"\n      },\n      \"fields\": {\n        \"op\": \"<integer>\",\n        \"htype\": \"<integer>\",\n        \"hlen\": \"<integer>\",\n        \"hops\": \"<integer>\",\n        \"xid\": \"<string>\",\n        \"secs\": \"<integer>\",\n        \"flags\": \"<string>\",\n        \"ciaddr\": \"<string>\",\n        \"yiaddr\": \"<string>\",\n        \"siaddr\": \"<string>\",\n        \"giaddr\": \"<string>\",\n        \"chaddr\": \"<string>\",\n        \"sname\": \"<string>\",\n        \"magicCookie\": \"<string>\",\n        \"options\": [\n          {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"mac\": \"<string>\",\n    \"vlan\": \"<integer>\",\n    \"clientId\": \"<string>\",\n    \"isAllowed\": \"<boolean>\",\n    \"lastSeenAt\": \"<dateTime>\",\n    \"seenBy\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ],\n    \"type\": \"discovered\",\n    \"device\": {\n      \"serial\": \"<string>\",\n      \"name\": \"<string>\",\n      \"url\": \"<string>\",\n      \"interface\": {\n        \"name\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    },\n    \"ipv4\": {\n      \"address\": \"<string>\",\n      \"subnet\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    \"isConfigured\": \"<boolean>\",\n    \"lastAck\": {\n      \"ts\": \"<dateTime>\",\n      \"ipv4\": {\n        \"address\": \"<string>\"\n      }\n    },\n    \"lastPacket\": {\n      \"source\": {\n        \"mac\": \"<string>\",\n        \"ipv4\": {\n          \"address\": \"<string>\"\n        },\n        \"port\": \"<integer>\"\n      },\n      \"destination\": {\n        \"mac\": \"<string>\",\n        \"ipv4\": {\n          \"address\": \"<string>\"\n        },\n        \"port\": \"<integer>\"\n      },\n      \"type\": \"<string>\",\n      \"ethernet\": {\n        \"type\": \"<string>\"\n      },\n      \"ip\": {\n        \"id\": \"<string>\",\n        \"version\": 6,\n        \"length\": \"<integer>\",\n        \"headerLength\": \"<integer>\",\n        \"protocol\": \"<integer>\",\n        \"ttl\": \"<integer>\",\n        \"dscp\": {\n          \"tag\": \"<integer>\",\n          \"ecn\": \"<integer>\"\n        }\n      },\n      \"udp\": {\n        \"length\": \"<integer>\",\n        \"checksum\": \"<string>\"\n      },\n      \"fields\": {\n        \"op\": \"<integer>\",\n        \"htype\": \"<integer>\",\n        \"hlen\": \"<integer>\",\n        \"hops\": \"<integer>\",\n        \"xid\": \"<string>\",\n        \"secs\": \"<integer>\",\n        \"flags\": \"<string>\",\n        \"ciaddr\": \"<string>\",\n        \"yiaddr\": \"<string>\",\n        \"siaddr\": \"<string>\",\n        \"giaddr\": \"<string>\",\n        \"chaddr\": \"<string>\",\n        \"sname\": \"<string>\",\n        \"magicCookie\": \"<string>\",\n        \"options\": [\n          {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"name\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "alternateManagementInterface",
									"item": [
										{
											"name": "Return the switch alternate management interface for the network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/alternateManagementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the switch alternate management interface for the network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/alternateManagementInterface",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the switch alternate management interface for the network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"snmp\",\n    \"syslog\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/alternateManagementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"alternateManagementInterface"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the switch alternate management interface for the network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"vlanId\": \"<integer>\",\n  \"protocols\": [\n    \"snmp\",\n    \"syslog\"\n  ],\n  \"switches\": [\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    },\n    {\n      \"serial\": \"<string>\",\n      \"alternateManagementIp\": \"<string>\",\n      \"subnetMask\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/alternateManagementInterface",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"alternateManagementInterface"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "accessPolicies",
									"item": [
										{
											"name": "{accessPolicyNumber}",
											"item": [
												{
													"name": "Return a specific access policy for a switch network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessPolicies",
																":access_policy_number"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":access_policy_number",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a specific access policy for a switch network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"accessPolicies",
																		":access_policy_number"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":access_policy_number"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"Multi-Host\",\n  \"accessPolicyType\": \"802.1x\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Update an access policy for a switch network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"Single-Host\",\n  \"accessPolicyType\": \"802.1x\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"both\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessPolicies",
																":access_policy_number"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":access_policy_number",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"Single-Host\",\n  \"accessPolicyType\": \"802.1x\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"both\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"accessPolicies",
																		":access_policy_number"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":access_policy_number"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"Multi-Host\",\n  \"accessPolicyType\": \"802.1x\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete an access policy for a switch network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessPolicies",
																":access_policy_number"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":access_policy_number",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete an access policy for a switch network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies/:access_policy_number",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"switch",
																		"accessPolicies",
																		":access_policy_number"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":access_policy_number"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the access policies for a switch network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"accessPolicies"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the access policies for a switch network. Only returns access policies with 'my RADIUS server' as authentication method"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessPolicies"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"<string>\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"radius\": {\n      \"criticalAuth\": {\n        \"dataVlanId\": \"<integer>\",\n        \"voiceVlanId\": \"<integer>\",\n        \"suspendPortBounce\": \"<boolean>\"\n      },\n      \"failedAuthVlanId\": \"<integer>\",\n      \"reAuthenticationInterval\": \"<integer>\"\n    },\n    \"guestPortBouncing\": \"<boolean>\",\n    \"radiusTestingEnabled\": \"<boolean>\",\n    \"radiusCoaSupportEnabled\": \"<boolean>\",\n    \"radiusAccountingEnabled\": \"<boolean>\",\n    \"radiusAccountingServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"radiusGroupAttribute\": \"<string>\",\n    \"hostMode\": \"Multi-Host\",\n    \"accessPolicyType\": \"MAC authentication bypass\",\n    \"increaseAccessSpeed\": \"<boolean>\",\n    \"guestVlanId\": \"<integer>\",\n    \"dot1x\": {\n      \"controlDirection\": \"inbound\"\n    },\n    \"voiceVlanClients\": \"<boolean>\",\n    \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n    \"urlRedirectWalledGardenRanges\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"radius\": {\n      \"criticalAuth\": {\n        \"dataVlanId\": \"<integer>\",\n        \"voiceVlanId\": \"<integer>\",\n        \"suspendPortBounce\": \"<boolean>\"\n      },\n      \"failedAuthVlanId\": \"<integer>\",\n      \"reAuthenticationInterval\": \"<integer>\"\n    },\n    \"guestPortBouncing\": \"<boolean>\",\n    \"radiusTestingEnabled\": \"<boolean>\",\n    \"radiusCoaSupportEnabled\": \"<boolean>\",\n    \"radiusAccountingEnabled\": \"<boolean>\",\n    \"radiusAccountingServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"radiusGroupAttribute\": \"<string>\",\n    \"hostMode\": \"Multi-Auth\",\n    \"accessPolicyType\": \"MAC authentication bypass\",\n    \"increaseAccessSpeed\": \"<boolean>\",\n    \"guestVlanId\": \"<integer>\",\n    \"dot1x\": {\n      \"controlDirection\": \"inbound\"\n    },\n    \"voiceVlanClients\": \"<boolean>\",\n    \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n    \"urlRedirectWalledGardenRanges\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										},
										{
											"name": "Create an access policy for a switch network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"hostMode\": \"Multi-Host\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"accessPolicyType\": \"MAC authentication bypass\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"accessPolicies"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"hostMode\": \"Multi-Host\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"accessPolicyType\": \"MAC authentication bypass\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessPolicies",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessPolicies"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radius\": {\n    \"criticalAuth\": {\n      \"dataVlanId\": \"<integer>\",\n      \"voiceVlanId\": \"<integer>\",\n      \"suspendPortBounce\": \"<boolean>\"\n    },\n    \"failedAuthVlanId\": \"<integer>\",\n    \"reAuthenticationInterval\": \"<integer>\"\n  },\n  \"guestPortBouncing\": \"<boolean>\",\n  \"radiusTestingEnabled\": \"<boolean>\",\n  \"radiusCoaSupportEnabled\": \"<boolean>\",\n  \"radiusAccountingEnabled\": \"<boolean>\",\n  \"radiusAccountingServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"radiusGroupAttribute\": \"<string>\",\n  \"hostMode\": \"Multi-Host\",\n  \"accessPolicyType\": \"802.1x\",\n  \"increaseAccessSpeed\": \"<boolean>\",\n  \"guestVlanId\": \"<integer>\",\n  \"dot1x\": {\n    \"controlDirection\": \"inbound\"\n  },\n  \"voiceVlanClients\": \"<boolean>\",\n  \"urlRedirectWalledGardenEnabled\": \"<boolean>\",\n  \"urlRedirectWalledGardenRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "accessControlLists",
									"item": [
										{
											"name": "Return the access control lists for a MS network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/accessControlLists",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"accessControlLists"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the access control lists for a MS network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessControlLists",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessControlLists"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"allow\",\n      \"ipVersion\": \"any\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"deny\",\n      \"ipVersion\": \"any\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the access control lists for a MS network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"ipv4\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/switch/accessControlLists",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"switch",
														"accessControlLists"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the access control lists for a MS network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"ipVersion\": \"ipv4\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/switch/accessControlLists",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"switch",
																"accessControlLists"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"allow\",\n      \"ipVersion\": \"any\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    },\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"deny\",\n      \"ipVersion\": \"any\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstCidr\": \"<string>\",\n      \"dstPort\": \"<string>\",\n      \"vlan\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "split",
							"item": [
								{
									"name": "Split a combined network into individual networks for each type of device",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/split",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"split"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Split a combined network into individual networks for each type of device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/split",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"split"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"resultingNetworks\": [\n    {\n      \"id\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timeZone\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enrollmentString\": \"<string>\",\n      \"url\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"isBoundToConfigTemplate\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"productTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"timeZone\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"enrollmentString\": \"<string>\",\n      \"url\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"isBoundToConfigTemplate\": \"<boolean>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "splashLoginAttempts",
							"item": [
								{
									"name": "List the splash login attempts for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/splashLoginAttempts?ssidNumber=10&loginIdentifier=<string>&timespan=<integer>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"splashLoginAttempts"
											],
											"query": [
												{
													"key": "ssidNumber",
													"value": "10",
													"description": "Only return the login attempts for the specified SSID"
												},
												{
													"key": "loginIdentifier",
													"value": "<string>",
													"description": "The username, email, or phone number used during login"
												},
												{
													"key": "timespan",
													"value": "<integer>",
													"description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
												}
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the splash login attempts for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/splashLoginAttempts?ssidNumber=10&loginIdentifier=<string>&timespan=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"splashLoginAttempts"
													],
													"query": [
														{
															"key": "ssidNumber",
															"value": "10",
															"description": "Only return the login attempts for the specified SSID"
														},
														{
															"key": "loginIdentifier",
															"value": "<string>",
															"description": "The username, email, or phone number used during login"
														},
														{
															"key": "timespan",
															"value": "<integer>",
															"description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
														}
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "snmp",
							"item": [
								{
									"name": "Return the SNMP settings for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/snmp",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"snmp"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the SNMP settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/snmp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"snmp"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update the SNMP settings for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"access\": \"community\",\n  \"communityString\": \"<string>\",\n  \"users\": [\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    },\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/snmp",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"snmp"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the SNMP settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access\": \"community\",\n  \"communityString\": \"<string>\",\n  \"users\": [\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    },\n    {\n      \"username\": \"<string>\",\n      \"passphrase\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/snmp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"snmp"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "sm",
							"item": [
								{
									"name": "users",
									"item": [
										{
											"name": "{userId}",
											"item": [
												{
													"name": "softwares",
													"item": [
														{
															"name": "Get a list of softwares associated with a user",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/users/:user_id/softwares",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"users",
																		":user_id",
																		"softwares"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":user_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get a list of softwares associated with a user"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/users/:user_id/softwares",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"users",
																				":user_id",
																				"softwares"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":user_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"appId\": \"<string>\",\n    \"bundleSize\": \"<integer>\",\n    \"createdAt\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"dynamicSize\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"identifier\": \"<string>\",\n    \"installedAt\": \"<string>\",\n    \"toInstall\": \"<boolean>\",\n    \"iosRedemptionCode\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"itunesId\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"redemptionCode\": \"<integer>\",\n    \"shortVersion\": \"<string>\",\n    \"status\": \"<string>\",\n    \"toUninstall\": \"<boolean>\",\n    \"uninstalledAt\": \"<string>\",\n    \"updatedAt\": \"<string>\",\n    \"vendor\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"appId\": \"<string>\",\n    \"bundleSize\": \"<integer>\",\n    \"createdAt\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"dynamicSize\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"identifier\": \"<string>\",\n    \"installedAt\": \"<string>\",\n    \"toInstall\": \"<boolean>\",\n    \"iosRedemptionCode\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"itunesId\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"redemptionCode\": \"<integer>\",\n    \"shortVersion\": \"<string>\",\n    \"status\": \"<string>\",\n    \"toUninstall\": \"<boolean>\",\n    \"uninstalledAt\": \"<string>\",\n    \"updatedAt\": \"<string>\",\n    \"vendor\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "deviceProfiles",
													"item": [
														{
															"name": "Get the profiles associated with a user",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/users/:user_id/deviceProfiles",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"users",
																		":user_id",
																		"deviceProfiles"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":user_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get the profiles associated with a user"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/users/:user_id/deviceProfiles",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"users",
																				":user_id",
																				"deviceProfiles"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":user_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"deviceId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isEncrypted\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"profileData\": \"<string>\",\n    \"profileIdentifier\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"deviceId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isEncrypted\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"profileData\": \"<string>\",\n    \"profileIdentifier\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "List the owners in an SM network with various specified fields and filters",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/users?ids=<string>&ids=<string>&usernames=<string>&usernames=<string>&emails=<string>&emails=<string>&scope=<string>&scope=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"users"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>",
															"description": "Filter users by id(s)."
														},
														{
															"key": "ids",
															"value": "<string>",
															"description": "Filter users by id(s)."
														},
														{
															"key": "usernames",
															"value": "<string>",
															"description": "Filter users by username(s)."
														},
														{
															"key": "usernames",
															"value": "<string>",
															"description": "Filter users by username(s)."
														},
														{
															"key": "emails",
															"value": "<string>",
															"description": "Filter users by email(s)."
														},
														{
															"key": "emails",
															"value": "<string>",
															"description": "Filter users by email(s)."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the owners in an SM network with various specified fields and filters"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/users?ids=<string>&usernames=<string>&emails=<string>&scope=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"users"
															],
															"query": [
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Filter users by id(s)."
																},
																{
																	"key": "usernames",
																	"value": "<string>",
																	"description": "Filter users by username(s)."
																},
																{
																	"key": "emails",
																	"value": "<string>",
																	"description": "Filter users by email(s)."
																},
																{
																	"key": "scope",
																	"value": "<string>",
																	"description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"hasPassword\": \"<boolean>\",\n    \"tags\": \"<string>\",\n    \"adGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"azureAdGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"samlGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"asmGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"isExternal\": \"<boolean>\",\n    \"displayName\": \"<string>\",\n    \"hasIdentityCertificate\": \"<boolean>\",\n    \"userThumbnail\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"email\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"hasPassword\": \"<boolean>\",\n    \"tags\": \"<string>\",\n    \"adGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"azureAdGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"samlGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"asmGroups\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"isExternal\": \"<boolean>\",\n    \"displayName\": \"<string>\",\n    \"hasIdentityCertificate\": \"<boolean>\",\n    \"userThumbnail\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "userAccessDevices",
									"item": [
										{
											"name": "{userAccessDeviceId}",
											"item": [
												{
													"name": "Delete a User Access Device",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/userAccessDevices/:user_access_device_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"userAccessDevices",
																":user_access_device_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":user_access_device_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a User Access Device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/userAccessDevices/:user_access_device_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"userAccessDevices",
																		":user_access_device_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":user_access_device_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List User Access Devices and its Trusted Access Connections",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/userAccessDevices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"userAccessDevices"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List User Access Devices and its Trusted Access Connections"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/userAccessDevices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"userAccessDevices"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"systemType\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedAccessConnections\": [\n      {\n        \"trustedAccessConfigId\": \"<string>\",\n        \"downloadedAt\": \"<string>\",\n        \"scepCompletedAt\": \"<dateTime>\",\n        \"lastConnectedAt\": \"<dateTime>\"\n      },\n      {\n        \"trustedAccessConfigId\": \"<string>\",\n        \"downloadedAt\": \"<string>\",\n        \"scepCompletedAt\": \"<dateTime>\",\n        \"lastConnectedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"systemType\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"username\": \"<string>\",\n    \"email\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"trustedAccessConnections\": [\n      {\n        \"trustedAccessConfigId\": \"<string>\",\n        \"downloadedAt\": \"<string>\",\n        \"scepCompletedAt\": \"<dateTime>\",\n        \"lastConnectedAt\": \"<dateTime>\"\n      },\n      {\n        \"trustedAccessConfigId\": \"<string>\",\n        \"downloadedAt\": \"<string>\",\n        \"scepCompletedAt\": \"<dateTime>\",\n        \"lastConnectedAt\": \"<dateTime>\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "trustedAccessConfigs",
									"item": [
										{
											"name": "List Trusted Access Configs",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/trustedAccessConfigs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"trustedAccessConfigs"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List Trusted Access Configs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/trustedAccessConfigs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"trustedAccessConfigs"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"ssidName\": \"<string>\",\n    \"name\": \"<string>\",\n    \"scope\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeboundType\": \"dynamic\",\n    \"sendExpirationEmails\": \"<boolean>\",\n    \"notifyTimeBeforeAccessEnds\": \"<integer>\",\n    \"additionalEmailText\": \"<string>\",\n    \"accessStartAt\": \"<dateTime>\",\n    \"accessEndAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"ssidName\": \"<string>\",\n    \"name\": \"<string>\",\n    \"scope\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeboundType\": \"static\",\n    \"sendExpirationEmails\": \"<boolean>\",\n    \"notifyTimeBeforeAccessEnds\": \"<integer>\",\n    \"additionalEmailText\": \"<string>\",\n    \"accessStartAt\": \"<dateTime>\",\n    \"accessEndAt\": \"<dateTime>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "targetGroups",
									"item": [
										{
											"name": "{targetGroupId}",
											"item": [
												{
													"name": "Return a target group",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id?withDetails=<boolean>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"targetGroups",
																":target_group_id"
															],
															"query": [
																{
																	"key": "withDetails",
																	"value": "<boolean>",
																	"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":target_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a target group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id?withDetails=<boolean>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"targetGroups",
																		":target_group_id"
																	],
																	"query": [
																		{
																			"key": "withDetails",
																			"value": "<boolean>",
																			"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":target_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update a target group",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"targetGroups",
																":target_group_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":target_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a target group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"targetGroups",
																		":target_group_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":target_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete a target group from a network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"targetGroups",
																":target_group_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":target_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a target group from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups/:target_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"targetGroups",
																		":target_group_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":target_group_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the target groups in this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups?withDetails=<boolean>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"targetGroups"
													],
													"query": [
														{
															"key": "withDetails",
															"value": "<boolean>",
															"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the target groups in this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups?withDetails=<boolean>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"targetGroups"
															],
															"query": [
																{
																	"key": "withDetails",
																	"value": "<boolean>",
																	"description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Add a target group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"targetGroups"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a target group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"scope\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/targetGroups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"targetGroups"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "profiles",
									"item": [
										{
											"name": "List all profiles in a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/profiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"profiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List all profiles in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/profiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"profiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scope\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scope\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "{deviceId}",
											"item": [
												{
													"name": "wlanLists",
													"item": [
														{
															"name": "List the saved SSID names on a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/wlanLists",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"wlanLists"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the saved SSID names on a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/wlanLists",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"wlanLists"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"createdAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"xml\": \"<string>\"\n  },\n  {\n    \"createdAt\": \"<string>\",\n    \"id\": \"<string>\",\n    \"xml\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "unenroll",
													"item": [
														{
															"name": "Unenroll a device",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/unenroll",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"unenroll"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Unenroll a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/unenroll",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"unenroll"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "softwares",
													"item": [
														{
															"name": "Get a list of softwares associated with a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/softwares",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"softwares"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get a list of softwares associated with a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/softwares",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"softwares"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"appId\": \"<string>\",\n    \"bundleSize\": \"<integer>\",\n    \"createdAt\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"dynamicSize\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"identifier\": \"<string>\",\n    \"installedAt\": \"<string>\",\n    \"toInstall\": \"<boolean>\",\n    \"iosRedemptionCode\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"itunesId\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"redemptionCode\": \"<integer>\",\n    \"shortVersion\": \"<string>\",\n    \"status\": \"<string>\",\n    \"toUninstall\": \"<boolean>\",\n    \"uninstalledAt\": \"<string>\",\n    \"updatedAt\": \"<string>\",\n    \"vendor\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"appId\": \"<string>\",\n    \"bundleSize\": \"<integer>\",\n    \"createdAt\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"dynamicSize\": \"<integer>\",\n    \"id\": \"<string>\",\n    \"identifier\": \"<string>\",\n    \"installedAt\": \"<string>\",\n    \"toInstall\": \"<boolean>\",\n    \"iosRedemptionCode\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"itunesId\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"name\": \"<string>\",\n    \"path\": \"<string>\",\n    \"redemptionCode\": \"<integer>\",\n    \"shortVersion\": \"<string>\",\n    \"status\": \"<string>\",\n    \"toUninstall\": \"<boolean>\",\n    \"uninstalledAt\": \"<string>\",\n    \"updatedAt\": \"<string>\",\n    \"vendor\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "securityCenters",
													"item": [
														{
															"name": "List the security centers on a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/securityCenters",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"securityCenters"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the security centers on a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/securityCenters",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"securityCenters"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"isRooted\": \"<boolean>\",\n    \"hasAntiVirus\": \"<boolean>\",\n    \"antiVirusName\": \"<string>\",\n    \"isFireWallEnabled\": \"<boolean>\",\n    \"hasFireWallInstalled\": \"<boolean>\",\n    \"fireWallName\": \"<string>\",\n    \"isDiskEncrypted\": \"<boolean>\",\n    \"isAutoLoginDisabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"runningProcs\": \"<string>\"\n  },\n  {\n    \"isRooted\": \"<boolean>\",\n    \"hasAntiVirus\": \"<boolean>\",\n    \"antiVirusName\": \"<string>\",\n    \"isFireWallEnabled\": \"<boolean>\",\n    \"hasFireWallInstalled\": \"<boolean>\",\n    \"fireWallName\": \"<string>\",\n    \"isDiskEncrypted\": \"<boolean>\",\n    \"isAutoLoginDisabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"runningProcs\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "restrictions",
													"item": [
														{
															"name": "List the restrictions on a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/restrictions",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"restrictions"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the restrictions on a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/restrictions",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"restrictions"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[]"
																}
															]
														}
													]
												},
												{
													"name": "refreshDetails",
													"item": [
														{
															"name": "Refresh the details of a device",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/refreshDetails",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"refreshDetails"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Refresh the details of a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/refreshDetails",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"refreshDetails"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "performanceHistory",
													"item": [
														{
															"name": "Return historical records of various Systems Manager client metrics for desktop devices.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/performanceHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"performanceHistory"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return historical records of various Systems Manager client metrics for desktop devices."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/performanceHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"performanceHistory"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"cpuPercentUsed\": \"<float>\",\n    \"memFree\": \"<integer>\",\n    \"memWired\": \"<integer>\",\n    \"memActive\": \"<integer>\",\n    \"memInactive\": \"<integer>\",\n    \"networkSent\": \"<integer>\",\n    \"networkReceived\": \"<integer>\",\n    \"swapUsed\": \"<integer>\",\n    \"diskUsage\": {\n      \"c\": {\n        \"used\": \"<integer>\",\n        \"space\": \"<integer>\"\n      }\n    },\n    \"ts\": \"<string>\"\n  },\n  {\n    \"cpuPercentUsed\": \"<float>\",\n    \"memFree\": \"<integer>\",\n    \"memWired\": \"<integer>\",\n    \"memActive\": \"<integer>\",\n    \"memInactive\": \"<integer>\",\n    \"networkSent\": \"<integer>\",\n    \"networkReceived\": \"<integer>\",\n    \"swapUsed\": \"<integer>\",\n    \"diskUsage\": {\n      \"c\": {\n        \"used\": \"<integer>\",\n        \"space\": \"<integer>\"\n      }\n    },\n    \"ts\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "networkAdapters",
													"item": [
														{
															"name": "List the network adapters of a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/networkAdapters",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"networkAdapters"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the network adapters of a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/networkAdapters",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"networkAdapters"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"dhcpServer\": \"<string>\",\n    \"dnsServer\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\"\n  },\n  {\n    \"dhcpServer\": \"<string>\",\n    \"dnsServer\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "deviceProfiles",
													"item": [
														{
															"name": "Get the installed profiles associated with a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/deviceProfiles",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"deviceProfiles"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get the installed profiles associated with a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/deviceProfiles",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"deviceProfiles"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"deviceId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isEncrypted\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"profileData\": \"<string>\",\n    \"profileIdentifier\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"deviceId\": \"<string>\",\n    \"id\": \"<string>\",\n    \"isEncrypted\": \"<boolean>\",\n    \"isManaged\": \"<boolean>\",\n    \"profileData\": \"<string>\",\n    \"profileIdentifier\": \"<string>\",\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "deviceCommandLogs",
													"item": [
														{
															"name": "Return historical records of commands sent to Systems Manager devices",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/deviceCommandLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"deviceCommandLogs"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return historical records of commands sent to Systems Manager devices. Note that this will include the name of the Dashboard user who initiated the command if it was generated by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out of any reports."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/deviceCommandLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"deviceCommandLogs"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"action\": \"<string>\",\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"dashboardUser\": \"<string>\",\n    \"ts\": \"<string>\"\n  },\n  {\n    \"action\": \"<string>\",\n    \"name\": \"<string>\",\n    \"details\": \"<string>\",\n    \"dashboardUser\": \"<string>\",\n    \"ts\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "desktopLogs",
													"item": [
														{
															"name": "Return historical records of various Systems Manager network connection details for desktop devices.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/desktopLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"desktopLogs"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return historical records of various Systems Manager network connection details for desktop devices."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/desktopLogs?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"desktopLogs"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"measuredAt\": \"<string>\",\n    \"user\": \"<string>\",\n    \"networkDevice\": \"<string>\",\n    \"networkDriver\": \"<string>\",\n    \"wifiChannel\": \"<string>\",\n    \"wifiAuth\": \"<string>\",\n    \"wifiBssid\": \"<string>\",\n    \"wifiSsid\": \"<string>\",\n    \"wifiRssi\": \"<string>\",\n    \"wifiNoise\": \"<string>\",\n    \"dhcpServer\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"networkMTU\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"publicIP\": \"<string>\",\n    \"dnsServer\": \"<string>\",\n    \"ts\": \"<string>\"\n  },\n  {\n    \"measuredAt\": \"<string>\",\n    \"user\": \"<string>\",\n    \"networkDevice\": \"<string>\",\n    \"networkDriver\": \"<string>\",\n    \"wifiChannel\": \"<string>\",\n    \"wifiAuth\": \"<string>\",\n    \"wifiBssid\": \"<string>\",\n    \"wifiSsid\": \"<string>\",\n    \"wifiRssi\": \"<string>\",\n    \"wifiNoise\": \"<string>\",\n    \"dhcpServer\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"networkMTU\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"publicIP\": \"<string>\",\n    \"dnsServer\": \"<string>\",\n    \"ts\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "connectivity",
													"item": [
														{
															"name": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/connectivity?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"connectivity"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard)."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/connectivity?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"connectivity"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"firstSeenAt\": \"<string>\",\n    \"lastSeenAt\": \"<string>\"\n  },\n  {\n    \"firstSeenAt\": \"<string>\",\n    \"lastSeenAt\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "certs",
													"item": [
														{
															"name": "List the certs on a device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/certs",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"certs"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the certs on a device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/certs",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"certs"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"certPem\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"id\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"notValidAfter\": \"<string>\",\n    \"notValidBefore\": \"<string>\",\n    \"certPem\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"issuer\": \"<string>\",\n    \"subject\": \"<string>\",\n    \"id\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "cellularUsageHistory",
													"item": [
														{
															"name": "Return the client's daily cellular data usage history",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/cellularUsageHistory",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		":device_id",
																		"cellularUsageHistory"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":device_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the client's daily cellular data usage history. Usage data is in kilobytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sm/devices/:device_id/cellularUsageHistory",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sm",
																				"devices",
																				":device_id",
																				"cellularUsageHistory"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":device_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"received\": \"<float>\",\n    \"sent\": \"<float>\",\n    \"ts\": \"<string>\"\n  },\n  {\n    \"received\": \"<float>\",\n    \"sent\": \"<float>\",\n    \"ts\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "wipe",
											"item": [
												{
													"name": "Wipe a device",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\",\n  \"pin\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/wipe",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"wipe"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Wipe a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\",\n  \"pin\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/wipe",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"wipe"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "move",
											"item": [
												{
													"name": "Move a set of devices to a new network",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newNetwork\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/move",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"move"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Move a set of devices to a new network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"newNetwork\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/move",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"move"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"newNetwork\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "modifyTags",
											"item": [
												{
													"name": "Add, delete, or update the tags of a set of devices",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updateAction\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/modifyTags",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"modifyTags"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Add, delete, or update the tags of a set of devices"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"updateAction\": \"<string>\",\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/modifyTags",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"modifyTags"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"wifiMac\": \"<string>\",\n    \"serial\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"wifiMac\": \"<string>\",\n    \"serial\": \"<string>\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "lock",
											"item": [
												{
													"name": "Lock a set of devices",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pin\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/lock",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"lock"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Lock a set of devices"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"pin\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/lock",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"lock"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "fields",
											"item": [
												{
													"name": "Modify the fields of a device",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceFields\": {\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/fields",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"fields"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Modify the fields of a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"deviceFields\": {\n    \"name\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  \"wifiMac\": \"<string>\",\n  \"id\": \"<string>\",\n  \"serial\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/fields",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"wifiMac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"wifiMac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"notes\": \"<string>\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "checkin",
											"item": [
												{
													"name": "Force check-in a set of devices",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices/checkin",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices",
																"checkin"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Force check-in a set of devices"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"wifiMacs\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scope\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/devices/checkin",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"devices",
																		"checkin"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the devices enrolled in an SM network with various specified fields and filters",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/devices?fields=<string>&fields=<string>&wifiMacs=<string>&wifiMacs=<string>&serials=<string>&serials=<string>&ids=<string>&ids=<string>&scope=<string>&scope=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"devices"
													],
													"query": [
														{
															"key": "fields",
															"value": "<string>",
															"description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url."
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url."
														},
														{
															"key": "wifiMacs",
															"value": "<string>",
															"description": "Filter devices by wifi mac(s)."
														},
														{
															"key": "wifiMacs",
															"value": "<string>",
															"description": "Filter devices by wifi mac(s)."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Filter devices by serial(s)."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Filter devices by serial(s)."
														},
														{
															"key": "ids",
															"value": "<string>",
															"description": "Filter devices by id(s)."
														},
														{
															"key": "ids",
															"value": "<string>",
															"description": "Filter devices by id(s)."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the devices enrolled in an SM network with various specified fields and filters"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/devices?fields=<string>&wifiMacs=<string>&serials=<string>&ids=<string>&scope=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"devices"
															],
															"query": [
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Additional fields that will be displayed for each device.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url."
																},
																{
																	"key": "wifiMacs",
																	"value": "<string>",
																	"description": "Filter devices by wifi mac(s)."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Filter devices by serial(s)."
																},
																{
																	"key": "ids",
																	"value": "<string>",
																	"description": "Filter devices by id(s)."
																},
																{
																	"key": "scope",
																	"value": "<string>",
																	"description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ssid\": \"<string>\",\n    \"wifiMac\": \"<string>\",\n    \"osName\": \"<string>\",\n    \"systemModel\": \"<string>\",\n    \"uuid\": \"<string>\",\n    \"serialNumber\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"notes\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ssid\": \"<string>\",\n    \"wifiMac\": \"<string>\",\n    \"osName\": \"<string>\",\n    \"systemModel\": \"<string>\",\n    \"uuid\": \"<string>\",\n    \"serialNumber\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"notes\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "bypassActivationLockAttempts",
									"item": [
										{
											"name": "{attemptId}",
											"item": [
												{
													"name": "Bypass activation lock attempt status",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/bypassActivationLockAttempts/:attempt_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"bypassActivationLockAttempts",
																":attempt_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":attempt_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Bypass activation lock attempt status"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sm/bypassActivationLockAttempts/:attempt_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sm",
																		"bypassActivationLockAttempts",
																		":attempt_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":attempt_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Bypass activation lock attempt",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sm/bypassActivationLockAttempts",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sm",
														"bypassActivationLockAttempts"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Bypass activation lock attempt"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sm/bypassActivationLockAttempts",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sm",
																"bypassActivationLockAttempts"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Return the settings for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/settings",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"settings"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"localStatusPageEnabled\": \"<boolean>\",\n  \"remoteStatusPageEnabled\": \"<boolean>\",\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": \"<boolean>\",\n      \"username\": \"<string>\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"fips\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"namedVlans\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"clientPrivacy\": {\n    \"expireDataOlderThan\": \"<integer>\",\n    \"expireDataBefore\": \"<dateTime>\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update the settings for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"localStatusPageEnabled\": \"<boolean>\",\n  \"remoteStatusPageEnabled\": \"<boolean>\",\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": \"<boolean>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/settings",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"settings"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"localStatusPageEnabled\": \"<boolean>\",\n  \"remoteStatusPageEnabled\": \"<boolean>\",\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": \"<boolean>\",\n      \"password\": \"<string>\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"localStatusPageEnabled\": \"<boolean>\",\n  \"remoteStatusPageEnabled\": \"<boolean>\",\n  \"localStatusPage\": {\n    \"authentication\": {\n      \"enabled\": \"<boolean>\",\n      \"username\": \"<string>\"\n    }\n  },\n  \"securePort\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"fips\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"namedVlans\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"clientPrivacy\": {\n    \"expireDataOlderThan\": \"<integer>\",\n    \"expireDataBefore\": \"<dateTime>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "sensor",
							"item": [
								{
									"name": "relationships",
									"item": [
										{
											"name": "List the sensor roles for devices in a given network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sensor/relationships",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the sensor roles for devices in a given network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/relationships",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"device\": {\n      \"name\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"productType\": \"sensor\"\n    },\n    \"relationships\": {\n      \"livestream\": {\n        \"relatedDevices\": [\n          {\n            \"serial\": \"<string>\",\n            \"productType\": \"sensor\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"productType\": \"sensor\"\n          }\n        ]\n      }\n    }\n  },\n  {\n    \"device\": {\n      \"name\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"productType\": \"camera\"\n    },\n    \"relationships\": {\n      \"livestream\": {\n        \"relatedDevices\": [\n          {\n            \"serial\": \"<string>\",\n            \"productType\": \"sensor\"\n          },\n          {\n            \"serial\": \"<string>\",\n            \"productType\": \"camera\"\n          }\n        ]\n      }\n    }\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "mqttBrokers",
									"item": [
										{
											"name": "{mqttBrokerId}",
											"item": [
												{
													"name": "Return the sensor settings of an MQTT broker",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers/:mqtt_broker_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"mqttBrokers",
																":mqtt_broker_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":mqtt_broker_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the sensor settings of an MQTT broker. To get the broker itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers/:mqtt_broker_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"mqttBrokers",
																		":mqtt_broker_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":mqtt_broker_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mqttBrokerId\": \"<string>\",\n  \"enabled\": \"<boolean>\"\n}"
														}
													]
												},
												{
													"name": "Update the sensor settings of an MQTT broker",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers/:mqtt_broker_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"mqttBrokers",
																":mqtt_broker_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":mqtt_broker_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the sensor settings of an MQTT broker. To update the broker itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers/:mqtt_broker_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"mqttBrokers",
																		":mqtt_broker_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":mqtt_broker_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mqttBrokerId\": \"<string>\",\n  \"enabled\": \"<boolean>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the sensor settings of all MQTT brokers for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"sensor",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the sensor settings of all MQTT brokers for this network. To get the brokers themselves, use /networks/{networkId}/mqttBrokers."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/mqttBrokers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"mqttBrokers"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mqttBrokerId\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n  },\n  {\n    \"mqttBrokerId\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "alerts",
									"item": [
										{
											"name": "profiles",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Show details of a sensor alert profile for a network.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"profiles",
																		":alert_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":alert_profile_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Show details of a sensor alert profile for a network."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sensor",
																				"alerts",
																				"profiles",
																				":alert_profile_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":alert_profile_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"fair\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"good\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"fair\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    }\n  ],\n  \"profileId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
																}
															]
														},
														{
															"name": "Updates a sensor alert profile for a network.",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"good\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"good\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"good\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"profiles",
																		":alert_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":alert_profile_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Updates a sensor alert profile for a network."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"good\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"good\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"good\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    }\n  ],\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sensor",
																				"alerts",
																				"profiles",
																				":alert_profile_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":alert_profile_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"fair\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"good\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"fair\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    }\n  ],\n  \"profileId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
																}
															]
														},
														{
															"name": "Deletes a sensor alert profile from a network.",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"profiles",
																		":alert_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":alert_profile_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Deletes a sensor alert profile from a network."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles/:alert_profile_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sensor",
																				"alerts",
																				"profiles",
																				":alert_profile_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":alert_profile_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Lists all sensor alert profiles for a network.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Lists all sensor alert profiles for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"conditions\": [\n      {\n        \"metric\": \"<string>\",\n        \"threshold\": {\n          \"temperature\": {\n            \"celsius\": \"<float>\",\n            \"fahrenheit\": \"<float>\",\n            \"quality\": \"fair\"\n          },\n          \"humidity\": {\n            \"relativePercentage\": \"<integer>\",\n            \"quality\": \"good\"\n          },\n          \"water\": {\n            \"present\": \"<boolean>\"\n          },\n          \"door\": {\n            \"open\": \"<boolean>\"\n          },\n          \"tvoc\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"pm25\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"good\"\n          },\n          \"noise\": {\n            \"ambient\": {\n              \"level\": \"<integer>\",\n              \"quality\": \"poor\"\n            }\n          },\n          \"indoorAirQuality\": {\n            \"score\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"direction\": \"below\",\n        \"duration\": 0\n      },\n      {\n        \"metric\": \"<string>\",\n        \"threshold\": {\n          \"temperature\": {\n            \"celsius\": \"<float>\",\n            \"fahrenheit\": \"<float>\",\n            \"quality\": \"good\"\n          },\n          \"humidity\": {\n            \"relativePercentage\": \"<integer>\",\n            \"quality\": \"good\"\n          },\n          \"water\": {\n            \"present\": \"<boolean>\"\n          },\n          \"door\": {\n            \"open\": \"<boolean>\"\n          },\n          \"tvoc\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"pm25\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"good\"\n          },\n          \"noise\": {\n            \"ambient\": {\n              \"level\": \"<integer>\",\n              \"quality\": \"good\"\n            }\n          },\n          \"indoorAirQuality\": {\n            \"score\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"direction\": \"below\",\n        \"duration\": 0\n      }\n    ],\n    \"profileId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"recipients\": {\n      \"emails\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"smsNumbers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"httpServerIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"serials\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"conditions\": [\n      {\n        \"metric\": \"<string>\",\n        \"threshold\": {\n          \"temperature\": {\n            \"celsius\": \"<float>\",\n            \"fahrenheit\": \"<float>\",\n            \"quality\": \"fair\"\n          },\n          \"humidity\": {\n            \"relativePercentage\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"water\": {\n            \"present\": \"<boolean>\"\n          },\n          \"door\": {\n            \"open\": \"<boolean>\"\n          },\n          \"tvoc\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"poor\"\n          },\n          \"pm25\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"noise\": {\n            \"ambient\": {\n              \"level\": \"<integer>\",\n              \"quality\": \"inadequate\"\n            }\n          },\n          \"indoorAirQuality\": {\n            \"score\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"direction\": \"below\",\n        \"duration\": 0\n      },\n      {\n        \"metric\": \"<string>\",\n        \"threshold\": {\n          \"temperature\": {\n            \"celsius\": \"<float>\",\n            \"fahrenheit\": \"<float>\",\n            \"quality\": \"inadequate\"\n          },\n          \"humidity\": {\n            \"relativePercentage\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"water\": {\n            \"present\": \"<boolean>\"\n          },\n          \"door\": {\n            \"open\": \"<boolean>\"\n          },\n          \"tvoc\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"pm25\": {\n            \"concentration\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          },\n          \"noise\": {\n            \"ambient\": {\n              \"level\": \"<integer>\",\n              \"quality\": \"fair\"\n            }\n          },\n          \"indoorAirQuality\": {\n            \"score\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"direction\": \"below\",\n        \"duration\": 0\n      }\n    ],\n    \"profileId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"schedule\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"recipients\": {\n      \"emails\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"smsNumbers\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"httpServerIds\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"serials\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
														}
													]
												},
												{
													"name": "Creates a sensor alert profile for a network.",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"fair\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"poor\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    }\n  ],\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"sensor",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Creates a sensor alert profile for a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"fair\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"below\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"inadequate\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"poor\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    }\n  ],\n  \"schedule\": {\n    \"id\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/profiles",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"conditions\": [\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"fair\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"good\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"inadequate\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    },\n    {\n      \"metric\": \"<string>\",\n      \"threshold\": {\n        \"temperature\": {\n          \"celsius\": \"<float>\",\n          \"fahrenheit\": \"<float>\",\n          \"quality\": \"inadequate\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\",\n          \"quality\": \"poor\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"good\"\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\",\n          \"quality\": \"fair\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\",\n            \"quality\": \"fair\"\n          }\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\",\n          \"quality\": \"fair\"\n        }\n      },\n      \"direction\": \"above\",\n      \"duration\": 0\n    }\n  ],\n  \"profileId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"schedule\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"smsNumbers\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "byMetric",
													"item": [
														{
															"name": "Return an overview of alert occurrences over a timespan, by metric",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/overview/byMetric?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"sensor",
																		"alerts",
																		"overview",
																		"byMetric"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																		},
																		{
																			"key": "interval",
																			"value": "<integer>",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return an overview of alert occurrences over a timespan, by metric"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/overview/byMetric?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sensor",
																				"alerts",
																				"overview",
																				"byMetric"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																				},
																				{
																					"key": "interval",
																					"value": "<integer>",
																					"description": "The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"counts\": {\n      \"door\": \"<integer>\",\n      \"humidity\": \"<integer>\",\n      \"indoorAirQuality\": \"<integer>\",\n      \"noise\": {\n        \"ambient\": \"<integer>\"\n      },\n      \"pm25\": \"<integer>\",\n      \"temperature\": \"<integer>\",\n      \"tvoc\": \"<integer>\",\n      \"water\": \"<integer>\"\n    }\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"counts\": {\n      \"door\": \"<integer>\",\n      \"humidity\": \"<integer>\",\n      \"indoorAirQuality\": \"<integer>\",\n      \"noise\": {\n        \"ambient\": \"<integer>\"\n      },\n      \"pm25\": \"<integer>\",\n      \"temperature\": \"<integer>\",\n      \"tvoc\": \"<integer>\",\n      \"water\": \"<integer>\"\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "current",
											"item": [
												{
													"name": "overview",
													"item": [
														{
															"name": "byMetric",
															"item": [
																{
																	"name": "Return an overview of currently alerting sensors by metric",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/current/overview/byMetric",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"sensor",
																				"alerts",
																				"current",
																				"overview",
																				"byMetric"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return an overview of currently alerting sensors by metric"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/sensor/alerts/current/overview/byMetric",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"sensor",
																						"alerts",
																						"current",
																						"overview",
																						"byMetric"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"supportedMetrics\": [\n    \"tvoc\",\n    \"humidity\"\n  ],\n  \"counts\": {\n    \"door\": \"<integer>\",\n    \"humidity\": \"<integer>\",\n    \"indoorAirQuality\": \"<integer>\",\n    \"noise\": {\n      \"ambient\": \"<integer>\"\n    },\n    \"pm25\": \"<integer>\",\n    \"temperature\": \"<integer>\",\n    \"tvoc\": \"<integer>\",\n    \"water\": \"<integer>\"\n  }\n}"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "policies",
							"item": [
								{
									"name": "byClient",
									"item": []
								}
							]
						},
						{
							"name": "pii",
							"item": [
								{
									"name": "smOwnersForKey",
									"item": [
										{
											"name": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/pii/smOwnersForKey?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"pii",
														"smOwnersForKey"
													],
													"query": [
														{
															"key": "username",
															"value": "<string>",
															"description": "The username of a Systems Manager user"
														},
														{
															"key": "email",
															"value": "<string>",
															"description": "The email of a network user account or a Systems Manager device"
														},
														{
															"key": "mac",
															"value": "<string>",
															"description": "The MAC of a network client device or a Systems Manager device"
														},
														{
															"key": ":serial",
															"value": "<string>",
															"description": "The serial of a Systems Manager device"
														},
														{
															"key": "imei",
															"value": "<string>",
															"description": "The IMEI of a Systems Manager device"
														},
														{
															"key": "bluetoothMac",
															"value": "<string>",
															"description": "The MAC of a Bluetooth client"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/smOwnersForKey?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"smOwnersForKey"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>",
																	"description": "The username of a Systems Manager user"
																},
																{
																	"key": "email",
																	"value": "<string>",
																	"description": "The email of a network user account or a Systems Manager device"
																},
																{
																	"key": "mac",
																	"value": "<string>",
																	"description": "The MAC of a network client device or a Systems Manager device"
																},
																{
																	"key": ":serial",
																	"value": "<string>",
																	"description": "The serial of a Systems Manager device"
																},
																{
																	"key": "imei",
																	"value": "<string>",
																	"description": "The IMEI of a Systems Manager device"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>",
																	"description": "The MAC of a Bluetooth client"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "smDevicesForKey",
									"item": [
										{
											"name": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/pii/smDevicesForKey?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"pii",
														"smDevicesForKey"
													],
													"query": [
														{
															"key": "username",
															"value": "<string>",
															"description": "The username of a Systems Manager user"
														},
														{
															"key": "email",
															"value": "<string>",
															"description": "The email of a network user account or a Systems Manager device"
														},
														{
															"key": "mac",
															"value": "<string>",
															"description": "The MAC of a network client device or a Systems Manager device"
														},
														{
															"key": ":serial",
															"value": "<string>",
															"description": "The serial of a Systems Manager device"
														},
														{
															"key": "imei",
															"value": "<string>",
															"description": "The IMEI of a Systems Manager device"
														},
														{
															"key": "bluetoothMac",
															"value": "<string>",
															"description": "The MAC of a Bluetooth client"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/smDevicesForKey?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"smDevicesForKey"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>",
																	"description": "The username of a Systems Manager user"
																},
																{
																	"key": "email",
																	"value": "<string>",
																	"description": "The email of a network user account or a Systems Manager device"
																},
																{
																	"key": "mac",
																	"value": "<string>",
																	"description": "The MAC of a network client device or a Systems Manager device"
																},
																{
																	"key": ":serial",
																	"value": "<string>",
																	"description": "The serial of a Systems Manager device"
																},
																{
																	"key": "imei",
																	"value": "<string>",
																	"description": "The IMEI of a Systems Manager device"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>",
																	"description": "The MAC of a Bluetooth client"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "requests",
									"item": [
										{
											"name": "{requestId}",
											"item": [
												{
													"name": "Return a PII request",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/requests/:request_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"requests",
																":request_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":request_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/pii/requests/:request_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"pii",
																		"requests",
																		":request_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete a restrict processing PII request",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/requests/:request_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"requests",
																":request_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":request_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/pii/requests/:request_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"pii",
																		"requests",
																		":request_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":request_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the PII requests for this network or organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/pii/requests",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"pii",
														"requests"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/requests",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"requests"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Submit a new delete or restrict processing PII request",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"restrict processing\",\n  \"datasets\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"smDeviceId\": \"<string>\",\n  \"smUserId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/pii/requests",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"pii",
														"requests"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"restrict processing\",\n  \"datasets\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"smDeviceId\": \"<string>\",\n  \"smUserId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/requests",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"requests"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "piiKeys",
									"item": [
										{
											"name": "List the keys required to access Personally Identifiable Information (PII) for a given identifier",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/pii/piiKeys?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"pii",
														"piiKeys"
													],
													"query": [
														{
															"key": "username",
															"value": "<string>",
															"description": "The username of a Systems Manager user"
														},
														{
															"key": "email",
															"value": "<string>",
															"description": "The email of a network user account or a Systems Manager device"
														},
														{
															"key": "mac",
															"value": "<string>",
															"description": "The MAC of a network client device or a Systems Manager device"
														},
														{
															"key": ":serial",
															"value": "<string>",
															"description": "The serial of a Systems Manager device"
														},
														{
															"key": "imei",
															"value": "<string>",
															"description": "The IMEI of a Systems Manager device"
														},
														{
															"key": "bluetoothMac",
															"value": "<string>",
															"description": "The MAC of a Bluetooth client"
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/pii/piiKeys?username=<string>&email=<string>&mac=<string>&:serial=<string>&imei=<string>&bluetoothMac=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"pii",
																"piiKeys"
															],
															"query": [
																{
																	"key": "username",
																	"value": "<string>",
																	"description": "The username of a Systems Manager user"
																},
																{
																	"key": "email",
																	"value": "<string>",
																	"description": "The email of a network user account or a Systems Manager device"
																},
																{
																	"key": "mac",
																	"value": "<string>",
																	"description": "The MAC of a network client device or a Systems Manager device"
																},
																{
																	"key": ":serial",
																	"value": "<string>",
																	"description": "The serial of a Systems Manager device"
																},
																{
																	"key": "imei",
																	"value": "<string>",
																	"description": "The IMEI of a Systems Manager device"
																},
																{
																	"key": "bluetoothMac",
																	"value": "<string>",
																	"description": "The MAC of a Bluetooth client"
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "networkHealth",
							"item": [
								{
									"name": "channelUtilization",
									"item": [
										{
											"name": "Get the channel utilization over each radio for all APs in a network.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/networkHealth/channelUtilization?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"networkHealth",
														"channelUtilization"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Get the channel utilization over each radio for all APs in a network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/networkHealth/channelUtilization?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"networkHealth",
																"channelUtilization"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "netflow",
							"item": [
								{
									"name": "Return the NetFlow traffic reporting settings for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/netflow",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"netflow"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the NetFlow traffic reporting settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/netflow",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"netflow"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update the NetFlow traffic reporting settings for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reportingEnabled\": \"<boolean>\",\n  \"collectorIp\": \"<string>\",\n  \"collectorPort\": \"<integer>\",\n  \"etaEnabled\": \"<boolean>\",\n  \"etaDstPort\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/netflow",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"netflow"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the NetFlow traffic reporting settings for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reportingEnabled\": \"<boolean>\",\n  \"collectorIp\": \"<string>\",\n  \"collectorPort\": \"<integer>\",\n  \"etaEnabled\": \"<boolean>\",\n  \"etaDstPort\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/netflow",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"netflow"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "mqttBrokers",
							"item": [
								{
									"name": "{mqttBrokerId}",
									"item": [
										{
											"name": "Return an MQTT broker",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"mqttBrokers",
														":mqtt_broker_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":mqtt_broker_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return an MQTT broker"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"mqttBrokers",
																":mqtt_broker_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":mqtt_broker_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update an MQTT broker",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"security\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"mqttBrokers",
														":mqtt_broker_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":mqtt_broker_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update an MQTT broker"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"security\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {}\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"mqttBrokers",
																":mqtt_broker_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":mqtt_broker_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Delete an MQTT broker",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"mqttBrokers",
														":mqtt_broker_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":mqtt_broker_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete an MQTT broker"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers/:mqtt_broker_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"mqttBrokers",
																":mqtt_broker_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":mqtt_broker_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the MQTT brokers for this network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"mqttBrokers"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the MQTT brokers for this network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Add an MQTT broker",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"security\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"mqttBrokers"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Add an MQTT broker"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"host\": \"<string>\",\n  \"port\": \"<integer>\",\n  \"security\": {\n    \"mode\": \"<string>\",\n    \"security\": {\n      \"caCertificate\": \"<string>\",\n      \"verifyHostnames\": \"<boolean>\"\n    }\n  },\n  \"authentication\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/mqttBrokers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"mqttBrokers"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "merakiAuthUsers",
							"item": [
								{
									"name": "{merakiAuthUserId}",
									"item": [
										{
											"name": "Return the Meraki Auth splash guest, RADIUS, or client VPN user",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"merakiAuthUsers",
														":meraki_auth_user_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":meraki_auth_user_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the Meraki Auth splash guest, RADIUS, or client VPN user"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"merakiAuthUsers",
																":meraki_auth_user_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":meraki_auth_user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"accountType\": \"<string>\",\n  \"isAdmin\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Deauthorize a user",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"merakiAuthUsers",
														":meraki_auth_user_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":meraki_auth_user_id",
															"value": "<string>"
														}
													]
												},
												"description": "Deauthorize a user. To reauthorize a user after deauthorizing them, POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users can be deauthorized.)"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"merakiAuthUsers",
																":meraki_auth_user_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":meraki_auth_user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"merakiAuthUsers",
														":meraki_auth_user_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":meraki_auth_user_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers/:meraki_auth_user_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"merakiAuthUsers",
																":meraki_auth_user_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":meraki_auth_user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"accountType\": \"<string>\",\n  \"isAdmin\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"accountType\": \"802.1X\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"isAdmin\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"merakiAuthUsers"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"expiresAt\": \"Never\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"password\": \"<string>\",\n  \"accountType\": \"802.1X\",\n  \"emailPasswordToUser\": \"<boolean>\",\n  \"isAdmin\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/merakiAuthUsers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"merakiAuthUsers"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"accountType\": \"<string>\",\n  \"isAdmin\": \"<boolean>\",\n  \"authorizations\": [\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    },\n    {\n      \"ssidNumber\": \"<integer>\",\n      \"authorizedZone\": \"<string>\",\n      \"expiresAt\": \"<dateTime>\",\n      \"authorizedByName\": \"<string>\",\n      \"authorizedByEmail\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "insight",
							"item": [
								{
									"name": "applications",
									"item": [
										{
											"name": "{applicationId}",
											"item": [
												{
													"name": "healthByTime",
													"item": [
														{
															"name": "Get application health by time",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/insight/applications/:application_id/healthByTime?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"insight",
																		"applications",
																		":application_id",
																		"healthByTime"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours."
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>",
																			"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":application_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get application health by time"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/insight/applications/:application_id/healthByTime?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"insight",
																				"applications",
																				":application_id",
																				"healthByTime"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours."
																				},
																				{
																					"key": "resolution",
																					"value": "<integer>",
																					"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":application_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"wanGoodput\": \"<integer>\",\n    \"lanGoodput\": \"<integer>\",\n    \"wanLatencyMs\": \"<float>\",\n    \"lanLatencyMs\": \"<float>\",\n    \"wanLossPercent\": \"<float>\",\n    \"lanLossPercent\": \"<float>\",\n    \"responseDuration\": \"<integer>\",\n    \"sent\": \"<integer>\",\n    \"recv\": \"<integer>\",\n    \"numClients\": \"<integer>\"\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"wanGoodput\": \"<integer>\",\n    \"lanGoodput\": \"<integer>\",\n    \"wanLatencyMs\": \"<float>\",\n    \"lanLatencyMs\": \"<float>\",\n    \"wanLossPercent\": \"<float>\",\n    \"lanLossPercent\": \"<float>\",\n    \"responseDuration\": \"<integer>\",\n    \"sent\": \"<integer>\",\n    \"recv\": \"<integer>\",\n    \"numClients\": \"<integer>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "health",
							"item": [
								{
									"name": "alerts",
									"item": [
										{
											"name": "Return all global alerts on this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/health/alerts",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"health",
														"alerts"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return all global alerts on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/health/alerts",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"health",
																"alerts"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"category\": \"<string>\",\n    \"type\": \"<string>\",\n    \"severity\": \"warning\",\n    \"scope\": {\n      \"devices\": [\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\",\n          \"productType\": \"<string>\",\n          \"serial\": \"<string>\",\n          \"mac\": \"<string>\",\n          \"lldp\": {\n            \"portId\": \"<string>\"\n          },\n          \"clients\": [\n            {\n              \"mac\": \"<string>\"\n            },\n            {\n              \"mac\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\",\n          \"productType\": \"<string>\",\n          \"serial\": \"<string>\",\n          \"mac\": \"<string>\",\n          \"lldp\": {\n            \"portId\": \"<string>\"\n          },\n          \"clients\": [\n            {\n              \"mac\": \"<string>\"\n            },\n            {\n              \"mac\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"applications\": [\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"peers\": [\n        {\n          \"url\": \"<string>\",\n          \"network\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"url\": \"<string>\",\n          \"network\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"category\": \"<string>\",\n    \"type\": \"<string>\",\n    \"severity\": \"info\",\n    \"scope\": {\n      \"devices\": [\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\",\n          \"productType\": \"<string>\",\n          \"serial\": \"<string>\",\n          \"mac\": \"<string>\",\n          \"lldp\": {\n            \"portId\": \"<string>\"\n          },\n          \"clients\": [\n            {\n              \"mac\": \"<string>\"\n            },\n            {\n              \"mac\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\",\n          \"productType\": \"<string>\",\n          \"serial\": \"<string>\",\n          \"mac\": \"<string>\",\n          \"lldp\": {\n            \"portId\": \"<string>\"\n          },\n          \"clients\": [\n            {\n              \"mac\": \"<string>\"\n            },\n            {\n              \"mac\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"applications\": [\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"url\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"peers\": [\n        {\n          \"url\": \"<string>\",\n          \"network\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        },\n        {\n          \"url\": \"<string>\",\n          \"network\": {\n            \"name\": \"<string>\",\n            \"id\": \"<string>\"\n          }\n        }\n      ]\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "groupPolicies",
							"item": [
								{
									"name": "{groupPolicyId}",
									"item": [
										{
											"name": "Display a group policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"groupPolicies",
														":group_policy_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":group_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Display a group policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"groupPolicies",
																":group_policy_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":group_policy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update a group policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"network default\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"custom\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"ipRange\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"deny\",\n        \"type\": \"application\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"network default\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"override\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"network default\",\n  \"vlanTagging\": {\n    \"settings\": \"custom\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"network default\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"SSH\",\n          \"AFP\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"Samba\",\n          \"iChat\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"groupPolicies",
														":group_policy_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":group_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a group policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"network default\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"custom\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"ipRange\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"deny\",\n        \"type\": \"application\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"network default\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"override\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"network default\",\n  \"vlanTagging\": {\n    \"settings\": \"custom\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"network default\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"SSH\",\n          \"AFP\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"Samba\",\n          \"iChat\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"groupPolicies",
																":group_policy_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":group_policy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Delete a group policy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"groupPolicies",
														":group_policy_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":group_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete a group policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/groupPolicies/:group_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"groupPolicies",
																":group_policy_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":group_policy_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the group policies in a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/groupPolicies",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"groupPolicies"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the group policies in a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/groupPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"groupPolicies"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Create a group policy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"ignore\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"network default\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"host\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"deny\",\n        \"type\": \"application\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"network default\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"network default\",\n  \"vlanTagging\": {\n    \"settings\": \"network default\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"network default\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"AFP\",\n          \"AFP\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"iChat\",\n          \"SSH\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/groupPolicies",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"groupPolicies"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a group policy"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"scheduling\": {\n    \"enabled\": \"<boolean>\",\n    \"monday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"tuesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"wednesday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"thursday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"friday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"saturday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    },\n    \"sunday\": {\n      \"active\": \"<boolean>\",\n      \"from\": \"<string>\",\n      \"to\": \"<string>\"\n    }\n  },\n  \"bandwidth\": {\n    \"settings\": \"ignore\",\n    \"bandwidthLimits\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  },\n  \"firewallAndTrafficShaping\": {\n    \"settings\": \"network default\",\n    \"trafficShapingRules\": [\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      },\n      {\n        \"definitions\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"application\",\n                  \"applicationCategory\",\n                  \"host\",\n                  \"ipRange\",\n                  \"localNet\",\n                  \"port\"\n                ],\n                \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n                \"default\": \"<string>\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"value\"\n            ]\n          },\n          \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n          \"maxItems\": 2\n        },\n        \"perClientBandwidthLimits\": {\n          \"settings\": \"<string>\",\n          \"bandwidthLimits\": {\n            \"limitUp\": \"<integer>\",\n            \"limitDown\": \"<integer>\"\n          }\n        },\n        \"dscpTagValue\": \"<integer>\",\n        \"pcpTagValue\": \"<integer>\",\n        \"priority\": \"<string>\"\n      }\n    ],\n    \"l3FirewallRules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"destCidr\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"destPort\": \"<string>\"\n      }\n    ],\n    \"l7FirewallRules\": [\n      {\n        \"policy\": \"deny\",\n        \"type\": \"host\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"policy\": \"deny\",\n        \"type\": \"application\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"contentFiltering\": {\n    \"allowedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlPatterns\": {\n      \"settings\": \"override\",\n      \"patterns\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"blockedUrlCategories\": {\n      \"settings\": \"network default\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"splashAuthSettings\": \"network default\",\n  \"vlanTagging\": {\n    \"settings\": \"network default\",\n    \"vlanId\": \"<string>\"\n  },\n  \"bonjourForwarding\": {\n    \"settings\": \"network default\",\n    \"rules\": [\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"AFP\",\n          \"AFP\"\n        ],\n        \"description\": \"<string>\"\n      },\n      {\n        \"vlanId\": \"<string>\",\n        \"services\": [\n          \"iChat\",\n          \"SSH\"\n        ],\n        \"description\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/groupPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"groupPolicies"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "floorPlans",
							"item": [
								{
									"name": "{floorPlanId}",
									"item": [
										{
											"name": "Find a floor plan by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"floorPlans",
														":floor_plan_id}"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":floor_plan_id}",
															"value": "<string>"
														}
													]
												},
												"description": "Find a floor plan by ID"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"floorPlans",
																":floor_plan_id}"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":floor_plan_id}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"floorPlanId\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"imageUrlExpiresAt\": \"<string>\",\n  \"imageExtension\": \"<string>\",\n  \"imageMd5\": \"<string>\",\n  \"name\": \"<string>\",\n  \"devices\": [\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    }\n  ],\n  \"width\": \"<float>\",\n  \"height\": \"<float>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update a floor plan's geolocation and other meta data",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"imageContents\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"floorPlans",
														":floor_plan_id}"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":floor_plan_id}",
															"value": "<string>"
														}
													]
												},
												"description": "Update a floor plan's geolocation and other meta data"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"imageContents\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"floorPlans",
																":floor_plan_id}"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":floor_plan_id}"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"floorPlanId\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"imageUrlExpiresAt\": \"<string>\",\n  \"imageExtension\": \"<string>\",\n  \"imageMd5\": \"<string>\",\n  \"name\": \"<string>\",\n  \"devices\": [\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    }\n  ],\n  \"width\": \"<float>\",\n  \"height\": \"<float>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Destroy a floor plan",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"floorPlans",
														":floor_plan_id}"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":floor_plan_id}",
															"value": "<string>"
														}
													]
												},
												"description": "Destroy a floor plan"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/floorPlans/:floor_plan_id}",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"floorPlans",
																":floor_plan_id}"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":floor_plan_id}"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"floorPlanId\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"imageUrlExpiresAt\": \"<string>\",\n  \"imageExtension\": \"<string>\",\n  \"imageMd5\": \"<string>\",\n  \"name\": \"<string>\",\n  \"devices\": [\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    }\n  ],\n  \"width\": \"<float>\",\n  \"height\": \"<float>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the floor plans that belong to your network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/floorPlans",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"floorPlans"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the floor plans that belong to your network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/floorPlans",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"floorPlans"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"floorPlanId\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"imageUrlExpiresAt\": \"<string>\",\n    \"imageExtension\": \"<string>\",\n    \"imageMd5\": \"<string>\",\n    \"name\": \"<string>\",\n    \"devices\": [\n      {\n        \"name\": \"<string>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\",\n        \"address\": \"<string>\",\n        \"notes\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"networkId\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"lanIp\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"productType\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\",\n        \"address\": \"<string>\",\n        \"notes\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"networkId\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"lanIp\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"productType\": \"<string>\"\n      }\n    ],\n    \"width\": \"<float>\",\n    \"height\": \"<float>\",\n    \"center\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"bottomLeftCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"bottomRightCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"topLeftCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"topRightCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    }\n  },\n  {\n    \"floorPlanId\": \"<string>\",\n    \"imageUrl\": \"<string>\",\n    \"imageUrlExpiresAt\": \"<string>\",\n    \"imageExtension\": \"<string>\",\n    \"imageMd5\": \"<string>\",\n    \"name\": \"<string>\",\n    \"devices\": [\n      {\n        \"name\": \"<string>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\",\n        \"address\": \"<string>\",\n        \"notes\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"networkId\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"lanIp\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"productType\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"lat\": \"<float>\",\n        \"lng\": \"<float>\",\n        \"address\": \"<string>\",\n        \"notes\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"networkId\": \"<string>\",\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"mac\": \"<string>\",\n        \"lanIp\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"productType\": \"<string>\"\n      }\n    ],\n    \"width\": \"<float>\",\n    \"height\": \"<float>\",\n    \"center\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"bottomLeftCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"bottomRightCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"topLeftCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    },\n    \"topRightCorner\": {\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\"\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "Upload a floor plan",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"imageContents\": \"<string>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/floorPlans",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"floorPlans"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Upload a floor plan"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"imageContents\": \"<string>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/floorPlans",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"floorPlans"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"floorPlanId\": \"<string>\",\n  \"imageUrl\": \"<string>\",\n  \"imageUrlExpiresAt\": \"<string>\",\n  \"imageExtension\": \"<string>\",\n  \"imageMd5\": \"<string>\",\n  \"name\": \"<string>\",\n  \"devices\": [\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"lat\": \"<float>\",\n      \"lng\": \"<float>\",\n      \"address\": \"<string>\",\n      \"notes\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"networkId\": \"<string>\",\n      \"serial\": \"<string>\",\n      \"model\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"lanIp\": \"<string>\",\n      \"firmware\": \"<string>\",\n      \"productType\": \"<string>\"\n    }\n  ],\n  \"width\": \"<float>\",\n  \"height\": \"<float>\",\n  \"center\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"bottomRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topLeftCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  },\n  \"topRightCorner\": {\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "firmwareUpgrades",
							"item": [
								{
									"name": "staged",
									"item": [
										{
											"name": "stages",
											"item": [
												{
													"name": "Order of Staged Upgrade Groups in a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/stages",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"stages"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Order of Staged Upgrade Groups in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/stages",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"stages"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"group\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  },\n  {\n    \"group\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "Assign Staged Upgrade Group order in the sequence.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"_json\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/stages",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"stages"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Assign Staged Upgrade Group order in the sequence."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"_json\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/stages",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"stages"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"group\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  },\n  {\n    \"group\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "groups",
											"item": [
												{
													"name": "{groupId}",
													"item": [
														{
															"name": "Get a Staged Upgrade Group from a network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":group_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":group_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get a Staged Upgrade Group from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"firmwareUpgrades",
																				"staged",
																				"groups",
																				":group_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":group_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"groupId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}"
																}
															]
														},
														{
															"name": "Update a Staged Upgrade Group for a network",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":group_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":group_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update a Staged Upgrade Group for a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"firmwareUpgrades",
																				"staged",
																				"groups",
																				":group_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":group_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Delete a Staged Upgrade Group",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"groups",
																		":group_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":group_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete a Staged Upgrade Group"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups/:group_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"firmwareUpgrades",
																				"staged",
																				"groups",
																				":group_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":group_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List of Staged Upgrade Groups in a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"groups"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List of Staged Upgrade Groups in a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"groupId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"assignedDevices\": {\n      \"devices\": [\n        {\n          \"serial\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"serial\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"switchStacks\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  },\n  {\n    \"groupId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"isDefault\": \"<boolean>\",\n    \"assignedDevices\": {\n      \"devices\": [\n        {\n          \"serial\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"serial\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"switchStacks\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "Create a Staged Upgrade Group for a network",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"groups"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Create a Staged Upgrade Group for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"assignedDevices\": {\n    \"devices\": [\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"switchStacks\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/groups",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "events",
											"item": [
												{
													"name": "rollbacks",
													"item": [
														{
															"name": "Rollback a Staged Upgrade Event for a network",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"unifying networks versions\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events/rollbacks",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"events",
																		"rollbacks"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Rollback a Staged Upgrade Event for a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"unifying networks versions\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events/rollbacks",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"firmwareUpgrades",
																				"staged",
																				"events",
																				"rollbacks"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"shortName\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "defer",
													"item": [
														{
															"name": "Postpone by 1 week all pending staged upgrade stages for a network",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events/defer",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"events",
																		"defer"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Postpone by 1 week all pending staged upgrade stages for a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events/defer",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"firmwareUpgrades",
																				"staged",
																				"events",
																				"defer"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"shortName\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get the Staged Upgrade Event from a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get the Staged Upgrade Event from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"shortName\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Create a Staged Upgrade Event for a network",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Create a Staged Upgrade Event for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ],\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"shortName\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update the Staged Upgrade Event for a network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"staged",
																"events"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the Staged Upgrade Event for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/staged/events",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"firmwareUpgrades",
																		"staged",
																		"events"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"products\": {\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"shortName\": \"<string>\"\n        }\n      }\n    }\n  },\n  \"stages\": [\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    },\n    {\n      \"group\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"milestones\": {\n        \"scheduledFor\": \"<dateTime>\",\n        \"startedAt\": \"<dateTime>\",\n        \"completedAt\": \"<dateTime>\",\n        \"canceledAt\": \"<dateTime>\"\n      },\n      \"status\": \"<string>\"\n    }\n  ],\n  \"reasons\": [\n    {\n      \"category\": \"other\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "rollbacks",
									"item": [
										{
											"name": "Rollback a Firmware Upgrade For A Network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reasons\": [\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"performance\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"product\": \"wireless\",\n  \"time\": \"<dateTime>\",\n  \"toVersion\": {\n    \"id\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/rollbacks",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"firmwareUpgrades",
														"rollbacks"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Rollback a Firmware Upgrade For A Network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reasons\": [\n    {\n      \"category\": \"stability\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"performance\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"product\": \"wireless\",\n  \"time\": \"<dateTime>\",\n  \"toVersion\": {\n    \"id\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades/rollbacks",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"firmwareUpgrades",
																"rollbacks"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"product\": \"cellularGateway\",\n  \"status\": \"in_progress\",\n  \"upgradeBatchId\": \"<string>\",\n  \"time\": \"<dateTime>\",\n  \"toVersion\": {\n    \"id\": \"<string>\",\n    \"firmware\": \"<string>\",\n    \"shortName\": \"<string>\",\n    \"releaseType\": \"<string>\",\n    \"releaseDate\": \"<dateTime>\"\n  },\n  \"reasons\": [\n    {\n      \"category\": \"performance\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"category\": \"performance\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get firmware upgrade information for a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"firmwareUpgrades"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Get firmware upgrade information for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"firmwareUpgrades"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"wednesday\",\n    \"hourOfDay\": \"14:00\"\n  },\n  \"timezone\": \"<string>\",\n  \"products\": {\n    \"wireless\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"appliance\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switch\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"camera\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cellularGateway\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"sensor\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cloudGateway\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Update firmware upgrade information for a network",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"tue\",\n    \"hourOfDay\": \"4:00\"\n  },\n  \"timezone\": \"<string>\",\n  \"products\": {\n    \"wireless\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"appliance\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"camera\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cellularGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"sensor\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cloudGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"firmwareUpgrades"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update firmware upgrade information for a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"tue\",\n    \"hourOfDay\": \"4:00\"\n  },\n  \"timezone\": \"<string>\",\n  \"products\": {\n    \"wireless\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"appliance\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switch\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"camera\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cellularGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"sensor\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cloudGateway\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switchCatalyst\": {\n      \"nextUpgrade\": {\n        \"time\": \"<string>\",\n        \"toVersion\": {\n          \"id\": \"<string>\"\n        }\n      },\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/firmwareUpgrades",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"firmwareUpgrades"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"upgradeWindow\": {\n    \"dayOfWeek\": \"wednesday\",\n    \"hourOfDay\": \"14:00\"\n  },\n  \"timezone\": \"<string>\",\n  \"products\": {\n    \"wireless\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"appliance\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"switch\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"camera\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cellularGateway\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"sensor\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    },\n    \"cloudGateway\": {\n      \"currentVersion\": {\n        \"id\": \"<string>\",\n        \"firmware\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<dateTime>\"\n      },\n      \"lastUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"fromVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"nextUpgrade\": {\n        \"time\": \"<dateTime>\",\n        \"toVersion\": {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      },\n      \"availableVersions\": [\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"firmware\": \"<string>\",\n          \"shortName\": \"<string>\",\n          \"releaseType\": \"<string>\",\n          \"releaseDate\": \"<dateTime>\"\n        }\n      ],\n      \"participateInNextBetaRelease\": \"<boolean>\"\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "events",
							"item": [
								{
									"name": "eventTypes",
									"item": []
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "remove",
									"item": [
										{
											"name": "Remove a single device",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/devices/remove",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"devices",
														"remove"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Remove a single device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serial\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/devices/remove",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"devices",
																"remove"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "claim",
									"item": [
										{
											"name": "vmx",
											"item": [
												{
													"name": "Claim a vMX into a network",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"size\": \"medium\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/devices/claim/vmx",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"devices",
																"claim",
																"vmx"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Claim a vMX into a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"size\": \"medium\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/devices/claim/vmx",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"devices",
																		"claim",
																		"vmx"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requsts against that device to succeed)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/devices/claim",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"devices",
														"claim"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requsts against that device to succeed)"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/devices/claim",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"devices",
																"claim"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the devices in a network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/devices",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"devices"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the devices in a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/devices",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"devices"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "{clientId}",
									"item": [
										{
											"name": "usageHistory",
											"item": [
												{
													"name": "Return the client's daily usage history",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/usageHistory",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"usageHistory"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/usageHistory",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"usageHistory"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "trafficHistory",
											"item": [
												{
													"name": "Return the client's network traffic data over time",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/trafficHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"trafficHistory"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/trafficHistory?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"trafficHistory"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "splashAuthorizationStatus",
											"item": [
												{
													"name": "Return the splash authorization for a client, for each SSID they've associated with through splash",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/splashAuthorizationStatus",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"splashAuthorizationStatus"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/splashAuthorizationStatus",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"splashAuthorizationStatus"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update a client's splash authorization",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"1\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"2\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"3\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"4\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"5\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"6\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"7\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"8\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"9\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"10\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"11\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"12\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"13\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"14\": {\n      \"isAuthorized\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/splashAuthorizationStatus",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"splashAuthorizationStatus"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ssids\": {\n    \"0\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"1\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"2\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"3\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"4\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"5\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"6\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"7\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"8\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"9\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"10\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"11\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"12\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"13\": {\n      \"isAuthorized\": \"<boolean>\"\n    },\n    \"14\": {\n      \"isAuthorized\": \"<boolean>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/splashAuthorizationStatus",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"splashAuthorizationStatus"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "policy",
											"item": [
												{
													"name": "Return the policy assigned to a client on the network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/policy",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"policy"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/policy",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"policy"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the policy assigned to a client on the network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"devicePolicy\": \"<string>\",\n  \"groupPolicyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/policy",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id",
																"policy"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":client_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devicePolicy\": \"<string>\",\n  \"groupPolicyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id/policy",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"clients",
																		":client_id",
																		"policy"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":client_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Return the client associated with the given identifier",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														":client_id"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":client_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/:client_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																":client_id"
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":client_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"ip6\": \"<string>\",\n  \"description\": \"<string>\",\n  \"firstSeen\": \"<integer>\",\n  \"lastSeen\": \"<integer>\",\n  \"manufacturer\": \"<string>\",\n  \"os\": \"<string>\",\n  \"user\": \"<string>\",\n  \"vlan\": \"<string>\",\n  \"ssid\": \"<string>\",\n  \"switchport\": \"<string>\",\n  \"wirelessCapabilities\": \"<string>\",\n  \"smInstalled\": \"<boolean>\",\n  \"recentDeviceMac\": \"<string>\",\n  \"clientVpnConnections\": [\n    {\n      \"remoteIp\": \"<string>\",\n      \"connectedAt\": \"<integer>\",\n      \"disconnectedAt\": \"<integer>\"\n    },\n    {\n      \"remoteIp\": \"<string>\",\n      \"connectedAt\": \"<integer>\",\n      \"disconnectedAt\": \"<integer>\"\n    }\n  ],\n  \"lldp\": [\n    [\n      \"<string>\",\n      \"<string>\"\n    ],\n    [\n      \"<string>\",\n      \"<string>\"\n    ]\n  ],\n  \"cdp\": [\n    [\n      \"<string>\",\n      \"<string>\"\n    ],\n    [\n      \"<string>\",\n      \"<string>\"\n    ]\n  ],\n  \"status\": \"Offline\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "usageHistories",
									"item": [
										{
											"name": "Return the usage histories for clients",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/usageHistories?clients=<string>&ssidNumber=10&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														"usageHistories"
													],
													"query": [
														{
															"key": "clients",
															"value": "<string>",
															"description": "(Required) A list of client keys, MACs or IPs separated by comma."
														},
														{
															"key": "ssidNumber",
															"value": "10",
															"description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the usage histories for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/usageHistories?clients=<string>&ssidNumber=10&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																"usageHistories"
															],
															"query": [
																{
																	"key": "clients",
																	"value": "<string>",
																	"description": "(Required) A list of client keys, MACs or IPs separated by comma."
																},
																{
																	"key": "ssidNumber",
																	"value": "10",
																	"description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "provision",
									"item": [
										{
											"name": "Provisions a client with a name and policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clients\": [\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"devicePolicy\": \"Per connection\",\n  \"groupPolicyId\": \"<string>\",\n  \"policiesBySecurityAppliance\": {\n    \"devicePolicy\": \"Allowed\"\n  },\n  \"policiesBySsid\": {\n    \"0\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"1\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"2\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"3\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"4\": {\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"5\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"6\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"7\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"8\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"9\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"10\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"11\": {\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"12\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"13\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"14\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/provision",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														"provision"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clients\": [\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"devicePolicy\": \"Per connection\",\n  \"groupPolicyId\": \"<string>\",\n  \"policiesBySecurityAppliance\": {\n    \"devicePolicy\": \"Allowed\"\n  },\n  \"policiesBySsid\": {\n    \"0\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"1\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"2\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"3\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"4\": {\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"5\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"6\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"7\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"8\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"9\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"10\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"11\": {\n      \"devicePolicy\": \"Allowed\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"12\": {\n      \"devicePolicy\": \"Blocked\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"13\": {\n      \"devicePolicy\": \"Normal\",\n      \"groupPolicyId\": \"<string>\"\n    },\n    \"14\": {\n      \"devicePolicy\": \"Group policy\",\n      \"groupPolicyId\": \"<string>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/provision",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																"provision"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "Return overview statistics for network clients",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/overview?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return overview statistics for network clients"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/overview?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "bandwidthUsageHistory",
									"item": [
										{
											"name": "Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/bandwidthUsageHistory?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														"bandwidthUsageHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/bandwidthUsageHistory?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																"bandwidthUsageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "applicationUsage",
									"item": [
										{
											"name": "Return the application usage data for clients",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients/applicationUsage?clients=<string>&ssidNumber=10&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients",
														"applicationUsage"
													],
													"query": [
														{
															"key": "clients",
															"value": "<string>",
															"description": "(Required) A list of client keys, MACs or IPs separated by comma."
														},
														{
															"key": "ssidNumber",
															"value": "10",
															"description": "An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the application usage data for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/clients/applicationUsage?clients=<string>&ssidNumber=10&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"clients",
																"applicationUsage"
															],
															"query": [
																{
																	"key": "clients",
																	"value": "<string>",
																	"description": "(Required) A list of client keys, MACs or IPs separated by comma."
																},
																{
																	"key": "ssidNumber",
																	"value": "10",
																	"description": "An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "List the clients that have used this network in the timespan",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/clients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&statuses=Offline&statuses=Offline&ip=<string>&ip6=<string>&ip6Local=<string>&mac=<string>&os=<string>&pskGroup=<string>&description=<string>&vlan=<string>&recentDeviceConnections=Wired&recentDeviceConnections=Wireless",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"clients"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
												},
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "statuses",
													"value": "Offline",
													"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'."
												},
												{
													"key": "statuses",
													"value": "Offline",
													"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'."
												},
												{
													"key": "ip",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the ip address field."
												},
												{
													"key": "ip6",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the ip6 address field."
												},
												{
													"key": "ip6Local",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the ip6Local address field."
												},
												{
													"key": "mac",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the mac address field."
												},
												{
													"key": "os",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the os (operating system) field."
												},
												{
													"key": "pskGroup",
													"value": "<string>",
													"description": "Filters clients based on partial or full match for the iPSK name field."
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "Filters clients based on a partial or full match for the description field."
												},
												{
													"key": "vlan",
													"value": "<string>",
													"description": "Filters clients based on the full match for the VLAN field."
												},
												{
													"key": "recentDeviceConnections",
													"value": "Wired",
													"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'."
												},
												{
													"key": "recentDeviceConnections",
													"value": "Wireless",
													"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'."
												}
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the clients that have used this network in the timespan"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/clients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&statuses=Offline&ip=<string>&ip6=<string>&ip6Local=<string>&mac=<string>&os=<string>&pskGroup=<string>&description=<string>&vlan=<string>&recentDeviceConnections=Wireless",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"clients"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "statuses",
															"value": "Offline",
															"description": "Filters clients based on status. Can be one of 'Online' or 'Offline'."
														},
														{
															"key": "ip",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the ip address field."
														},
														{
															"key": "ip6",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the ip6 address field."
														},
														{
															"key": "ip6Local",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the ip6Local address field."
														},
														{
															"key": "mac",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the mac address field."
														},
														{
															"key": "os",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the os (operating system) field."
														},
														{
															"key": "pskGroup",
															"value": "<string>",
															"description": "Filters clients based on partial or full match for the iPSK name field."
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "Filters clients based on a partial or full match for the description field."
														},
														{
															"key": "vlan",
															"value": "<string>",
															"description": "Filters clients based on the full match for the VLAN field."
														},
														{
															"key": "recentDeviceConnections",
															"value": "Wireless",
															"description": "Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'."
														}
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"mac\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"ip6\": \"<string>\",\n  \"description\": \"<string>\",\n  \"firstSeen\": \"<integer>\",\n  \"lastSeen\": \"<integer>\",\n  \"manufacturer\": \"<string>\",\n  \"os\": \"<string>\",\n  \"user\": \"<string>\",\n  \"vlan\": \"<string>\",\n  \"ssid\": \"<string>\",\n  \"switchport\": \"<string>\",\n  \"wirelessCapabilities\": \"<string>\",\n  \"smInstalled\": \"<boolean>\",\n  \"recentDeviceMac\": \"<string>\",\n  \"status\": \"Online\",\n  \"usage\": {\n    \"sent\": \"<float>\",\n    \"recv\": \"<float>\"\n  },\n  \"namedVlan\": \"<string>\",\n  \"adaptivePolicyGroup\": \"<string>\",\n  \"deviceTypePrediction\": \"<string>\",\n  \"recentDeviceSerial\": \"<string>\",\n  \"recentDeviceName\": \"<string>\",\n  \"recentDeviceConnection\": \"Wired\",\n  \"notes\": \"<string>\",\n  \"ip6Local\": \"<string>\",\n  \"groupPolicy8021x\": \"<string>\",\n  \"pskGroup\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "cellularGateway",
							"item": [
								{
									"name": "uplink",
									"item": [
										{
											"name": "Returns the uplink settings for your MG network.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/uplink",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"uplink"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns the uplink settings for your MG network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/uplink",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"uplink"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Updates the uplink settings for your MG network.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/uplink",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"uplink"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Updates the uplink settings for your MG network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/uplink",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"uplink"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "subnetPool",
									"item": [
										{
											"name": "Return the subnet pool and mask configured for MGs in the network.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/subnetPool",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"subnetPool"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the subnet pool and mask configured for MGs in the network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/subnetPool",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"subnetPool"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the subnet pool and mask configuration for MGs in the network.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mask\": \"<integer>\",\n  \"cidr\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/subnetPool",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"subnetPool"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the subnet pool and mask configuration for MGs in the network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mask\": \"<integer>\",\n  \"cidr\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/subnetPool",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"subnetPool"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "List common DHCP settings of MGs",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/dhcp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"dhcp"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List common DHCP settings of MGs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/dhcp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"dhcp"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameservers\": \"google_dns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										},
										{
											"name": "Update common DHCP settings of MGs",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameservers\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/dhcp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"dhcp"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update common DHCP settings of MGs"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dhcpLeaseTime\": \"<string>\",\n  \"dnsNameservers\": \"<string>\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/dhcp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"dhcp"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dhcpLeaseTime\": \"1 day\",\n  \"dnsNameservers\": \"google_dns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "connectivityMonitoringDestinations",
									"item": [
										{
											"name": "Return the connectivity testing destinations for an MG network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/connectivityMonitoringDestinations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the connectivity testing destinations for an MG network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/connectivityMonitoringDestinations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the connectivity testing destinations for an MG network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/connectivityMonitoringDestinations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"cellularGateway",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the connectivity testing destinations for an MG network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"\",\n      \"default\": false\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/cellularGateway/connectivityMonitoringDestinations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"cellularGateway",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "camera",
							"item": [
								{
									"name": "wirelessProfiles",
									"item": [
										{
											"name": "{wirelessProfileId}",
											"item": [
												{
													"name": "Retrieve a single camera wireless profile.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"wirelessProfiles",
																":wireless_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":wireless_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Retrieve a single camera wireless profile."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"wirelessProfiles",
																		":wireless_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":wireless_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update an existing camera wireless profile in this network.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"psk\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"wirelessProfiles",
																":wireless_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":wireless_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an existing camera wireless profile in this network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"psk\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"wirelessProfiles",
																		":wireless_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":wireless_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete an existing camera wireless profile for this network.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"wirelessProfiles",
																":wireless_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":wireless_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete an existing camera wireless profile for this network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles/:wireless_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"wirelessProfiles",
																		":wireless_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":wireless_profile_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Creates a new camera wireless profile for this network.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates a new camera wireless profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"ssid\": {\n    \"name\": \"<string>\",\n    \"authMode\": \"8021x-radius\",\n    \"encryptionMode\": \"<string>\",\n    \"psk\": \"<string>\"\n  },\n  \"identity\": {\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "List the camera wireless profiles for this network.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the camera wireless profiles for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/wirelessProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "schedules",
									"item": [
										{
											"name": "Returns a list of all camera recording schedules.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/camera/schedules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"camera",
														"schedules"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns a list of all camera recording schedules."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/schedules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"schedules"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								},
								{
									"name": "qualityRetentionProfiles",
									"item": [
										{
											"name": "{qualityRetentionProfileId}",
											"item": [
												{
													"name": "Update an existing quality retention profile for this network.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV21/MV71\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV32\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV33\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV13\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV52\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV63\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV63X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1080x1080\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"qualityRetentionProfiles",
																":quality_retention_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":quality_retention_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an existing quality retention profile for this network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV21/MV71\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV32\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV33\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV13\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV52\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV63\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV63X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"1080x1080\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"qualityRetentionProfiles",
																		":quality_retention_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":quality_retention_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete an existing quality retention profile for this network.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"qualityRetentionProfiles",
																":quality_retention_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":quality_retention_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete an existing quality retention profile for this network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"qualityRetentionProfiles",
																		":quality_retention_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":quality_retention_profile_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve a single quality retention profile",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"qualityRetentionProfiles",
																":quality_retention_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":quality_retention_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Retrieve a single quality retention profile"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles/:quality_retention_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"camera",
																		"qualityRetentionProfiles",
																		":quality_retention_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":quality_retention_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List the quality retention profiles for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"camera",
														"qualityRetentionProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the quality retention profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"qualityRetentionProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Creates new quality retention profile for this network.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV21/MV71\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV32\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2058x2058\"\n    },\n    \"MV33\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2112x2112\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV13\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV52\": {\n      \"quality\": \"High\",\n      \"resolution\": \"3840x2160\"\n    },\n    \"MV63\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93\": {\n      \"quality\": \"High\",\n      \"resolution\": \"2112x2112\"\n    },\n    \"MV63X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"3840x2160\"\n    },\n    \"MV93X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2880x2880\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"camera",
														"qualityRetentionProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates new quality retention profile for this network."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"cloudArchiveEnabled\": \"<boolean>\",\n  \"motionDetectorVersion\": \"<integer>\",\n  \"scheduleId\": \"<string>\",\n  \"maxRetentionDays\": \"<integer>\",\n  \"videoSettings\": {\n    \"MV21/MV71\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV12/MV22/MV72\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV32\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2058x2058\"\n    },\n    \"MV33\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2112x2112\"\n    },\n    \"MV12WE\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"1920x1080\"\n    },\n    \"MV13\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1080x1080\"\n    },\n    \"MV22X/MV72X\": {\n      \"quality\": \"High\",\n      \"resolution\": \"1280x720\"\n    },\n    \"MV52\": {\n      \"quality\": \"High\",\n      \"resolution\": \"3840x2160\"\n    },\n    \"MV63\": {\n      \"quality\": \"Enhanced\",\n      \"resolution\": \"2688x1512\"\n    },\n    \"MV93\": {\n      \"quality\": \"High\",\n      \"resolution\": \"2112x2112\"\n    },\n    \"MV63X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"3840x2160\"\n    },\n    \"MV93X\": {\n      \"quality\": \"Standard\",\n      \"resolution\": \"2880x2880\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/camera/qualityRetentionProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"camera",
																"qualityRetentionProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "bluetoothClients",
							"item": [
								{
									"name": "{bluetoothClientId}",
									"item": [
										{
											"name": "Return a Bluetooth client",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/bluetoothClients/:bluetooth_client_id?includeConnectivityHistory=<boolean>&connectivityHistoryTimespan=<integer>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"bluetoothClients",
														":bluetooth_client_id"
													],
													"query": [
														{
															"key": "includeConnectivityHistory",
															"value": "<boolean>",
															"description": "Include the connectivity history for this client"
														},
														{
															"key": "connectivityHistoryTimespan",
															"value": "<integer>",
															"description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														},
														{
															"key": ":bluetooth_client_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/bluetoothClients/:bluetooth_client_id?includeConnectivityHistory=<boolean>&connectivityHistoryTimespan=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"bluetoothClients",
																":bluetooth_client_id"
															],
															"query": [
																{
																	"key": "includeConnectivityHistory",
																	"value": "<boolean>",
																	"description": "Include the connectivity history for this client"
																},
																{
																	"key": "connectivityHistoryTimespan",
																	"value": "<integer>",
																	"description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																},
																{
																	"key": ":bluetooth_client_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "List the Bluetooth clients seen by APs in this network",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/bluetoothClients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&includeConnectivityHistory=<boolean>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"bluetoothClients"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
												},
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "includeConnectivityHistory",
													"value": "<boolean>",
													"description": "Include the connectivity history for this client"
												}
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the Bluetooth clients seen by APs in this network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/bluetoothClients?t0=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&includeConnectivityHistory=<boolean>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"bluetoothClients"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "includeConnectivityHistory",
															"value": "<boolean>",
															"description": "Include the connectivity history for this client"
														}
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "bind",
							"item": [
								{
									"name": "Bind a network to a template.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"configTemplateId\": \"<string>\",\n  \"autoBind\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id/bind",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id",
												"bind"
											],
											"variable": [
												{
													"key": ":network_id",
													"value": "<string>"
												}
											]
										},
										"description": "Bind a network to a template."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"configTemplateId\": \"<string>\",\n  \"autoBind\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/bind",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"bind"
													],
													"variable": [
														{
															"key": ":network_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "appliance",
							"item": [
								{
									"name": "warmSpare",
									"item": [
										{
											"name": "swap",
											"item": [
												{
													"name": "Swap MX primary and warm spare appliances",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare/swap",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"warmSpare",
																"swap"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Swap MX primary and warm spare appliances"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare/swap",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"warmSpare",
																		"swap"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Return MX warm spare settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"warmSpare"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return MX warm spare settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"warmSpare"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update MX warm spare settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\",\n  \"uplinkMode\": \"<string>\",\n  \"virtualIp1\": \"<string>\",\n  \"virtualIp2\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"warmSpare"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update MX warm spare settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\",\n  \"uplinkMode\": \"<string>\",\n  \"virtualIp1\": \"<string>\",\n  \"virtualIp2\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/warmSpare",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"warmSpare"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "vpn",
									"item": [
										{
											"name": "siteToSiteVpn",
											"item": [
												{
													"name": "Return the site-to-site VPN settings of a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/siteToSiteVpn",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vpn",
																"siteToSiteVpn"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the site-to-site VPN settings of a network. Only valid for MX networks."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/siteToSiteVpn",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vpn",
																		"siteToSiteVpn"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"<string>\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update the site-to-site VPN settings of a network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"spoke\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/siteToSiteVpn",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vpn",
																"siteToSiteVpn"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"spoke\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/siteToSiteVpn",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vpn",
																		"siteToSiteVpn"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mode\": \"<string>\",\n  \"hubs\": [\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    },\n    {\n      \"hubId\": \"<string>\",\n      \"useDefaultRoute\": \"<boolean>\"\n    }\n  ],\n  \"subnets\": [\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    },\n    {\n      \"localSubnet\": \"<string>\",\n      \"useVpn\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "bgp",
											"item": [
												{
													"name": "Return a Hub BGP Configuration",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/bgp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vpn",
																"bgp"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a Hub BGP Configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/bgp",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vpn",
																		"bgp"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update a Hub BGP Configuration",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"asNumber\": \"<integer>\",\n  \"ibgpHoldTimer\": \"<integer>\",\n  \"neighbors\": [\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    },\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/bgp",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vpn",
																"bgp"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a Hub BGP Configuration"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"asNumber\": \"<integer>\",\n  \"ibgpHoldTimer\": \"<integer>\",\n  \"neighbors\": [\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    },\n    {\n      \"remoteAsNumber\": \"<integer>\",\n      \"ebgpHoldTimer\": \"<integer>\",\n      \"ebgpMultihop\": \"<integer>\",\n      \"ip\": \"<string>\",\n      \"ipv6\": {\n        \"address\": \"<string>\"\n      },\n      \"receiveLimit\": \"<integer>\",\n      \"allowTransit\": \"<boolean>\",\n      \"sourceInterface\": \"<string>\",\n      \"nextHopIp\": \"<string>\",\n      \"ttlSecurity\": {\n        \"enabled\": \"<boolean>\"\n      },\n      \"authentication\": {\n        \"password\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vpn/bgp",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vpn",
																		"bgp"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "vlans",
									"item": [
										{
											"name": "{vlanId}",
											"item": [
												{
													"name": "Return a VLAN",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans",
																":vlan_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":vlan_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a VLAN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vlans",
																		":vlan_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":vlan_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpHandling\": \"Relay DHCP to another server\",\n  \"dhcpLeaseTime\": \"1 hour\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"hex\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"vpnNatSubnet\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "Update a VLAN",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"vpnNatSubnet\": \"<string>\",\n  \"dhcpHandling\": \"Do not respond to DHCP requests\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"4 hours\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"templateVlanType\": \"unique\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans",
																":vlan_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":vlan_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a VLAN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"vpnNatSubnet\": \"<string>\",\n  \"dhcpHandling\": \"Do not respond to DHCP requests\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"4 hours\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"templateVlanType\": \"unique\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vlans",
																		":vlan_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":vlan_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpHandling\": \"Relay DHCP to another server\",\n  \"dhcpLeaseTime\": \"1 hour\",\n  \"dhcpBootOptionsEnabled\": \"<boolean>\",\n  \"dhcpBootNextServer\": \"<string>\",\n  \"dhcpBootFilename\": \"<string>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"dnsNameservers\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"text\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"hex\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"vpnNatSubnet\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
														}
													]
												},
												{
													"name": "Delete a VLAN from a network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans",
																":vlan_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":vlan_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a VLAN from a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/:vlan_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vlans",
																		":vlan_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":vlan_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "settings",
											"item": [
												{
													"name": "Returns the enabled status of VLANs for the network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns the enabled status of VLANs for the network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vlans",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Enable/Disable VLANs for the given network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"vlansEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Enable/Disable VLANs for the given network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"vlansEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"vlans",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List the VLANs for an MX network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"vlans"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the VLANs for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"interfaceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"applianceIp\": \"<string>\",\n    \"groupPolicyId\": \"<string>\",\n    \"templateVlanType\": \"same\",\n    \"cidr\": \"<string>\",\n    \"mask\": \"<integer>\",\n    \"dhcpRelayServerIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcpHandling\": \"Run a DHCP server\",\n    \"dhcpLeaseTime\": \"4 hours\",\n    \"dhcpBootOptionsEnabled\": \"<boolean>\",\n    \"dhcpBootNextServer\": \"<string>\",\n    \"dhcpBootFilename\": \"<string>\",\n    \"fixedIpAssignments\": {},\n    \"reservedIpRanges\": [\n      {\n        \"start\": \"<string>\",\n        \"end\": \"<string>\",\n        \"comment\": \"<string>\"\n      },\n      {\n        \"start\": \"<string>\",\n        \"end\": \"<string>\",\n        \"comment\": \"<string>\"\n      }\n    ],\n    \"dnsNameservers\": \"<string>\",\n    \"dhcpOptions\": [\n      {\n        \"code\": \"<string>\",\n        \"type\": \"ip\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"type\": \"ip\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"vpnNatSubnet\": \"<string>\",\n    \"mandatoryDhcp\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"ipv6\": {\n      \"enabled\": \"<boolean>\",\n      \"prefixAssignments\": [\n        {\n          \"autonomous\": \"<boolean>\",\n          \"staticPrefix\": \"<string>\",\n          \"staticApplianceIp6\": \"<string>\",\n          \"origin\": {\n            \"type\": \"independent\",\n            \"interfaces\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        {\n          \"autonomous\": \"<boolean>\",\n          \"staticPrefix\": \"<string>\",\n          \"staticApplianceIp6\": \"<string>\",\n          \"origin\": {\n            \"type\": \"internet\",\n            \"interfaces\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"interfaceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"applianceIp\": \"<string>\",\n    \"groupPolicyId\": \"<string>\",\n    \"templateVlanType\": \"same\",\n    \"cidr\": \"<string>\",\n    \"mask\": \"<integer>\",\n    \"dhcpRelayServerIps\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"dhcpHandling\": \"Relay DHCP to another server\",\n    \"dhcpLeaseTime\": \"12 hours\",\n    \"dhcpBootOptionsEnabled\": \"<boolean>\",\n    \"dhcpBootNextServer\": \"<string>\",\n    \"dhcpBootFilename\": \"<string>\",\n    \"fixedIpAssignments\": {},\n    \"reservedIpRanges\": [\n      {\n        \"start\": \"<string>\",\n        \"end\": \"<string>\",\n        \"comment\": \"<string>\"\n      },\n      {\n        \"start\": \"<string>\",\n        \"end\": \"<string>\",\n        \"comment\": \"<string>\"\n      }\n    ],\n    \"dnsNameservers\": \"<string>\",\n    \"dhcpOptions\": [\n      {\n        \"code\": \"<string>\",\n        \"type\": \"ip\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"code\": \"<string>\",\n        \"type\": \"integer\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"vpnNatSubnet\": \"<string>\",\n    \"mandatoryDhcp\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"ipv6\": {\n      \"enabled\": \"<boolean>\",\n      \"prefixAssignments\": [\n        {\n          \"autonomous\": \"<boolean>\",\n          \"staticPrefix\": \"<string>\",\n          \"staticApplianceIp6\": \"<string>\",\n          \"origin\": {\n            \"type\": \"internet\",\n            \"interfaces\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        {\n          \"autonomous\": \"<boolean>\",\n          \"staticPrefix\": \"<string>\",\n          \"staticApplianceIp6\": \"<string>\",\n          \"origin\": {\n            \"type\": \"independent\",\n            \"interfaces\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      ]\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "Add a VLAN",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"vlans"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a VLAN"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/vlans",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"vlans"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"groupPolicyId\": \"<string>\",\n  \"templateVlanType\": \"same\",\n  \"cidr\": \"<string>\",\n  \"mask\": \"<integer>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "usageHistory",
											"item": [
												{
													"name": "Get the sent and received bytes for each uplink of a network.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/uplinks/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"uplinks",
																"usageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes."
																},
																{
																	"key": "resolution",
																	"value": "<integer>",
																	"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60."
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get the sent and received bytes for each uplink of a network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/uplinks/usageHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"uplinks",
																		"usageHistory"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes."
																		},
																		{
																			"key": "resolution",
																			"value": "<integer>",
																			"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "trafficShaping",
									"item": [
										{
											"name": "uplinkSelection",
											"item": [
												{
													"name": "Show uplink selection settings for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkSelection",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"uplinkSelection"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Show uplink selection settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkSelection",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"uplinkSelection"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"wan1\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"icmp6\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"udp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"tcp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"loadBalancing\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"builtin\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"application\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"udp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\",\n      \"failOverCriterion\": \"poorPerformance\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update uplink selection settings for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"wan2\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"tcp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"udp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"application\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"any\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"builtin\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"any\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkSelection",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"uplinkSelection"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update uplink selection settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"wan2\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"tcp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"udp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"application\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"any\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"builtin\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"any\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkSelection",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"uplinkSelection"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n  \"defaultUplink\": \"wan1\",\n  \"loadBalancingEnabled\": \"<boolean>\",\n  \"failoverAndFailback\": {\n    \"immediate\": {\n      \"enabled\": \"<boolean>\"\n    }\n  },\n  \"wanTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"icmp6\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"udp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\"\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"any\"\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\"\n            },\n            \"protocol\": \"tcp\"\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan1\"\n    }\n  ],\n  \"vpnTrafficUplinkPreferences\": [\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"tcp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"loadBalancing\",\n      \"failOverCriterion\": \"uplinkDown\",\n      \"performanceClass\": {\n        \"type\": \"builtin\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    },\n    {\n      \"trafficFilters\": [\n        {\n          \"type\": \"applicationCategory\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"icmp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"type\": \"application\",\n          \"value\": {\n            \"id\": \"<string>\",\n            \"protocol\": \"udp\",\n            \"source\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\"\n            },\n            \"destination\": {\n              \"port\": \"<string>\",\n              \"cidr\": \"<string>\",\n              \"network\": \"<string>\",\n              \"vlan\": \"<integer>\",\n              \"host\": \"<integer>\",\n              \"fqdn\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"preferredUplink\": \"wan2\",\n      \"failOverCriterion\": \"poorPerformance\",\n      \"performanceClass\": {\n        \"type\": \"custom\",\n        \"builtinPerformanceClassName\": \"VoIP\",\n        \"customPerformanceClassId\": \"<string>\"\n      }\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "uplinkBandwidth",
											"item": [
												{
													"name": "Returns the uplink bandwidth limits for your MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkBandwidth",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"uplinkBandwidth"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns the uplink bandwidth limits for your MX network. This may not reflect the affected device's hardware capabilities.  For more information on your device's hardware capabilities, please consult our MX Family Datasheet - [https://meraki.cisco.com/product-collateral/mx-family-datasheet/?file]"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkBandwidth",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"uplinkBandwidth"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"wan2\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"cellular\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Updates the uplink bandwidth settings for your MX network.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"wan2\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"cellular\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkBandwidth",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"uplinkBandwidth"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates the uplink bandwidth settings for your MX network."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"bandwidthLimits\": {\n    \"wan1\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"wan2\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    },\n    \"cellular\": {\n      \"limitUp\": \"<integer>\",\n      \"limitDown\": \"<integer>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/uplinkBandwidth",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"uplinkBandwidth"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "rules",
											"item": [
												{
													"name": "Update the traffic shaping settings rules for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/rules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"rules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the traffic shaping settings rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"defaultRulesEnabled\": \"<boolean>\",\n  \"rules\": [\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    },\n    {\n      \"definitions\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"application\",\n                \"applicationCategory\",\n                \"host\",\n                \"ipRange\",\n                \"localNet\",\n                \"port\"\n              ],\n              \"description\": \"The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\"\n            },\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then \\\"value\\\" must be a string, matching either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation, excluding\\n    custom ports.\\n     If \\\"type\\\" is 'application' or 'applicationCategory', then \\\"value\\\" must be an object\\n    with the structure { \\\"id\\\": \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application category or\\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\\n    endpoint).\\n\",\n              \"default\": \"<string>\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"value\"\n          ]\n        },\n        \"description\": \"    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\\n\",\n        \"maxItems\": 2\n      },\n      \"perClientBandwidthLimits\": {\n        \"settings\": \"<string>\",\n        \"bandwidthLimits\": {\n          \"limitUp\": \"<integer>\",\n          \"limitDown\": \"<integer>\"\n        }\n      },\n      \"dscpTagValue\": \"<integer>\",\n      \"priority\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/rules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Display the traffic shaping settings rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/rules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"rules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Display the traffic shaping settings rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/rules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"rules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "customPerformanceClasses",
											"item": [
												{
													"name": "{customPerformanceClassId}",
													"item": [
														{
															"name": "Return a custom performance class for an MX network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":custom_performance_class_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":custom_performance_class_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return a custom performance class for an MX network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"trafficShaping",
																				"customPerformanceClasses",
																				":custom_performance_class_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":custom_performance_class_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update a custom performance class for an MX network",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":custom_performance_class_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":custom_performance_class_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update a custom performance class for an MX network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"trafficShaping",
																				"customPerformanceClasses",
																				":custom_performance_class_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":custom_performance_class_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Delete a custom performance class from an MX network",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses",
																		":custom_performance_class_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":custom_performance_class_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete a custom performance class from an MX network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses/:custom_performance_class_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"trafficShaping",
																				"customPerformanceClasses",
																				":custom_performance_class_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":custom_performance_class_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List all custom performance classes for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List all custom performance classes for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Add a custom performance class for an MX network",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping",
																"customPerformanceClasses"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Add a custom performance class for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"maxLatency\": \"<integer>\",\n  \"maxJitter\": \"<integer>\",\n  \"maxLossPercentage\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping/customPerformanceClasses",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"trafficShaping",
																		"customPerformanceClasses"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Display the traffic shaping settings for an MX network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"trafficShaping"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Display the traffic shaping settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the traffic shaping settings for an MX network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"trafficShaping"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the traffic shaping settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"globalBandwidthLimits\": {\n    \"limitUp\": \"<integer>\",\n    \"limitDown\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/trafficShaping",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"trafficShaping"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "staticRoutes",
									"item": [
										{
											"name": "{staticRouteId}",
											"item": [
												{
													"name": "Return a static route for an MX or teleworker network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"staticRoutes",
																":static_route_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":static_route_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a static route for an MX or teleworker network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":static_route_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update a static route for an MX or teleworker network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"staticRoutes",
																":static_route_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":static_route_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a static route for an MX or teleworker network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"fixedIpAssignments\": {},\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":static_route_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete a static route from an MX or teleworker network",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"staticRoutes",
																":static_route_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":static_route_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a static route from an MX or teleworker network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":static_route_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the static routes for an MX or teleworker network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"staticRoutes"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the static routes for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Add a static route for an MX or teleworker network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"staticRoutes"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a static route for an MX or teleworker network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"gatewayIp\": \"<string>\",\n  \"gatewayVlanId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/staticRoutes",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "ssids",
									"item": [
										{
											"name": "{number}",
											"item": [
												{
													"name": "Return a single MX SSID",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids/:ssid_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ssids",
																":ssid_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":ssid_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a single MX SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids/:ssid_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"ssids",
																		":ssid_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":ssid_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"encryptionMode\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"visible\": \"<boolean>\"\n}"
														}
													]
												},
												{
													"name": "Update the attributes of an MX SSID",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"8021x-meraki\",\n  \"psk\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA3 only\",\n  \"visible\": \"<boolean>\",\n  \"dhcpEnforcedDeauthentication\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids/:ssid_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ssids",
																":ssid_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":ssid_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the attributes of an MX SSID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"8021x-meraki\",\n  \"psk\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\",\n      \"secret\": \"<string>\"\n    }\n  ],\n  \"encryptionMode\": \"wpa\",\n  \"wpaEncryptionMode\": \"WPA3 only\",\n  \"visible\": \"<boolean>\",\n  \"dhcpEnforcedDeauthentication\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"dot11w\": {\n    \"enabled\": \"<boolean>\",\n    \"required\": \"<boolean>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids/:ssid_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"ssids",
																		":ssid_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":ssid_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"defaultVlanId\": \"<integer>\",\n  \"authMode\": \"<string>\",\n  \"radiusServers\": [\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    },\n    {\n      \"host\": \"<string>\",\n      \"port\": \"<integer>\"\n    }\n  ],\n  \"encryptionMode\": \"<string>\",\n  \"wpaEncryptionMode\": \"<string>\",\n  \"visible\": \"<boolean>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the MX SSIDs in a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"ssids"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the MX SSIDs in a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ssids",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ssids"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"defaultVlanId\": \"<integer>\",\n    \"authMode\": \"<string>\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"encryptionMode\": \"<string>\",\n    \"wpaEncryptionMode\": \"<string>\",\n    \"visible\": \"<boolean>\"\n  },\n  {\n    \"number\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"defaultVlanId\": \"<integer>\",\n    \"authMode\": \"<string>\",\n    \"radiusServers\": [\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      },\n      {\n        \"host\": \"<string>\",\n        \"port\": \"<integer>\"\n      }\n    ],\n    \"encryptionMode\": \"<string>\",\n    \"wpaEncryptionMode\": \"<string>\",\n    \"visible\": \"<boolean>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "singleLan",
									"item": [
										{
											"name": "Return single LAN configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/singleLan",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"singleLan"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return single LAN configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/singleLan",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"singleLan"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "Update single LAN configuration",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/singleLan",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"singleLan"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update single LAN configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  },\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/singleLan",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"singleLan"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subnet\": \"<string>\",\n  \"applianceIp\": \"<string>\",\n  \"mandatoryDhcp\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"enabled\": \"<boolean>\",\n    \"prefixAssignments\": [\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"internet\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      },\n      {\n        \"autonomous\": \"<boolean>\",\n        \"staticPrefix\": \"<string>\",\n        \"staticApplianceIp6\": \"<string>\",\n        \"origin\": {\n          \"type\": \"independent\",\n          \"interfaces\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "settings",
									"item": [
										{
											"name": "Return the appliance settings for a network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the appliance settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"enabled\": \"<boolean>\",\n    \"prefix\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										},
										{
											"name": "Update the appliance settings for a network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"prefix\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the appliance settings for a network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"prefix\": \"<string>\",\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"clientTrackingMethod\": \"MAC address\",\n  \"deploymentMode\": \"routed\",\n  \"dynamicDns\": {\n    \"enabled\": \"<boolean>\",\n    \"prefix\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "security",
									"item": [
										{
											"name": "malware",
											"item": [
												{
													"name": "Returns all supported malware settings for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/security/malware",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"security",
																"malware"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns all supported malware settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/security/malware",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"security",
																		"malware"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Set the supported malware settings for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"enabled\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/security/malware",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"security",
																"malware"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Set the supported malware settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"enabled\",\n  \"allowedUrls\": [\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"allowedFiles\": [\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"sha256\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/security/malware",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"security",
																		"malware"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "intrusion",
											"item": [
												{
													"name": "Returns all supported intrusion settings for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/security/intrusion",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns all supported intrusion settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/security/intrusion",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Set the supported intrusion settings for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"detection\",\n  \"idsRulesets\": \"balanced\",\n  \"protectedNetworks\": {\n    \"useDefault\": \"<boolean>\",\n    \"includedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/security/intrusion",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Set the supported intrusion settings for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"mode\": \"detection\",\n  \"idsRulesets\": \"balanced\",\n  \"protectedNetworks\": {\n    \"useDefault\": \"<boolean>\",\n    \"includedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"excludedCidr\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/security/intrusion",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "events",
											"item": [
												{
													"name": "List the security events for a network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"security",
																"events"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "sortOrder",
																	"value": "ascending",
																	"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																}
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the security events for a network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"security",
																		"events"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "sortOrder",
																			"value": "ascending",
																			"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																		}
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "rfProfiles",
									"item": [
										{
											"name": "{rfProfileId}",
											"item": [
												{
													"name": "Updates specified RF profile for this network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates specified RF profile for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"dual\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Delete a RF Profile",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a RF Profile"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Return a RF profile",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"rfProfiles",
																":rf_profile_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":rf_profile_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a RF profile"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles/:rf_profile_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"rfProfiles",
																		":rf_profile_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":rf_profile_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the RF profiles for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"rfProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the RF profiles for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"assigned\": [\n    {\n      \"id\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"twoFourGhzSettings\": {\n        \"minBitrate\": \"<float>\",\n        \"axEnabled\": \"<boolean>\"\n      },\n      \"fiveGhzSettings\": {\n        \"minBitrate\": \"<integer>\",\n        \"axEnabled\": \"<boolean>\"\n      },\n      \"perSsidSettings\": {\n        \"1\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"2\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"3\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"4\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        }\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"twoFourGhzSettings\": {\n        \"minBitrate\": \"<float>\",\n        \"axEnabled\": \"<boolean>\"\n      },\n      \"fiveGhzSettings\": {\n        \"minBitrate\": \"<integer>\",\n        \"axEnabled\": \"<boolean>\"\n      },\n      \"perSsidSettings\": {\n        \"1\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"2\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"3\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        },\n        \"4\": {\n          \"bandOperationMode\": \"<string>\",\n          \"bandSteeringEnabled\": \"<boolean>\"\n        }\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Creates new RF profile for this network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"rfProfiles"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates new RF profile for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"2.4ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"5ghz\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/rfProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"rfProfiles"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"minBitrate\": \"<float>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"fiveGhzSettings\": {\n    \"minBitrate\": \"<integer>\",\n    \"axEnabled\": \"<boolean>\"\n  },\n  \"perSsidSettings\": {\n    \"1\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"2\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"3\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    },\n    \"4\": {\n      \"bandOperationMode\": \"<string>\",\n      \"bandSteeringEnabled\": \"<boolean>\"\n    }\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "prefixes",
									"item": [
										{
											"name": "delegated",
											"item": [
												{
													"name": "statics",
													"item": [
														{
															"name": "{staticDelegatedPrefixId}",
															"item": [
																{
																	"name": "Return a static delegated prefix from a network",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":static_delegated_prefix_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":static_delegated_prefix_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return a static delegated prefix from a network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"appliance",
																						"prefixes",
																						"delegated",
																						"statics",
																						":static_delegated_prefix_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":static_delegated_prefix_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"staticDelegatedPrefixId\": \"<string>\",\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"<string>\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
																		}
																	]
																},
																{
																	"name": "Update a static delegated prefix from a network",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"independent\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":static_delegated_prefix_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":static_delegated_prefix_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update a static delegated prefix from a network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"independent\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"appliance",
																						"prefixes",
																						"delegated",
																						"statics",
																						":static_delegated_prefix_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":static_delegated_prefix_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Delete a static delegated prefix from a network",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics",
																				":static_delegated_prefix_id"
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":static_delegated_prefix_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Delete a static delegated prefix from a network"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics/:static_delegated_prefix_id",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"appliance",
																						"prefixes",
																						"delegated",
																						"statics",
																						":static_delegated_prefix_id"
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":static_delegated_prefix_id"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "List static delegated prefixes for a network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List static delegated prefixes for a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"staticDelegatedPrefixId\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"origin\": {\n      \"type\": \"<string>\",\n      \"interfaces\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"description\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"staticDelegatedPrefixId\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"origin\": {\n      \"type\": \"<string>\",\n      \"interfaces\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"description\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
																}
															]
														},
														{
															"name": "Add a static delegated prefix from a network",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"internet\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"statics"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Add a static delegated prefix from a network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"prefix\": \"<string>\",\n  \"origin\": {\n    \"type\": \"internet\",\n    \"interfaces\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"description\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/prefixes/delegated/statics",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"statics"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "ports",
									"item": [
										{
											"name": "{portId}",
											"item": [
												{
													"name": "Return per-port VLAN settings for a single MX port.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ports/:port_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ports",
																":port_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":port_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return per-port VLAN settings for a single MX port."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/ports/:port_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"ports",
																		":port_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":port_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"enabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"dropUntaggedTraffic\": \"<boolean>\",\n  \"vlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"accessPolicy\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update the per-port VLAN settings for a single MX port.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"dropUntaggedTraffic\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"accessPolicy\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ports/:port_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ports",
																":port_id"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																},
																{
																	"key": ":port_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the per-port VLAN settings for a single MX port."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"dropUntaggedTraffic\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"vlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"accessPolicy\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/ports/:port_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"ports",
																		":port_id"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		},
																		{
																			"key": ":port_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"number\": \"<integer>\",\n  \"enabled\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"dropUntaggedTraffic\": \"<boolean>\",\n  \"vlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"accessPolicy\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List per-port VLAN settings for all ports of a MX.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/ports",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"ports"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "List per-port VLAN settings for all ports of a MX."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/ports",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"ports"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"number\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"type\": \"<string>\",\n    \"dropUntaggedTraffic\": \"<boolean>\",\n    \"vlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"accessPolicy\": \"<string>\"\n  },\n  {\n    \"number\": \"<integer>\",\n    \"enabled\": \"<boolean>\",\n    \"type\": \"<string>\",\n    \"dropUntaggedTraffic\": \"<boolean>\",\n    \"vlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"accessPolicy\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "firewall",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Return the firewall settings for this network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the firewall settings for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the firewall settings for this network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"block\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the firewall settings for this network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"spoofingProtection\": {\n    \"ipSourceGuard\": {\n      \"mode\": \"block\"\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "portForwardingRules",
											"item": [
												{
													"name": "Return the port forwarding rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/portForwardingRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the port forwarding rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/portForwardingRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"portForwardingRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the port forwarding rules for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"udp\",\n      \"name\": \"<string>\",\n      \"uplink\": \"internet2\"\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"udp\",\n      \"name\": \"<string>\",\n      \"uplink\": \"internet1\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/portForwardingRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the port forwarding rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"udp\",\n      \"name\": \"<string>\",\n      \"uplink\": \"internet2\"\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"protocol\": \"udp\",\n      \"name\": \"<string>\",\n      \"uplink\": \"internet1\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/portForwardingRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"portForwardingRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "oneToOneNatRules",
											"item": [
												{
													"name": "Return the 1:1 NAT mapping rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToOneNatRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"oneToOneNatRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the 1:1 NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToOneNatRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"oneToOneNatRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Set the 1:1 NAT mapping rules for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"icmp-ping\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"protocol\": \"udp\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"any\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"protocol\": \"any\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToOneNatRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"oneToOneNatRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Set the 1:1 NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"icmp-ping\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"protocol\": \"udp\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"allowedInbound\": [\n        {\n          \"protocol\": \"any\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"protocol\": \"any\",\n          \"destinationPorts\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToOneNatRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"oneToOneNatRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "oneToManyNatRules",
											"item": [
												{
													"name": "Return the 1:Many NAT mapping rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToManyNatRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"oneToManyNatRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the 1:Many NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToManyNatRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"oneToManyNatRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Set the 1:Many NAT mapping rules for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet1\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"udp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToManyNatRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"oneToManyNatRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Set the 1:Many NAT mapping rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet1\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    },\n    {\n      \"publicIp\": \"<string>\",\n      \"uplink\": \"internet2\",\n      \"portRules\": [\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"tcp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        {\n          \"name\": \"<string>\",\n          \"protocol\": \"udp\",\n          \"publicPort\": \"<string>\",\n          \"localIp\": \"<string>\",\n          \"localPort\": \"<string>\",\n          \"allowedIps\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/oneToManyNatRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"oneToManyNatRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "l7FirewallRules",
											"item": [
												{
													"name": "applicationCategories",
													"item": [
														{
															"name": "Return the L7 firewall application categories and their associated applications for an MX network",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules/applicationCategories",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"l7FirewallRules",
																		"applicationCategories"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the L7 firewall application categories and their associated applications for an MX network"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules/applicationCategories",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"firewall",
																				"l7FirewallRules",
																				"applicationCategories"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"applicationCategories\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"applications\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List the MX L7 firewall rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"l7FirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the MX L7 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the MX L7 firewall rules for an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"application\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"l7FirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the MX L7 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"type\": \"port\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"type\": \"application\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l7FirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"l7FirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "l3FirewallRules",
											"item": [
												{
													"name": "Return the L3 firewall rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l3FirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"l3FirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the L3 firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l3FirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the L3 firewall rules of an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l3FirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"l3FirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the L3 firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/l3FirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"l3FirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "inboundFirewallRules",
											"item": [
												{
													"name": "Return the inbound firewall rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"inboundFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the inbound firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"inboundFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the inbound firewall rules of an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"inboundFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the inbound firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"udp\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"inboundFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "inboundCellularFirewallRules",
											"item": [
												{
													"name": "Return the inbound cellular firewall rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundCellularFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"inboundCellularFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the inbound cellular firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundCellularFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"inboundCellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Update the inbound cellular firewall rules of an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundCellularFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"inboundCellularFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the inbound cellular firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/inboundCellularFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"inboundCellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "firewalledServices",
											"item": [
												{
													"name": "{service}",
													"item": [
														{
															"name": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices/:service",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"firewalledServices",
																		":service"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":service",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices/:service",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"firewall",
																				"firewalledServices",
																				":service"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":service"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"access\": \"restricted\",\n  \"allowedIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices/:service",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"firewalledServices",
																		":service"
																	],
																	"variable": [
																		{
																			"key": ":network_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":service",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"access\": \"restricted\",\n  \"allowedIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices/:service",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"firewall",
																				"firewalledServices",
																				":service"
																			],
																			"variable": [
																				{
																					"key": ":network_id"
																				},
																				{
																					"key": ":service"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "List the appliance services and their accessibility rules",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"firewalledServices"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the appliance services and their accessibility rules"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/firewalledServices",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"firewalledServices"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "cellularFirewallRules",
											"item": [
												{
													"name": "Return the cellular firewall rules for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/cellularFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"cellularFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the cellular firewall rules for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/cellularFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"cellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the cellular firewall rules of an MX network",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/cellularFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"firewall",
																"cellularFirewallRules"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the cellular firewall rules of an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"icmp6\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/firewall/cellularFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"firewall",
																		"cellularFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "contentFiltering",
									"item": [
										{
											"name": "categories",
											"item": [
												{
													"name": "List all available content filtering categories for an MX network",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering/categories",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"contentFiltering",
																"categories"
															],
															"variable": [
																{
																	"key": ":network_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List all available content filtering categories for an MX network"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering/categories",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"networks",
																		":network_id",
																		"appliance",
																		"contentFiltering",
																		"categories"
																	],
																	"variable": [
																		{
																			"key": ":network_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Return the content filtering settings for an MX network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"contentFiltering"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the content filtering settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"contentFiltering"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the content filtering settings for an MX network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlCategories\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"urlCategoryListSize\": \"topSites\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"contentFiltering"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the content filtering settings for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlPatterns\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"blockedUrlCategories\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"urlCategoryListSize\": \"topSites\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/contentFiltering",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"contentFiltering"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "connectivityMonitoringDestinations",
									"item": [
										{
											"name": "Return the connectivity testing destinations for an MX network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/connectivityMonitoringDestinations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the connectivity testing destinations for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/connectivityMonitoringDestinations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the connectivity testing destinations for an MX network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/appliance/connectivityMonitoringDestinations",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"appliance",
														"connectivityMonitoringDestinations"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the connectivity testing destinations for an MX network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destinations\": [\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"description\": \"<string>\",\n      \"default\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/appliance/connectivityMonitoringDestinations",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"appliance",
																"connectivityMonitoringDestinations"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "clients",
									"item": [
										{
											"name": "{clientId}",
											"item": [
												{
													"name": "security",
													"item": [
														{
															"name": "events",
															"item": [
																{
																	"name": "List the security events for a client",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/networks/:network_id/appliance/clients/:client_id/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"networks",
																				":network_id",
																				"appliance",
																				"clients",
																				":client_id",
																				"security",
																				"events"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "sortOrder",
																					"value": "ascending",
																					"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																				}
																			],
																			"variable": [
																				{
																					"key": ":network_id",
																					"value": "<string>"
																				},
																				{
																					"key": ":client_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/networks/:network_id/appliance/clients/:client_id/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"networks",
																						":network_id",
																						"appliance",
																						"clients",
																						":client_id",
																						"security",
																						"events"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "sortOrder",
																							"value": "ascending",
																							"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																						}
																					],
																					"variable": [
																						{
																							"key": ":network_id"
																						},
																						{
																							"key": ":client_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				},
																				{
																					"key": "Link",
																					"value": "<string>",
																					"description": {
																						"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																						"type": "text/plain"
																					}
																				}
																			],
																			"cookie": [],
																			"body": "[]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "alerts",
							"item": [
								{
									"name": "settings",
									"item": [
										{
											"name": "Return the alert configuration for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/alerts/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"alerts",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the alert configuration for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/alerts/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"alerts",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the alert configuration for this network",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allAdmins\": \"<boolean>\",\n    \"snmp\": \"<boolean>\",\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {}\n    },\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {}\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/alerts/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"alerts",
														"settings"
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the alert configuration for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"defaultDestinations\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"allAdmins\": \"<boolean>\",\n    \"snmp\": \"<boolean>\",\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"alerts\": [\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {}\n    },\n    {\n      \"type\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"alertDestinations\": {\n        \"emails\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\": \"<boolean>\",\n        \"httpServerIds\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"filters\": {}\n    }\n  ],\n  \"muting\": {\n    \"byPortSchedules\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/alerts/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"alerts",
																"settings"
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "history",
									"item": [
										{
											"name": "Return the alert history for this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/networks/:network_id/alerts/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"networks",
														":network_id",
														"alerts",
														"history"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":network_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the alert history for this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/networks/:network_id/alerts/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"networks",
																":network_id",
																"alerts",
																"history"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":network_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"occurredAt\": \"<string>\",\n    \"alertTypeId\": \"<string>\",\n    \"alertType\": \"<string>\",\n    \"device\": {\n      \"serial\": \"<string>\"\n    },\n    \"destinations\": {\n      \"email\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"push\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"sms\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"webhook\": {\n        \"sentAt\": \"<string>\"\n      }\n    },\n    \"alertData\": {}\n  },\n  {\n    \"occurredAt\": \"<string>\",\n    \"alertTypeId\": \"<string>\",\n    \"alertType\": \"<string>\",\n    \"device\": {\n      \"serial\": \"<string>\"\n    },\n    \"destinations\": {\n      \"email\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"push\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"sms\": {\n        \"sentAt\": \"<string>\"\n      },\n      \"webhook\": {\n        \"sentAt\": \"<string>\"\n      }\n    },\n    \"alertData\": {}\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Return a network",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{hostname}}/networks/:network_id",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"networks",
										":network_id"
									],
									"variable": [
										{
											"key": ":network_id",
											"value": "<string>"
										}
									]
								},
								"description": "Return a network"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id"
											],
											"variable": [
												{
													"key": ":network_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"url\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isBoundToConfigTemplate\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Update a network",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{hostname}}/networks/:network_id",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"networks",
										":network_id"
									],
									"variable": [
										{
											"key": ":network_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update a network"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/networks/:network_id",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"networks",
												":network_id"
											],
											"variable": [
												{
													"key": ":network_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"url\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isBoundToConfigTemplate\": \"<boolean>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "{organizationId}",
					"item": [
						{
							"name": "wireless",
							"item": [
								{
									"name": "devices",
									"item": [
										{
											"name": "ethernet",
											"item": [
												{
													"name": "statuses",
													"item": [
														{
															"name": "Endpoint to see power status for wireless devices",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/ethernet/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"wireless",
																		"devices",
																		"ethernet",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Endpoint to see power status for wireless devices"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/ethernet/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"wireless",
																				"devices",
																				"ethernet",
																				"statuses"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>",
																					"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"power\": {\n      \"mode\": \"<string>\",\n      \"ac\": {\n        \"isConnected\": \"<boolean>\"\n      },\n      \"poe\": {\n        \"isConnected\": \"<boolean>\"\n      }\n    },\n    \"ports\": [\n      {\n        \"name\": \"<string>\",\n        \"poe\": {\n          \"standard\": \"<string>\"\n        },\n        \"linkNegotiation\": {\n          \"duplex\": \"<string>\",\n          \"speed\": \"<integer>\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"poe\": {\n          \"standard\": \"<string>\"\n        },\n        \"linkNegotiation\": {\n          \"duplex\": \"<string>\",\n          \"speed\": \"<integer>\"\n        }\n      }\n    ],\n    \"aggregation\": {\n      \"enabled\": \"<boolean>\",\n      \"speed\": \"<integer>\"\n    }\n  },\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"power\": {\n      \"mode\": \"<string>\",\n      \"ac\": {\n        \"isConnected\": \"<boolean>\"\n      },\n      \"poe\": {\n        \"isConnected\": \"<boolean>\"\n      }\n    },\n    \"ports\": [\n      {\n        \"name\": \"<string>\",\n        \"poe\": {\n          \"standard\": \"<string>\"\n        },\n        \"linkNegotiation\": {\n          \"duplex\": \"<string>\",\n          \"speed\": \"<integer>\"\n        }\n      },\n      {\n        \"name\": \"<string>\",\n        \"poe\": {\n          \"standard\": \"<string>\"\n        },\n        \"linkNegotiation\": {\n          \"duplex\": \"<string>\",\n          \"speed\": \"<integer>\"\n        }\n      }\n    ],\n    \"aggregation\": {\n      \"enabled\": \"<boolean>\",\n      \"speed\": \"<integer>\"\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "channelUtilization",
											"item": [
												{
													"name": "history",
													"item": [
														{
															"name": "byNetwork",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "Get a time-series of average channel utilization for all bands",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/history/byNetwork/byInterval?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"organizations",
																						":organization_id",
																						"wireless",
																						"devices",
																						"channelUtilization",
																						"history",
																						"byNetwork",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "networkIds",
																							"value": "<string>",
																							"description": "Filter results by network."
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>",
																							"description": "Filter results by network."
																						},
																						{
																							"key": "serials",
																							"value": "<string>",
																							"description": "Filter results by device."
																						},
																						{
																							"key": "serials",
																							"value": "<string>",
																							"description": "Filter results by device."
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																						},
																						{
																							"key": "interval",
																							"value": "<integer>",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																						}
																					],
																					"variable": [
																						{
																							"key": ":organization_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Get a time-series of average channel utilization for all bands"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/history/byNetwork/byInterval?networkIds=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"organizations",
																								":organization_id",
																								"wireless",
																								"devices",
																								"channelUtilization",
																								"history",
																								"byNetwork",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "networkIds",
																									"value": "<string>",
																									"description": "Filter results by network."
																								},
																								{
																									"key": "serials",
																									"value": "<string>",
																									"description": "Filter results by device."
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																								},
																								{
																									"key": "t0",
																									"value": "<string>",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																								},
																								{
																									"key": "t1",
																									"value": "<string>",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																								},
																								{
																									"key": "timespan",
																									"value": "<float>",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																								},
																								{
																									"key": "interval",
																									"value": "<integer>",
																									"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																								}
																							],
																							"variable": [
																								{
																									"key": ":organization_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "Link",
																							"value": "<string>",
																							"description": {
																								"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  }\n]"
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "byDevice",
															"item": [
																{
																	"name": "byInterval",
																	"item": [
																		{
																			"name": "Get a time-series of average channel utilization for all bands, segmented by device.",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/history/byDevice/byInterval?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"organizations",
																						":organization_id",
																						"wireless",
																						"devices",
																						"channelUtilization",
																						"history",
																						"byDevice",
																						"byInterval"
																					],
																					"query": [
																						{
																							"key": "networkIds",
																							"value": "<string>",
																							"description": "Filter results by network."
																						},
																						{
																							"key": "networkIds",
																							"value": "<string>",
																							"description": "Filter results by network."
																						},
																						{
																							"key": "serials",
																							"value": "<string>",
																							"description": "Filter results by device."
																						},
																						{
																							"key": "serials",
																							"value": "<string>",
																							"description": "Filter results by device."
																						},
																						{
																							"key": "perPage",
																							"value": "<integer>",
																							"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																						},
																						{
																							"key": "startingAfter",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "endingBefore",
																							"value": "<string>",
																							"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																						},
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																						},
																						{
																							"key": "interval",
																							"value": "<integer>",
																							"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																						}
																					],
																					"variable": [
																						{
																							"key": ":organization_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Get a time-series of average channel utilization for all bands, segmented by device."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/history/byDevice/byInterval?networkIds=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"organizations",
																								":organization_id",
																								"wireless",
																								"devices",
																								"channelUtilization",
																								"history",
																								"byDevice",
																								"byInterval"
																							],
																							"query": [
																								{
																									"key": "networkIds",
																									"value": "<string>",
																									"description": "Filter results by network."
																								},
																								{
																									"key": "serials",
																									"value": "<string>",
																									"description": "Filter results by device."
																								},
																								{
																									"key": "perPage",
																									"value": "<integer>",
																									"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																								},
																								{
																									"key": "startingAfter",
																									"value": "<string>",
																									"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																								},
																								{
																									"key": "endingBefore",
																									"value": "<string>",
																									"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																								},
																								{
																									"key": "t0",
																									"value": "<string>",
																									"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																								},
																								{
																									"key": "t1",
																									"value": "<string>",
																									"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																								},
																								{
																									"key": "timespan",
																									"value": "<float>",
																									"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
																								},
																								{
																									"key": "interval",
																									"value": "<integer>",
																									"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																								}
																							],
																							"variable": [
																								{
																									"key": ":organization_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						},
																						{
																							"key": "Link",
																							"value": "<string>",
																							"description": {
																								"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																								"type": "text/plain"
																							}
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  }\n]"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "Get average channel utilization across all bands for all networks in the organization",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/byNetwork?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"wireless",
																		"devices",
																		"channelUtilization",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Filter results by network."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Filter results by network."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Filter results by device."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Filter results by device."
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days."
																		},
																		{
																			"key": "interval",
																			"value": "<integer>",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get average channel utilization across all bands for all networks in the organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/byNetwork?networkIds=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"wireless",
																				"devices",
																				"channelUtilization",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>",
																					"description": "Filter results by network."
																				},
																				{
																					"key": "serials",
																					"value": "<string>",
																					"description": "Filter results by device."
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days."
																				},
																				{
																					"key": "interval",
																					"value": "<integer>",
																					"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  },\n  {\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "byDevice",
													"item": [
														{
															"name": "Get average channel utilization for all bands in a network, split by AP",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/byDevice?networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"wireless",
																		"devices",
																		"channelUtilization",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Filter results by network."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Filter results by network."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Filter results by device."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Filter results by device."
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days."
																		},
																		{
																			"key": "interval",
																			"value": "<integer>",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get average channel utilization for all bands in a network, split by AP"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/wireless/devices/channelUtilization/byDevice?networkIds=<string>&serials=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&interval=<integer>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"wireless",
																				"devices",
																				"channelUtilization",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "networkIds",
																					"value": "<string>",
																					"description": "Filter results by network."
																				},
																				{
																					"key": "serials",
																					"value": "<string>",
																					"description": "Filter results by device."
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 90 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days."
																				},
																				{
																					"key": "interval",
																					"value": "<integer>",
																					"description": "The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  },\n  {\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"byBand\": [\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      },\n      {\n        \"band\": \"<string>\",\n        \"wifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"nonWifi\": {\n          \"percentage\": \"<float>\"\n        },\n        \"total\": {\n          \"percentage\": \"<float>\"\n        }\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "webhooks",
							"item": [
								{
									"name": "logs",
									"item": [
										{
											"name": "Return the log of webhook POSTs sent",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/webhooks/logs?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&url=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"webhooks",
														"logs"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "url",
															"value": "<string>",
															"description": "The URL the webhook was sent to"
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the log of webhook POSTs sent"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/webhooks/logs?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&url=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"webhooks",
																"logs"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "url",
																	"value": "<string>",
																	"description": "The URL the webhook was sent to"
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"alertType\": \"<string>\",\n    \"loggedAt\": \"<dateTime>\",\n    \"networkId\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"responseCode\": \"<integer>\",\n    \"responseDuration\": \"<integer>\",\n    \"sentAt\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  },\n  {\n    \"alertType\": \"<string>\",\n    \"loggedAt\": \"<dateTime>\",\n    \"networkId\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"responseCode\": \"<integer>\",\n    \"responseDuration\": \"<integer>\",\n    \"sentAt\": \"<dateTime>\",\n    \"url\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "alertTypes",
									"item": [
										{
											"name": "Return a list of alert types to be used with managing webhook alerts",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/webhooks/alertTypes?productType=wireless",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"webhooks",
														"alertTypes"
													],
													"query": [
														{
															"key": "productType",
															"value": "wireless",
															"description": "Filter sample alerts to a specific product type"
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return a list of alert types to be used with managing webhook alerts"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/webhooks/alertTypes?productType=wireless",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"webhooks",
																"alertTypes"
															],
															"query": [
																{
																	"key": "productType",
																	"value": "wireless",
																	"description": "Filter sample alerts to a specific product type"
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "uplinks",
							"item": [
								{
									"name": "statuses",
									"item": [
										{
											"name": "List the uplink status of every Meraki MX, MG and Z series devices in the organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/uplinks/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"uplinks",
														"statuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
														},
														{
															"key": "iccids",
															"value": "<string>",
															"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
														},
														{
															"key": "iccids",
															"value": "<string>",
															"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the uplink status of every Meraki MX, MG and Z series devices in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/uplinks/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&iccids=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"uplinks",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																},
																{
																	"key": "iccids",
																	"value": "<string>",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"lastReportedAt\": \"<dateTime>\",\n    \"uplinks\": [\n      {\n        \"interface\": \"wan1\",\n        \"status\": \"ready\",\n        \"ip\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"primaryDns\": \"<string>\",\n        \"secondaryDns\": \"<string>\",\n        \"ipAssignedBy\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      },\n      {\n        \"interface\": \"cellular\",\n        \"status\": \"active\",\n        \"ip\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"primaryDns\": \"<string>\",\n        \"secondaryDns\": \"<string>\",\n        \"ipAssignedBy\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"lastReportedAt\": \"<dateTime>\",\n    \"uplinks\": [\n      {\n        \"interface\": \"wan2\",\n        \"status\": \"failed\",\n        \"ip\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"primaryDns\": \"<string>\",\n        \"secondaryDns\": \"<string>\",\n        \"ipAssignedBy\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      },\n      {\n        \"interface\": \"wan1\",\n        \"status\": \"active\",\n        \"ip\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"primaryDns\": \"<string>\",\n        \"secondaryDns\": \"<string>\",\n        \"ipAssignedBy\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "switch",
							"item": [
								{
									"name": "ports",
									"item": [
										{
											"name": "bySwitch",
											"item": [
												{
													"name": "List the switchports in an organization by switch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/switch/ports/bySwitch?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&portProfileIds=<string>&portProfileIds=<string>&name=<string>&mac=<string>&macs=<string>&macs=<string>&:serial=<string>&serials=<string>&serials=<string>&configurationUpdatedAfter=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"switch",
																"ports",
																"bySwitch"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 50."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports by network."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports by network."
																},
																{
																	"key": "portProfileIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to the specified port profiles."
																},
																{
																	"key": "portProfileIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to the specified port profiles."
																},
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match."
																},
																{
																	"key": "mac",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match."
																},
																{
																	"key": "macs",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match."
																},
																{
																	"key": "macs",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match."
																},
																{
																	"key": ":serial",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match."
																},
																{
																	"key": "configurationUpdatedAfter",
																	"value": "<string>",
																	"description": "Optional parameter to filter results by switches where the configuration has been updated after the given timestamp."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the switchports in an organization by switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/switch/ports/bySwitch?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&portProfileIds=<string>&name=<string>&mac=<string>&macs=<string>&:serial=<string>&serials=<string>&configurationUpdatedAfter=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"switch",
																		"ports",
																		"bySwitch"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 50."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports by network."
																		},
																		{
																			"key": "portProfileIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports belonging to the specified port profiles."
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match."
																		},
																		{
																			"key": "mac",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match."
																		},
																		{
																			"key": "macs",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match."
																		},
																		{
																			"key": ":serial",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match."
																		},
																		{
																			"key": "configurationUpdatedAfter",
																			"value": "<string>",
																			"description": "Optional parameter to filter results by switches where the configuration has been updated after the given timestamp."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"model\": \"<string>\",\n    \"ports\": [\n      {\n        \"portId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"enabled\": \"<boolean>\",\n        \"poeEnabled\": \"<boolean>\",\n        \"type\": \"access\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\",\n        \"rstpEnabled\": \"<boolean>\",\n        \"stpGuard\": \"loop guard\",\n        \"linkNegotiation\": \"<string>\",\n        \"accessPolicyType\": \"Open\",\n        \"stickyMacAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"stickyMacAllowListLimit\": \"<integer>\"\n      },\n      {\n        \"portId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"enabled\": \"<boolean>\",\n        \"poeEnabled\": \"<boolean>\",\n        \"type\": \"trunk\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\",\n        \"rstpEnabled\": \"<boolean>\",\n        \"stpGuard\": \"bpdu guard\",\n        \"linkNegotiation\": \"<string>\",\n        \"accessPolicyType\": \"MAC allow list\",\n        \"stickyMacAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"stickyMacAllowListLimit\": \"<integer>\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"model\": \"<string>\",\n    \"ports\": [\n      {\n        \"portId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"enabled\": \"<boolean>\",\n        \"poeEnabled\": \"<boolean>\",\n        \"type\": \"trunk\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\",\n        \"rstpEnabled\": \"<boolean>\",\n        \"stpGuard\": \"disabled\",\n        \"linkNegotiation\": \"<string>\",\n        \"accessPolicyType\": \"Open\",\n        \"stickyMacAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"stickyMacAllowListLimit\": \"<integer>\"\n      },\n      {\n        \"portId\": \"<string>\",\n        \"name\": \"<string>\",\n        \"tags\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"enabled\": \"<boolean>\",\n        \"poeEnabled\": \"<boolean>\",\n        \"type\": \"trunk\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\",\n        \"rstpEnabled\": \"<boolean>\",\n        \"stpGuard\": \"loop guard\",\n        \"linkNegotiation\": \"<string>\",\n        \"accessPolicyType\": \"MAC allow list\",\n        \"stickyMacAllowList\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"stickyMacAllowListLimit\": \"<integer>\"\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "clone",
											"item": [
												{
													"name": "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceSerial\": \"<string>\",\n  \"targetSerials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/switch/devices/clone",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"switch",
																"devices",
																"clone"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"sourceSerial\": \"<string>\",\n  \"targetSerials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/switch/devices/clone",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"switch",
																		"devices",
																		"clone"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "summary",
							"item": [
								{
									"name": "top",
									"item": [
										{
											"name": "switches",
											"item": [
												{
													"name": "byEnergyUsage",
													"item": [
														{
															"name": "Return metrics for organization's top 10 switches by energy usage over given time range",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/switches/byEnergyUsage?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"summary",
																		"top",
																		"switches",
																		"byEnergyUsage"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 switches by energy usage over given time range. Default unit is joules."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/switches/byEnergyUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"switches",
																				"byEnergyUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"model\": \"<string>\",\n    \"usage\": {\n      \"total\": \"<float>\"\n    }\n  },\n  {\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"model\": \"<string>\",\n    \"usage\": {\n      \"total\": \"<float>\"\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "ssids",
											"item": [
												{
													"name": "byUsage",
													"item": [
														{
															"name": "Return metrics for organization's top 10 ssids by data usage over given time range",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/ssids/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"summary",
																		"top",
																		"ssids",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 ssids by data usage over given time range. Default unit is megabytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/ssids/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"ssids",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"<string>\",\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"downstream\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"percentage\": \"<float>\"\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    }\n  },\n  {\n    \"name\": \"<string>\",\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"downstream\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"percentage\": \"<float>\"\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "devices",
											"item": [
												{
													"name": "models",
													"item": [
														{
															"name": "byUsage",
															"item": [
																{
																	"name": "Return metrics for organization's top 10 device models sorted by data usage over given time range",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/devices/models/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"devices",
																				"models",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return metrics for organization's top 10 device models sorted by data usage over given time range. Default unit is megabytes."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/devices/models/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"organizations",
																						":organization_id",
																						"summary",
																						"top",
																						"devices",
																						"models",
																						"byUsage"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																						}
																					],
																					"variable": [
																						{
																							"key": ":organization_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"model\": \"<string>\",\n    \"count\": \"<integer>\",\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"average\": \"<float>\"\n    }\n  },\n  {\n    \"model\": \"<string>\",\n    \"count\": \"<integer>\",\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"average\": \"<float>\"\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "byUsage",
													"item": [
														{
															"name": "Return metrics for organization's top 10 devices sorted by data usage over given time range",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/devices/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"summary",
																		"top",
																		"devices",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 devices sorted by data usage over given time range. Default unit is megabytes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/devices/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"devices",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"<string>\",\n    \"model\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"percentage\": \"<float>\"\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    }\n  },\n  {\n    \"name\": \"<string>\",\n    \"model\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"percentage\": \"<float>\"\n    },\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "clients",
											"item": [
												{
													"name": "manufacturers",
													"item": [
														{
															"name": "byUsage",
															"item": [
																{
																	"name": "Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer.",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/clients/manufacturers/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"clients",
																				"manufacturers",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/clients/manufacturers/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"organizations",
																						":organization_id",
																						"summary",
																						"top",
																						"clients",
																						"manufacturers",
																						"byUsage"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																						}
																					],
																					"variable": [
																						{
																							"key": ":organization_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"name\": \"<string>\",\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"downstream\": \"<float>\"\n    }\n  },\n  {\n    \"name\": \"<string>\",\n    \"clients\": {\n      \"counts\": {\n        \"total\": \"<integer>\"\n      }\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"downstream\": \"<float>\"\n    }\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "byUsage",
													"item": [
														{
															"name": "Return metrics for organization's top 10 clients by data usage (in mb) over given time range.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/clients/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"summary",
																		"top",
																		"clients",
																		"byUsage"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return metrics for organization's top 10 clients by data usage (in mb) over given time range."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/clients/byUsage?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"clients",
																				"byUsage"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"id\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"downstream\": \"<float>\",\n      \"percentage\": \"<float>\"\n    }\n  },\n  {\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"id\": \"<string>\",\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"usage\": {\n      \"total\": \"<float>\",\n      \"upstream\": \"<float>\",\n      \"downstream\": \"<float>\",\n      \"percentage\": \"<float>\"\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "appliances",
											"item": [
												{
													"name": "byUtilization",
													"item": [
														{
															"name": "Return the top 10 appliances sorted by utilization over given time range.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/appliances/byUtilization?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"summary",
																		"top",
																		"appliances",
																		"byUtilization"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the top 10 appliances sorted by utilization over given time range."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/summary/top/appliances/byUtilization?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"summary",
																				"top",
																				"appliances",
																				"byUtilization"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"utilization\": {\n      \"average\": {\n        \"percentage\": \"<float>\"\n      }\n    }\n  },\n  {\n    \"network\": {\n      \"name\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"utilization\": {\n      \"average\": {\n        \"percentage\": \"<float>\"\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "snmp",
							"item": [
								{
									"name": "Return the SNMP settings for an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/snmp",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"snmp"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the SNMP settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/snmp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"snmp"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update the SNMP settings for an organization",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"v2cEnabled\": \"<boolean>\",\n  \"v3Enabled\": \"<boolean>\",\n  \"v3AuthMode\": \"MD5\",\n  \"v3AuthPass\": \"<string>\",\n  \"v3PrivMode\": \"AES128\",\n  \"v3PrivPass\": \"<string>\",\n  \"peerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/snmp",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"snmp"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the SNMP settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"v2cEnabled\": \"<boolean>\",\n  \"v3Enabled\": \"<boolean>\",\n  \"v3AuthMode\": \"MD5\",\n  \"v3AuthPass\": \"<string>\",\n  \"v3PrivMode\": \"AES128\",\n  \"v3PrivPass\": \"<string>\",\n  \"peerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/snmp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"snmp"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "sm",
							"item": [
								{
									"name": "vppAccounts",
									"item": [
										{
											"name": "{vppAccountId}",
											"item": [
												{
													"name": "Get a hash containing the unparsed token of the VPP account with the given ID",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/sm/vppAccounts/:vpp_account_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"sm",
																"vppAccounts",
																":vpp_account_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":vpp_account_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get a hash containing the unparsed token of the VPP account with the given ID"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/sm/vppAccounts/:vpp_account_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"sm",
																		"vppAccounts",
																		":vpp_account_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":vpp_account_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<string>\",\n  \"vppServiceToken\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the VPP accounts in the organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/sm/vppAccounts",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"sm",
														"vppAccounts"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the VPP accounts in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/sm/vppAccounts",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"sm",
																"vppAccounts"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"vppServiceToken\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"vppServiceToken\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "apnsCert",
									"item": [
										{
											"name": "Get the organization's APNS certificate",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/sm/apnsCert",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"sm",
														"apnsCert"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Get the organization's APNS certificate"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/sm/apnsCert",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"sm",
																"apnsCert"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"certificate\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "sensor",
							"item": [
								{
									"name": "readings",
									"item": [
										{
											"name": "latest",
											"item": [
												{
													"name": "Return the latest available reading for each metric from each sensor, sorted by sensor serial",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/sensor/readings/latest?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&metrics=<string>&metrics=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"sensor",
																"readings",
																"latest"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by network."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by network."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by sensor."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by sensor."
																},
																{
																	"key": "metrics",
																	"value": "<string>",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																},
																{
																	"key": "metrics",
																	"value": "<string>",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the latest available reading for each metric from each sensor, sorted by sensor serial"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/sensor/readings/latest?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&metrics=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"sensor",
																		"readings",
																		"latest"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter readings by network."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter readings by sensor."
																		},
																		{
																			"key": "metrics",
																			"value": "<string>",
																			"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"readings\": [\n      {\n        \"ts\": \"<string>\",\n        \"metric\": \"door\",\n        \"battery\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"button\": {\n          \"pressType\": \"long\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\"\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\"\n          }\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"temperature\": {\n          \"fahrenheit\": \"<float>\",\n          \"celsius\": \"<float>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        }\n      },\n      {\n        \"ts\": \"<string>\",\n        \"metric\": \"pm25\",\n        \"battery\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"button\": {\n          \"pressType\": \"short\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\"\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\"\n          }\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"temperature\": {\n          \"fahrenheit\": \"<float>\",\n          \"celsius\": \"<float>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        }\n      }\n    ]\n  },\n  {\n    \"serial\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"readings\": [\n      {\n        \"ts\": \"<string>\",\n        \"metric\": \"pm25\",\n        \"battery\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"button\": {\n          \"pressType\": \"long\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\"\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\"\n          }\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"temperature\": {\n          \"fahrenheit\": \"<float>\",\n          \"celsius\": \"<float>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        }\n      },\n      {\n        \"ts\": \"<string>\",\n        \"metric\": \"pm25\",\n        \"battery\": {\n          \"percentage\": \"<integer>\"\n        },\n        \"button\": {\n          \"pressType\": \"long\"\n        },\n        \"door\": {\n          \"open\": \"<boolean>\"\n        },\n        \"humidity\": {\n          \"relativePercentage\": \"<integer>\"\n        },\n        \"indoorAirQuality\": {\n          \"score\": \"<integer>\"\n        },\n        \"noise\": {\n          \"ambient\": {\n            \"level\": \"<integer>\"\n          }\n        },\n        \"pm25\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"temperature\": {\n          \"fahrenheit\": \"<float>\",\n          \"celsius\": \"<float>\"\n        },\n        \"tvoc\": {\n          \"concentration\": \"<integer>\"\n        },\n        \"water\": {\n          \"present\": \"<boolean>\"\n        }\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "history",
											"item": [
												{
													"name": "Return all reported readings from sensors in a given timespan, sorted by timestamp",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/sensor/readings/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&metrics=<string>&metrics=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"sensor",
																"readings",
																"history"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by network."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by network."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by sensor."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter readings by sensor."
																},
																{
																	"key": "metrics",
																	"value": "<string>",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																},
																{
																	"key": "metrics",
																	"value": "<string>",
																	"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return all reported readings from sensors in a given timespan, sorted by timestamp"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/sensor/readings/history?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&t0=<string>&t1=<string>&timespan=<float>&networkIds=<string>&serials=<string>&metrics=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"sensor",
																		"readings",
																		"history"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter readings by network."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter readings by sensor."
																		},
																		{
																			"key": "metrics",
																			"value": "<string>",
																			"description": "Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"ts\": \"<string>\",\n    \"metric\": \"noise\",\n    \"battery\": {\n      \"percentage\": \"<integer>\"\n    },\n    \"button\": {\n      \"pressType\": \"short\"\n    },\n    \"door\": {\n      \"open\": \"<boolean>\"\n    },\n    \"humidity\": {\n      \"relativePercentage\": \"<integer>\"\n    },\n    \"indoorAirQuality\": {\n      \"score\": \"<integer>\"\n    },\n    \"noise\": {\n      \"ambient\": {\n        \"level\": \"<integer>\"\n      }\n    },\n    \"pm25\": {\n      \"concentration\": \"<integer>\"\n    },\n    \"temperature\": {\n      \"fahrenheit\": \"<float>\",\n      \"celsius\": \"<float>\"\n    },\n    \"tvoc\": {\n      \"concentration\": \"<integer>\"\n    },\n    \"water\": {\n      \"present\": \"<boolean>\"\n    }\n  },\n  {\n    \"serial\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"ts\": \"<string>\",\n    \"metric\": \"battery\",\n    \"battery\": {\n      \"percentage\": \"<integer>\"\n    },\n    \"button\": {\n      \"pressType\": \"long\"\n    },\n    \"door\": {\n      \"open\": \"<boolean>\"\n    },\n    \"humidity\": {\n      \"relativePercentage\": \"<integer>\"\n    },\n    \"indoorAirQuality\": {\n      \"score\": \"<integer>\"\n    },\n    \"noise\": {\n      \"ambient\": {\n        \"level\": \"<integer>\"\n      }\n    },\n    \"pm25\": {\n      \"concentration\": \"<integer>\"\n    },\n    \"temperature\": {\n      \"fahrenheit\": \"<float>\",\n      \"celsius\": \"<float>\"\n    },\n    \"tvoc\": {\n      \"concentration\": \"<integer>\"\n    },\n    \"water\": {\n      \"present\": \"<boolean>\"\n    }\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "samlRoles",
							"item": [
								{
									"name": "{samlRoleId}",
									"item": [
										{
											"name": "Return a SAML role",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"samlRoles",
														":saml_role_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":saml_role_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return a SAML role"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"samlRoles",
																":saml_role_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":saml_role_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update a SAML role",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"full\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"monitor-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"full\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"ssid-admin\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"samlRoles",
														":saml_role_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":saml_role_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a SAML role"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"full\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"monitor-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"full\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"ssid-admin\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"samlRoles",
																":saml_role_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":saml_role_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"role\": \"<string>\",\n  \"orgAccess\": \"<string>\",\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove a SAML role",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"samlRoles",
														":saml_role_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":saml_role_id",
															"value": "<string>"
														}
													]
												},
												"description": "Remove a SAML role"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles/:saml_role_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"samlRoles",
																":saml_role_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":saml_role_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the SAML roles for this organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"samlRoles"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the SAML roles for this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"samlRoles"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"role\": \"<string>\",\n    \"orgAccess\": \"<string>\",\n    \"networks\": [\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<string>\",\n    \"role\": \"<string>\",\n    \"orgAccess\": \"<string>\",\n    \"networks\": [\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ]\n  }\n]"
										}
									]
								},
								{
									"name": "Create a SAML role",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"none\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"guest-ambassador\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"monitor-only\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"monitor-only\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"samlRoles"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a SAML role"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"<string>\",\n  \"orgAccess\": \"none\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"guest-ambassador\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"monitor-only\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"monitor-only\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/samlRoles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"samlRoles"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "saml",
							"item": [
								{
									"name": "idps",
									"item": [
										{
											"name": "{idpId}",
											"item": [
												{
													"name": "Update a SAML IdP in your organization",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"saml",
																"idps",
																":idp_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":idp_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a SAML IdP in your organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"saml",
																		"idps",
																		":idp_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":idp_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  },\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  }\n]"
														}
													]
												},
												{
													"name": "Get a SAML IdP from your organization.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"saml",
																"idps",
																":idp_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":idp_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get a SAML IdP from your organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"saml",
																		"idps",
																		":idp_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":idp_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"idpId\": \"<string>\",\n  \"consumerUrl\": \"<string>\",\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove a SAML IdP in your organization.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"saml",
																"idps",
																":idp_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":idp_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Remove a SAML IdP in your organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps/:idp_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"saml",
																		"idps",
																		":idp_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":idp_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the SAML IdPs in your organization.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"saml",
														"idps"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the SAML IdPs in your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"saml",
																"idps"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  },\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  }\n]"
												}
											]
										},
										{
											"name": "Create a SAML IdP for your organization.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"saml",
														"idps"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create a SAML IdP for your organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"x509certSha1Fingerprint\": \"<string>\",\n  \"sloLogoutUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/saml/idps",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"saml",
																"idps"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  },\n  {\n    \"idpId\": \"<string>\",\n    \"consumerUrl\": \"<string>\",\n    \"x509certSha1Fingerprint\": \"<string>\",\n    \"sloLogoutUrl\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Returns the SAML SSO enabled settings for an organization.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/saml",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"saml"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Returns the SAML SSO enabled settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/saml",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"saml"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": \"<boolean>\"\n}"
										}
									]
								},
								{
									"name": "Updates the SAML SSO enabled settings for an organization.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/saml",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"saml"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Updates the SAML SSO enabled settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/saml",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"saml"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "policyObjects",
							"item": [
								{
									"name": "{policyObjectId}",
									"item": [
										{
											"name": "Shows details of a Policy Object.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects",
														":policy_object_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":policy_object_id",
															"value": "<string>"
														}
													]
												},
												"description": "Shows details of a Policy Object."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																":policy_object_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":policy_object_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Updates a Policy Object.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects",
														":policy_object_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":policy_object_id",
															"value": "<string>"
														}
													]
												},
												"description": "Updates a Policy Object."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																":policy_object_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":policy_object_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Deletes a Policy Object.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects",
														":policy_object_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":policy_object_id",
															"value": "<string>"
														}
													]
												},
												"description": "Deletes a Policy Object."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/:policy_object_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																":policy_object_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":policy_object_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "groups",
									"item": [
										{
											"name": "{policyObjectGroupId}",
											"item": [
												{
													"name": "Shows details of a Policy Object Group.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																"groups",
																":policy_object_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":policy_object_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Shows details of a Policy Object Group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"policyObjects",
																		"groups",
																		":policy_object_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":policy_object_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Updates a Policy Object Group.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																"groups",
																":policy_object_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":policy_object_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates a Policy Object Group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"policyObjects",
																		"groups",
																		":policy_object_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":policy_object_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Deletes a Policy Object Group.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																"groups",
																":policy_object_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":policy_object_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Deletes a Policy Object Group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups/:policy_object_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"policyObjects",
																		"groups",
																		":policy_object_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":policy_object_group_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Lists Policy Object Groups belonging to the organization.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects",
														"groups"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Lists Policy Object Groups belonging to the organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																"groups"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Creates a new Policy Object Group.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects",
														"groups"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates a new Policy Object Group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"objectIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects/groups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"policyObjects",
																"groups"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "Lists Policy Objects belonging to the organization.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"policyObjects"
											],
											"query": [
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Lists Policy Objects belonging to the organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects?perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								},
								{
									"name": "Creates a new Policy Object.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"policyObjects"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Creates a new Policy Object."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"category\": \"<string>\",\n  \"type\": \"<string>\",\n  \"cidr\": \"<string>\",\n  \"fqdn\": \"<string>\",\n  \"mask\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"groupIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/policyObjects",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"policyObjects"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "openapiSpec",
							"item": [
								{
									"name": "Return the OpenAPI Specification of the organization's API documentation in JSON",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/openapiSpec?version=3",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"openapiSpec"
											],
											"query": [
												{
													"key": "version",
													"value": "3",
													"description": "OpenAPI Specification version to return. Default is 2"
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the OpenAPI Specification of the organization's API documentation in JSON"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/openapiSpec?version=3",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"openapiSpec"
													],
													"query": [
														{
															"key": "version",
															"value": "3",
															"description": "OpenAPI Specification version to return. Default is 2"
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "networks",
							"item": [
								{
									"name": "combine",
									"item": [
										{
											"name": "Combine multiple networks into a single network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"networkIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/networks/combine",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"networks",
														"combine"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Combine multiple networks into a single network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"networkIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/networks/combine",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"networks",
																"combine"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"resultingNetwork\": {\n    \"id\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enrollmentString\": \"<string>\",\n    \"url\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"isBoundToConfigTemplate\": \"<boolean>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the networks that the user has privileges on in an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/networks?:config_template_id=<string>&isBoundToConfigTemplate=<boolean>&tags=<string>&tags=<string>&tagsFilterType=withAllTags&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"networks"
											],
											"query": [
												{
													"key": ":config_template_id",
													"value": "<string>",
													"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
												},
												{
													"key": "isBoundToConfigTemplate",
													"value": "<boolean>",
													"description": "An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
												},
												{
													"key": "tagsFilterType",
													"value": "withAllTags",
													"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
												},
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the networks that the user has privileges on in an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/networks?:config_template_id=<string>&isBoundToConfigTemplate=<boolean>&tags=<string>&tagsFilterType=withAllTags&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"networks"
													],
													"query": [
														{
															"key": ":config_template_id",
															"value": "<string>",
															"description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
														},
														{
															"key": "isBoundToConfigTemplate",
															"value": "<boolean>",
															"description": "An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
														},
														{
															"key": "tagsFilterType",
															"value": "withAllTags",
															"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enrollmentString\": \"<string>\",\n    \"url\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"isBoundToConfigTemplate\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enrollmentString\": \"<string>\",\n    \"url\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"isBoundToConfigTemplate\": \"<boolean>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Create a network",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"cellularGateway\",\n    \"cloudGateway\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/networks",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"networks"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a network"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"cellularGateway\",\n    \"cloudGateway\"\n  ],\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\",\n  \"notes\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/networks",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"networks"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enrollmentString\": \"<string>\",\n  \"url\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"isBoundToConfigTemplate\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "loginSecurity",
							"item": [
								{
									"name": "Returns the login security settings for an organization.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/loginSecurity",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"loginSecurity"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Returns the login security settings for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/loginSecurity",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"loginSecurity"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enforcePasswordExpiration\": \"<boolean>\",\n  \"passwordExpirationDays\": \"<integer>\",\n  \"enforceDifferentPasswords\": \"<boolean>\",\n  \"numDifferentPasswords\": \"<integer>\",\n  \"enforceStrongPasswords\": \"<boolean>\",\n  \"enforceAccountLockout\": \"<boolean>\",\n  \"accountLockoutAttempts\": \"<integer>\",\n  \"enforceIdleTimeout\": \"<boolean>\",\n  \"idleTimeoutMinutes\": \"<integer>\",\n  \"enforceTwoFactorAuth\": \"<boolean>\",\n  \"enforceLoginIpRanges\": \"<boolean>\",\n  \"loginIpRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": \"<boolean>\",\n      \"ranges\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Update the login security settings for an organization",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enforcePasswordExpiration\": \"<boolean>\",\n  \"passwordExpirationDays\": \"<integer>\",\n  \"enforceDifferentPasswords\": \"<boolean>\",\n  \"numDifferentPasswords\": \"<integer>\",\n  \"enforceStrongPasswords\": \"<boolean>\",\n  \"enforceAccountLockout\": \"<boolean>\",\n  \"accountLockoutAttempts\": \"<integer>\",\n  \"enforceIdleTimeout\": \"<boolean>\",\n  \"idleTimeoutMinutes\": \"<integer>\",\n  \"enforceTwoFactorAuth\": \"<boolean>\",\n  \"enforceLoginIpRanges\": \"<boolean>\",\n  \"loginIpRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": \"<boolean>\",\n      \"ranges\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/loginSecurity",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"loginSecurity"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Update the login security settings for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enforcePasswordExpiration\": \"<boolean>\",\n  \"passwordExpirationDays\": \"<integer>\",\n  \"enforceDifferentPasswords\": \"<boolean>\",\n  \"numDifferentPasswords\": \"<integer>\",\n  \"enforceStrongPasswords\": \"<boolean>\",\n  \"enforceAccountLockout\": \"<boolean>\",\n  \"accountLockoutAttempts\": \"<integer>\",\n  \"enforceIdleTimeout\": \"<boolean>\",\n  \"idleTimeoutMinutes\": \"<integer>\",\n  \"enforceTwoFactorAuth\": \"<boolean>\",\n  \"enforceLoginIpRanges\": \"<boolean>\",\n  \"loginIpRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": \"<boolean>\",\n      \"ranges\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/loginSecurity",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"loginSecurity"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enforcePasswordExpiration\": \"<boolean>\",\n  \"passwordExpirationDays\": \"<integer>\",\n  \"enforceDifferentPasswords\": \"<boolean>\",\n  \"numDifferentPasswords\": \"<integer>\",\n  \"enforceStrongPasswords\": \"<boolean>\",\n  \"enforceAccountLockout\": \"<boolean>\",\n  \"accountLockoutAttempts\": \"<integer>\",\n  \"enforceIdleTimeout\": \"<boolean>\",\n  \"idleTimeoutMinutes\": \"<integer>\",\n  \"enforceTwoFactorAuth\": \"<boolean>\",\n  \"enforceLoginIpRanges\": \"<boolean>\",\n  \"loginIpRanges\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"apiAuthentication\": {\n    \"ipRestrictionsForKeys\": {\n      \"enabled\": \"<boolean>\",\n      \"ranges\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "licensing",
							"item": [
								{
									"name": "coterm",
									"item": [
										{
											"name": "licenses",
											"item": [
												{
													"name": "move",
													"item": [
														{
															"name": "Moves a license to a different organization (coterm only)",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"destination\": {\n    \"organizationId\": \"<string>\",\n    \"mode\": \"addDevices\"\n  },\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/licensing/coterm/licenses/move",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"licensing",
																		"coterm",
																		"licenses",
																		"move"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Moves a license to a different organization (coterm only)"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"destination\": {\n    \"organizationId\": \"<string>\",\n    \"mode\": \"addDevices\"\n  },\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/licensing/coterm/licenses/move",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"licensing",
																				"coterm",
																				"licenses",
																				"move"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"remainderLicenses\": [\n    {\n      \"key\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"mode\": \"addDevices\",\n      \"startedAt\": \"<dateTime>\",\n      \"claimedAt\": \"<dateTime>\",\n      \"invalidated\": \"<boolean>\",\n      \"invalidatedAt\": \"<dateTime>\",\n      \"expired\": \"<boolean>\",\n      \"editions\": [\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        },\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"mode\": \"addDevices\",\n      \"startedAt\": \"<dateTime>\",\n      \"claimedAt\": \"<dateTime>\",\n      \"invalidated\": \"<boolean>\",\n      \"invalidatedAt\": \"<dateTime>\",\n      \"expired\": \"<boolean>\",\n      \"editions\": [\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        },\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ],\n  \"movedLicenses\": [\n    {\n      \"key\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"mode\": \"renew\",\n      \"startedAt\": \"<dateTime>\",\n      \"claimedAt\": \"<dateTime>\",\n      \"invalidated\": \"<boolean>\",\n      \"invalidatedAt\": \"<dateTime>\",\n      \"expired\": \"<boolean>\",\n      \"editions\": [\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        },\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"key\": \"<string>\",\n      \"organizationId\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"mode\": \"addDevices\",\n      \"startedAt\": \"<dateTime>\",\n      \"claimedAt\": \"<dateTime>\",\n      \"invalidated\": \"<boolean>\",\n      \"invalidatedAt\": \"<dateTime>\",\n      \"expired\": \"<boolean>\",\n      \"editions\": [\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        },\n        {\n          \"edition\": \"<string>\",\n          \"productType\": \"<string>\"\n        }\n      ],\n      \"counts\": [\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        },\n        {\n          \"model\": \"<string>\",\n          \"count\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "List the licenses in a coterm organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licensing/coterm/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&invalidated=<boolean>&expired=<boolean>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licensing",
																"coterm",
																"licenses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "invalidated",
																	"value": "<boolean>",
																	"description": "Filter for licenses that are invalidated"
																},
																{
																	"key": "expired",
																	"value": "<boolean>",
																	"description": "Filter for licenses that are expired"
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the licenses in a coterm organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/licensing/coterm/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&invalidated=<boolean>&expired=<boolean>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"licensing",
																		"coterm",
																		"licenses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "invalidated",
																			"value": "<boolean>",
																			"description": "Filter for licenses that are invalidated"
																		},
																		{
																			"key": "expired",
																			"value": "<boolean>",
																			"description": "Filter for licenses that are expired"
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"key\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"mode\": \"addDevices\",\n    \"startedAt\": \"<dateTime>\",\n    \"claimedAt\": \"<dateTime>\",\n    \"invalidated\": \"<boolean>\",\n    \"invalidatedAt\": \"<dateTime>\",\n    \"expired\": \"<boolean>\",\n    \"editions\": [\n      {\n        \"edition\": \"<string>\",\n        \"productType\": \"<string>\"\n      },\n      {\n        \"edition\": \"<string>\",\n        \"productType\": \"<string>\"\n      }\n    ],\n    \"counts\": [\n      {\n        \"model\": \"<string>\",\n        \"count\": \"<integer>\"\n      },\n      {\n        \"model\": \"<string>\",\n        \"count\": \"<integer>\"\n      }\n    ]\n  },\n  {\n    \"key\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"mode\": \"renew\",\n    \"startedAt\": \"<dateTime>\",\n    \"claimedAt\": \"<dateTime>\",\n    \"invalidated\": \"<boolean>\",\n    \"invalidatedAt\": \"<dateTime>\",\n    \"expired\": \"<boolean>\",\n    \"editions\": [\n      {\n        \"edition\": \"<string>\",\n        \"productType\": \"<string>\"\n      },\n      {\n        \"edition\": \"<string>\",\n        \"productType\": \"<string>\"\n      }\n    ],\n    \"counts\": [\n      {\n        \"model\": \"<string>\",\n        \"count\": \"<integer>\"\n      },\n      {\n        \"model\": \"<string>\",\n        \"count\": \"<integer>\"\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "licenses",
							"item": [
								{
									"name": "{licenseId}",
									"item": [
										{
											"name": "Display a license",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/:license_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														":license_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":license_id",
															"value": "<string>"
														}
													]
												},
												"description": "Display a license"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/:license_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																":license_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":license_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"licenseType\": \"<string>\",\n  \"licenseKey\": \"<string>\",\n  \"orderNumber\": \"<string>\",\n  \"deviceSerial\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"state\": \"expiring\",\n  \"seatCount\": \"<integer>\",\n  \"totalDurationInDays\": \"<integer>\",\n  \"durationInDays\": \"<integer>\",\n  \"permanentlyQueuedLicenses\": [\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"durationInDays\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"durationInDays\": \"<integer>\"\n    }\n  ],\n  \"claimDate\": \"<string>\",\n  \"activationDate\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"headLicenseId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update a license",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceSerial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/:license_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														":license_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":license_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a license"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceSerial\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/:license_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																":license_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":license_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"licenseType\": \"<string>\",\n  \"licenseKey\": \"<string>\",\n  \"orderNumber\": \"<string>\",\n  \"deviceSerial\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"state\": \"expiring\",\n  \"seatCount\": \"<integer>\",\n  \"totalDurationInDays\": \"<integer>\",\n  \"durationInDays\": \"<integer>\",\n  \"permanentlyQueuedLicenses\": [\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"durationInDays\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"durationInDays\": \"<integer>\"\n    }\n  ],\n  \"claimDate\": \"<string>\",\n  \"activationDate\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"headLicenseId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "renewSeats",
									"item": [
										{
											"name": "Renew SM seats of a license",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"licenseIdToRenew\": \"<string>\",\n  \"unusedLicenseId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/renewSeats",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														"renewSeats"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"licenseIdToRenew\": \"<string>\",\n  \"unusedLicenseId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/renewSeats",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																"renewSeats"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"resultingLicenses\": [\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"deviceSerial\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"state\": \"recentlyQueued\",\n      \"seatCount\": \"<integer>\",\n      \"totalDurationInDays\": \"<integer>\",\n      \"durationInDays\": \"<integer>\",\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        }\n      ],\n      \"claimDate\": \"<string>\",\n      \"activationDate\": \"<string>\",\n      \"expirationDate\": \"<string>\",\n      \"headLicenseId\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"deviceSerial\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"state\": \"active\",\n      \"seatCount\": \"<integer>\",\n      \"totalDurationInDays\": \"<integer>\",\n      \"durationInDays\": \"<integer>\",\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        }\n      ],\n      \"claimDate\": \"<string>\",\n      \"activationDate\": \"<string>\",\n      \"expirationDate\": \"<string>\",\n      \"headLicenseId\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "Return an overview of the license state for an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/overview",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														"overview"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return an overview of the license state for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/overview",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																"overview"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "moveSeats",
									"item": [
										{
											"name": "Move SM seats to another organization",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/moveSeats",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														"moveSeats"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Move SM seats to another organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/moveSeats",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																"moveSeats"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "move",
									"item": [
										{
											"name": "Move licenses to another organization",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/move",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														"move"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Move licenses to another organization. This will also move any devices that the licenses are assigned to"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/move",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																"move"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"destOrganizationId\": \"<string>\",\n  \"licenseIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "assignSeats",
									"item": [
										{
											"name": "Assign SM seats to a network",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"licenseId\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses/assignSeats",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses",
														"assignSeats"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Assign SM seats to a network. This will increase the managed SM device limit of the network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"licenseId\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"seatCount\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/licenses/assignSeats",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"licenses",
																"assignSeats"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"resultingLicenses\": [\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"deviceSerial\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"state\": \"recentlyQueued\",\n      \"seatCount\": \"<integer>\",\n      \"totalDurationInDays\": \"<integer>\",\n      \"durationInDays\": \"<integer>\",\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        }\n      ],\n      \"claimDate\": \"<string>\",\n      \"activationDate\": \"<string>\",\n      \"expirationDate\": \"<string>\",\n      \"headLicenseId\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"licenseType\": \"<string>\",\n      \"licenseKey\": \"<string>\",\n      \"orderNumber\": \"<string>\",\n      \"deviceSerial\": \"<string>\",\n      \"networkId\": \"<string>\",\n      \"state\": \"active\",\n      \"seatCount\": \"<integer>\",\n      \"totalDurationInDays\": \"<integer>\",\n      \"durationInDays\": \"<integer>\",\n      \"permanentlyQueuedLicenses\": [\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"licenseType\": \"<string>\",\n          \"licenseKey\": \"<string>\",\n          \"orderNumber\": \"<string>\",\n          \"durationInDays\": \"<integer>\"\n        }\n      ],\n      \"claimDate\": \"<string>\",\n      \"activationDate\": \"<string>\",\n      \"expirationDate\": \"<string>\",\n      \"headLicenseId\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the licenses for an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&deviceSerial=<string>&:network_id=<string>&state=unusedActive",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"licenses"
											],
											"query": [
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "deviceSerial",
													"value": "<string>",
													"description": "Filter the licenses to those assigned to a particular device. Returned in the same order that they are queued to the device."
												},
												{
													"key": ":network_id",
													"value": "<string>",
													"description": "Filter the licenses to those assigned in a particular network"
												},
												{
													"key": "state",
													"value": "unusedActive",
													"description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'"
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the licenses for an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/licenses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&deviceSerial=<string>&:network_id=<string>&state=unusedActive",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"licenses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "deviceSerial",
															"value": "<string>",
															"description": "Filter the licenses to those assigned to a particular device. Returned in the same order that they are queued to the device."
														},
														{
															"key": ":network_id",
															"value": "<string>",
															"description": "Filter the licenses to those assigned in a particular network"
														},
														{
															"key": "state",
															"value": "unusedActive",
															"description": "Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'"
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"licenseType\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"orderNumber\": \"<string>\",\n    \"deviceSerial\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"state\": \"unusedActive\",\n    \"seatCount\": \"<integer>\",\n    \"totalDurationInDays\": \"<integer>\",\n    \"durationInDays\": \"<integer>\",\n    \"permanentlyQueuedLicenses\": [\n      {\n        \"id\": \"<string>\",\n        \"licenseType\": \"<string>\",\n        \"licenseKey\": \"<string>\",\n        \"orderNumber\": \"<string>\",\n        \"durationInDays\": \"<integer>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"licenseType\": \"<string>\",\n        \"licenseKey\": \"<string>\",\n        \"orderNumber\": \"<string>\",\n        \"durationInDays\": \"<integer>\"\n      }\n    ],\n    \"claimDate\": \"<string>\",\n    \"activationDate\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"headLicenseId\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"licenseType\": \"<string>\",\n    \"licenseKey\": \"<string>\",\n    \"orderNumber\": \"<string>\",\n    \"deviceSerial\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"state\": \"expired\",\n    \"seatCount\": \"<integer>\",\n    \"totalDurationInDays\": \"<integer>\",\n    \"durationInDays\": \"<integer>\",\n    \"permanentlyQueuedLicenses\": [\n      {\n        \"id\": \"<string>\",\n        \"licenseType\": \"<string>\",\n        \"licenseKey\": \"<string>\",\n        \"orderNumber\": \"<string>\",\n        \"durationInDays\": \"<integer>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"licenseType\": \"<string>\",\n        \"licenseKey\": \"<string>\",\n        \"orderNumber\": \"<string>\",\n        \"durationInDays\": \"<integer>\"\n      }\n    ],\n    \"claimDate\": \"<string>\",\n    \"activationDate\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"headLicenseId\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "inventory",
							"item": [
								{
									"name": "release",
									"item": [
										{
											"name": "Release a list of claimed devices from an organization.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/inventory/release",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"inventory",
														"release"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Release a list of claimed devices from an organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/inventory/release",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"inventory",
																"release"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "onboarding",
									"item": [
										{
											"name": "cloudMonitoring",
											"item": [
												{
													"name": "prepare",
													"item": [
														{
															"name": "Initiates or updates an import session",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": \"<string>\"\n          },\n          \"vtyOut\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    },\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": \"<string>\"\n          },\n          \"vtyOut\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/prepare",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"prepare"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Initiates or updates an import session. An import ID will be generated and used when you are ready to commit the import."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"devices\": [\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": \"<string>\"\n          },\n          \"vtyOut\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    },\n    {\n      \"sudi\": \"<string>\",\n      \"tunnel\": {\n        \"certificateName\": \"<string>\",\n        \"name\": \"<string>\",\n        \"loopbackNumber\": \"<integer>\",\n        \"localInterface\": \"<integer>\"\n      },\n      \"user\": {\n        \"username\": \"<string>\"\n      },\n      \"vty\": {\n        \"startLineNumber\": \"<integer>\",\n        \"endLineNumber\": \"<integer>\",\n        \"authentication\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"authorization\": {\n          \"group\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"accessList\": {\n          \"vtyIn\": {\n            \"name\": \"<string>\"\n          },\n          \"vtyOut\": {\n            \"name\": \"<string>\"\n          }\n        },\n        \"rotaryNumber\": \"<integer>\"\n      }\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/prepare",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"prepare"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"message\": \"<string>\",\n    \"udi\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"configParams\": {\n      \"tunnel\": {\n        \"mode\": \"<string>\",\n        \"port\": \"<string>\",\n        \"host\": \"<string>\",\n        \"name\": \"<string>\",\n        \"rootCertificate\": {\n          \"content\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      \"cloudStaticIp\": \"<string>\",\n      \"user\": {\n        \"publicKey\": \"<string>\",\n        \"username\": \"<string>\",\n        \"secret\": {\n          \"hash\": \"<string>\"\n        }\n      }\n    }\n  },\n  {\n    \"message\": \"<string>\",\n    \"udi\": \"<string>\",\n    \"deviceId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"configParams\": {\n      \"tunnel\": {\n        \"mode\": \"<string>\",\n        \"port\": \"<string>\",\n        \"host\": \"<string>\",\n        \"name\": \"<string>\",\n        \"rootCertificate\": {\n          \"content\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      \"cloudStaticIp\": \"<string>\",\n      \"user\": {\n        \"publicKey\": \"<string>\",\n        \"username\": \"<string>\",\n        \"secret\": {\n          \"hash\": \"<string>\"\n        }\n      }\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "networks",
													"item": [
														{
															"name": "Returns list of networks eligible for adding cloud monitored device",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/networks?deviceType=wireless_controller&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"networks"
																	],
																	"query": [
																		{
																			"key": "deviceType",
																			"value": "wireless_controller",
																			"description": "(Required) Device Type switch or wireless controller"
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Returns list of networks eligible for adding cloud monitored device"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/networks?deviceType=wireless_controller&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"networks"
																			],
																			"query": [
																				{
																					"key": "deviceType",
																					"value": "wireless_controller",
																					"description": "(Required) Device Type switch or wireless controller"
																				},
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"id\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enrollmentString\": \"<string>\",\n    \"url\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"isBoundToConfigTemplate\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"organizationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enrollmentString\": \"<string>\",\n    \"url\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"isBoundToConfigTemplate\": \"<boolean>\"\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "imports",
													"item": [
														{
															"name": "Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"devices\": [\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    },\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/imports",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"imports"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Commits the import operation to complete the onboarding of a device into Dashboard for monitoring."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"devices\": [\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    },\n    {\n      \"deviceId\": \"<string>\",\n      \"udi\": \"<string>\",\n      \"networkId\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/imports",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"imports"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"status\": \"<string>\",\n    \"importId\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  {\n    \"status\": \"<string>\",\n    \"importId\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n]"
																}
															]
														},
														{
															"name": "Check the status of a committed Import operation",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/imports?importIds=<string>&importIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"imports"
																	],
																	"query": [
																		{
																			"key": "importIds",
																			"value": "<string>",
																			"description": "(Required) import ids from an imports"
																		},
																		{
																			"key": "importIds",
																			"value": "<string>",
																			"description": "(Required) import ids from an imports"
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Check the status of a committed Import operation"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/imports?importIds=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"imports"
																			],
																			"query": [
																				{
																					"key": "importIds",
																					"value": "<string>",
																					"description": "(Required) import ids from an imports"
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"importId\": \"<string>\",\n    \"device\": {\n      \"url\": \"<string>\",\n      \"created\": \"<boolean>\",\n      \"status\": \"<string>\"\n    }\n  },\n  {\n    \"importId\": \"<string>\",\n    \"device\": {\n      \"url\": \"<string>\",\n      \"created\": \"<boolean>\",\n      \"status\": \"<string>\"\n    }\n  }\n]"
																}
															]
														}
													]
												},
												{
													"name": "exportEvents",
													"item": [
														{
															"name": "Imports event logs related to the onboarding app into elastisearch",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"logEvent\": \"<string>\",\n  \"timestamp\": \"<integer>\",\n  \"targetOS\": \"<string>\",\n  \"request\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/exportEvents",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"onboarding",
																		"cloudMonitoring",
																		"exportEvents"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Imports event logs related to the onboarding app into elastisearch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"logEvent\": \"<string>\",\n  \"timestamp\": \"<integer>\",\n  \"targetOS\": \"<string>\",\n  \"request\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/inventory/onboarding/cloudMonitoring/exportEvents",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"inventory",
																				"onboarding",
																				"cloudMonitoring",
																				"exportEvents"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "Accepted",
																	"code": 202,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "devices",
									"item": [
										{
											"name": "{serial}",
											"item": [
												{
													"name": "Return a single device from the inventory of an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/inventory/devices/:serial",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"inventory",
																"devices",
																":serial"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a single device from the inventory of an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/inventory/devices/:serial",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"inventory",
																		"devices",
																		":serial"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"mac\": \"<string>\",\n  \"serial\": \"<string>\",\n  \"name\": \"<string>\",\n  \"model\": \"<string>\",\n  \"networkId\": \"<string>\",\n  \"orderNumber\": \"<string>\",\n  \"claimedAt\": \"<dateTime>\",\n  \"licenseExpirationDate\": \"<dateTime>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"productType\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Return the device inventory for an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/inventory/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&usedState=unused&search=<string>&macs=<string>&macs=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&models=<string>&models=<string>&orderNumbers=<string>&orderNumbers=<string>&tags=<string>&tags=<string>&tagsFilterType=withAllTags&productTypes=appliance&productTypes=sensor",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"inventory",
														"devices"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "usedState",
															"value": "unused",
															"description": "Filter results by used or unused inventory. Accepted values are 'used' or 'unused'."
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Search for devices in inventory based on serial number, mac address, or model."
														},
														{
															"key": "macs",
															"value": "<string>",
															"description": "Search for devices in inventory based on mac addresses."
														},
														{
															"key": "macs",
															"value": "<string>",
															"description": "Search for devices in inventory based on mac addresses."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Search for devices in inventory based on network ids."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Search for devices in inventory based on network ids."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Search for devices in inventory based on serials."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Search for devices in inventory based on serials."
														},
														{
															"key": "models",
															"value": "<string>",
															"description": "Search for devices in inventory based on model."
														},
														{
															"key": "models",
															"value": "<string>",
															"description": "Search for devices in inventory based on model."
														},
														{
															"key": "orderNumbers",
															"value": "<string>",
															"description": "Search for devices in inventory based on order numbers."
														},
														{
															"key": "orderNumbers",
															"value": "<string>",
															"description": "Search for devices in inventory based on order numbers."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
														},
														{
															"key": "tagsFilterType",
															"value": "withAllTags",
															"description": "To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'."
														},
														{
															"key": "productTypes",
															"value": "appliance",
															"description": "Filter devices by product type. Accepted values are appliance, camera, cellularGateway, cloudGateway, sensor, switch, systemsManager, and wireless."
														},
														{
															"key": "productTypes",
															"value": "sensor",
															"description": "Filter devices by product type. Accepted values are appliance, camera, cellularGateway, cloudGateway, sensor, switch, systemsManager, and wireless."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the device inventory for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/inventory/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&usedState=unused&search=<string>&macs=<string>&networkIds=<string>&serials=<string>&models=<string>&orderNumbers=<string>&tags=<string>&tagsFilterType=withAllTags&productTypes=sensor",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"inventory",
																"devices"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "usedState",
																	"value": "unused",
																	"description": "Filter results by used or unused inventory. Accepted values are 'used' or 'unused'."
																},
																{
																	"key": "search",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on serial number, mac address, or model."
																},
																{
																	"key": "macs",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on mac addresses."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on network ids."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on serials."
																},
																{
																	"key": "models",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on model."
																},
																{
																	"key": "orderNumbers",
																	"value": "<string>",
																	"description": "Search for devices in inventory based on order numbers."
																},
																{
																	"key": "tags",
																	"value": "<string>",
																	"description": "Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
																},
																{
																	"key": "tagsFilterType",
																	"value": "withAllTags",
																	"description": "To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'."
																},
																{
																	"key": "productTypes",
																	"value": "sensor",
																	"description": "Filter devices by product type. Accepted values are appliance, camera, cellularGateway, cloudGateway, sensor, switch, systemsManager, and wireless."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"model\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"orderNumber\": \"<string>\",\n    \"claimedAt\": \"<dateTime>\",\n    \"licenseExpirationDate\": \"<dateTime>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"productType\": \"<string>\"\n  },\n  {\n    \"mac\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"model\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"orderNumber\": \"<string>\",\n    \"claimedAt\": \"<dateTime>\",\n    \"licenseExpirationDate\": \"<dateTime>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"productType\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "claim",
									"item": [
										{
											"name": "Claim a list of devices, licenses, and/or orders into an organization inventory",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"renew\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/inventory/claim",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"inventory",
														"claim"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Claim a list of devices, licenses, and/or orders into an organization inventory. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. Use /organizations/{organizationId}/inventory/release to release devices from an organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"renew\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/inventory/claim",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"inventory",
																"claim"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "insight",
							"item": [
								{
									"name": "monitoredMediaServers",
									"item": [
										{
											"name": "{monitoredMediaServerId}",
											"item": [
												{
													"name": "Return a monitored media server for this organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"monitoredMediaServers",
																":monitored_media_server_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":monitored_media_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"insight",
																		"monitoredMediaServers",
																		":monitored_media_server_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":monitored_media_server_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update a monitored media server for this organization",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"monitoredMediaServers",
																":monitored_media_server_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":monitored_media_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"insight",
																		"monitoredMediaServers",
																		":monitored_media_server_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":monitored_media_server_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete a monitored media server from this organization",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"monitoredMediaServers",
																":monitored_media_server_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":monitored_media_server_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers/:monitored_media_server_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"insight",
																		"monitoredMediaServers",
																		":monitored_media_server_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":monitored_media_server_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the monitored media servers for this organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"insight",
														"monitoredMediaServers"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"monitoredMediaServers"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"address\": \"<string>\",\n    \"bestEffortMonitoringEnabled\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"address\": \"<string>\",\n    \"bestEffortMonitoringEnabled\": \"<boolean>\"\n  }\n]"
												}
											]
										},
										{
											"name": "Add a media server to be monitored for this organization",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"insight",
														"monitoredMediaServers"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"address\": \"<string>\",\n  \"bestEffortMonitoringEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/monitoredMediaServers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"monitoredMediaServers"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "applications",
									"item": [
										{
											"name": "List all Insight tracked applications",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/insight/applications",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"insight",
														"applications"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List all Insight tracked applications"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/insight/applications",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"insight",
																"applications"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"applicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"thresholds\": {\n      \"type\": \"<string>\",\n      \"byNetwork\": [\n        {\n          \"networkId\": \"<string>\",\n          \"goodput\": \"<integer>\",\n          \"responseDuration\": \"<integer>\"\n        },\n        {\n          \"networkId\": \"<string>\",\n          \"goodput\": \"<integer>\",\n          \"responseDuration\": \"<integer>\"\n        }\n      ]\n    }\n  },\n  {\n    \"applicationId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"thresholds\": {\n      \"type\": \"<string>\",\n      \"byNetwork\": [\n        {\n          \"networkId\": \"<string>\",\n          \"goodput\": \"<integer>\",\n          \"responseDuration\": \"<integer>\"\n        },\n        {\n          \"networkId\": \"<string>\",\n          \"goodput\": \"<integer>\",\n          \"responseDuration\": \"<integer>\"\n        }\n      ]\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "firmware",
							"item": [
								{
									"name": "upgrades",
									"item": [
										{
											"name": "byDevice",
											"item": [
												{
													"name": "Get firmware upgrade status for the filtered devices",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/firmware/upgrades/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&macs=<string>&macs=<string>&firmwareUpgradeIds=<string>&firmwareUpgradeIds=<string>&firmwareUpgradeBatchIds=<string>&firmwareUpgradeBatchIds=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"firmware",
																"upgrades",
																"byDevice"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 50."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by network"
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by network"
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match."
																},
																{
																	"key": "macs",
																	"value": "<string>",
																	"description": "Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match."
																},
																{
																	"key": "macs",
																	"value": "<string>",
																	"description": "Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match."
																},
																{
																	"key": "firmwareUpgradeIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by firmware upgrade ids."
																},
																{
																	"key": "firmwareUpgradeIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by firmware upgrade ids."
																},
																{
																	"key": "firmwareUpgradeBatchIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by firmware upgrade batch ids."
																},
																{
																	"key": "firmwareUpgradeBatchIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter by firmware upgrade batch ids."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Get firmware upgrade status for the filtered devices"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/firmware/upgrades/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&macs=<string>&firmwareUpgradeIds=<string>&firmwareUpgradeBatchIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"firmware",
																		"upgrades",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 50. Default is 50."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter by network"
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match."
																		},
																		{
																			"key": "macs",
																			"value": "<string>",
																			"description": "Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match."
																		},
																		{
																			"key": "firmwareUpgradeIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter by firmware upgrade ids."
																		},
																		{
																			"key": "firmwareUpgradeBatchIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter by firmware upgrade batch ids."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"upgrade\": {\n      \"time\": \"<string>\",\n      \"fromVersion\": {\n        \"id\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<string>\"\n      },\n      \"toVersion\": {\n        \"id\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<string>\"\n      },\n      \"status\": \"<string>\",\n      \"id\": \"<string>\",\n      \"upgradeBatchId\": \"<string>\",\n      \"staged\": {\n        \"group\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  },\n  {\n    \"serial\": \"<string>\",\n    \"name\": \"<string>\",\n    \"deviceStatus\": \"<string>\",\n    \"upgrade\": {\n      \"time\": \"<string>\",\n      \"fromVersion\": {\n        \"id\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<string>\"\n      },\n      \"toVersion\": {\n        \"id\": \"<string>\",\n        \"shortName\": \"<string>\",\n        \"releaseType\": \"<string>\",\n        \"releaseDate\": \"<string>\"\n      },\n      \"status\": \"<string>\",\n      \"id\": \"<string>\",\n      \"upgradeBatchId\": \"<string>\",\n      \"staged\": {\n        \"group\": {\n          \"id\": \"<string>\"\n        }\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "Get firmware upgrade information for an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/firmware/upgrades?status=<string>&status=<string>&productType=<string>&productType=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"firmware",
														"upgrades"
													],
													"query": [
														{
															"key": "status",
															"value": "<string>",
															"description": "The status of an upgrade "
														},
														{
															"key": "status",
															"value": "<string>",
															"description": "The status of an upgrade "
														},
														{
															"key": "productType",
															"value": "<string>",
															"description": "The product type in a given upgrade ID"
														},
														{
															"key": "productType",
															"value": "<string>",
															"description": "The product type in a given upgrade ID"
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Get firmware upgrade information for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/firmware/upgrades?status=<string>&productType=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"firmware",
																"upgrades"
															],
															"query": [
																{
																	"key": "status",
																	"value": "<string>",
																	"description": "The status of an upgrade "
																},
																{
																	"key": "productType",
																	"value": "<string>",
																	"description": "The product type in a given upgrade ID"
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"upgradeId\": \"<string>\",\n    \"upgradeBatchId\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"completedAt\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"toVersion\": {\n      \"id\": \"<string>\",\n      \"shortName\": \"<string>\",\n      \"releaseType\": \"<string>\",\n      \"releaseDate\": \"<dateTime>\"\n    },\n    \"fromVersion\": {\n      \"id\": \"<string>\",\n      \"shortName\": \"<string>\",\n      \"releaseType\": \"<string>\",\n      \"releaseDate\": \"<dateTime>\"\n    }\n  },\n  {\n    \"upgradeId\": \"<string>\",\n    \"upgradeBatchId\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": \"<string>\",\n    \"time\": \"<dateTime>\",\n    \"completedAt\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"toVersion\": {\n      \"id\": \"<string>\",\n      \"shortName\": \"<string>\",\n      \"releaseType\": \"<string>\",\n      \"releaseDate\": \"<dateTime>\"\n    },\n    \"fromVersion\": {\n      \"id\": \"<string>\",\n      \"shortName\": \"<string>\",\n      \"releaseType\": \"<string>\",\n      \"releaseDate\": \"<dateTime>\"\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "earlyAccess",
							"item": [
								{
									"name": "features",
									"item": [
										{
											"name": "optIns",
											"item": [
												{
													"name": "{optInId}",
													"item": [
														{
															"name": "Show an early access feature opt-in for an organization",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":opt_in_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":opt_in_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Show an early access feature opt-in for an organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"earlyAccess",
																				"features",
																				"optIns",
																				":opt_in_id"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":opt_in_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update an early access feature opt-in for an organization",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":opt_in_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":opt_in_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update an early access feature opt-in for an organization"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"earlyAccess",
																				"features",
																				"optIns",
																				":opt_in_id"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":opt_in_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Delete an early access feature opt-in",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"earlyAccess",
																		"features",
																		"optIns",
																		":opt_in_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":opt_in_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete an early access feature opt-in"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns/:opt_in_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"earlyAccess",
																				"features",
																				"optIns",
																				":opt_in_id"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":opt_in_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List the early access feature opt-ins for an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"earlyAccess",
																"features",
																"optIns"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the early access feature opt-ins for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"earlyAccess",
																		"features",
																		"optIns"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Create a new early access feature opt-in for an organization",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shortName\": \"<string>\",\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"earlyAccess",
																"features",
																"optIns"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Create a new early access feature opt-in for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"shortName\": \"<string>\",\n  \"limitScopeToNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features/optIns",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"earlyAccess",
																		"features",
																		"optIns"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List the available early access features for organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"earlyAccess",
														"features"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the available early access features for organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/earlyAccess/features",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"earlyAccess",
																"features"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"shortName\": \"<string>\",\n    \"name\": \"<string>\",\n    \"descriptions\": {\n      \"short\": \"<string>\",\n      \"long\": \"<string>\"\n    },\n    \"topic\": \"<string>\",\n    \"isOrgScopedOnly\": \"<boolean>\",\n    \"documentationLink\": \"<string>\",\n    \"supportLink\": \"<string>\"\n  },\n  {\n    \"shortName\": \"<string>\",\n    \"name\": \"<string>\",\n    \"descriptions\": {\n      \"short\": \"<string>\",\n      \"long\": \"<string>\"\n    },\n    \"topic\": \"<string>\",\n    \"isOrgScopedOnly\": \"<boolean>\",\n    \"documentationLink\": \"<string>\",\n    \"supportLink\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "uplinksLossAndLatency",
									"item": [
										{
											"name": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/devices/uplinksLossAndLatency?t0=<string>&t1=<string>&timespan=<float>&uplink=cellular&ip=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"devices",
														"uplinksLossAndLatency"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
														},
														{
															"key": "uplink",
															"value": "cellular",
															"description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks."
														},
														{
															"key": "ip",
															"value": "<string>",
															"description": "Optional filter for a specific destination IP. Default will return all destination IPs."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/devices/uplinksLossAndLatency?t0=<string>&t1=<string>&timespan=<float>&uplink=cellular&ip=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"devices",
																"uplinksLossAndLatency"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
																},
																{
																	"key": "uplink",
																	"value": "cellular",
																	"description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks."
																},
																{
																	"key": "ip",
																	"value": "<string>",
																	"description": "Optional filter for a specific destination IP. Default will return all destination IPs."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"uplink\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"timeSeries\": [\n      {\n        \"ts\": \"<dateTime>\",\n        \"lossPercent\": \"<float>\",\n        \"latencyMs\": \"<float>\"\n      },\n      {\n        \"ts\": \"<dateTime>\",\n        \"lossPercent\": \"<float>\",\n        \"latencyMs\": \"<float>\"\n      }\n    ]\n  },\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"uplink\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"timeSeries\": [\n      {\n        \"ts\": \"<dateTime>\",\n        \"lossPercent\": \"<float>\",\n        \"latencyMs\": \"<float>\"\n      },\n      {\n        \"ts\": \"<dateTime>\",\n        \"lossPercent\": \"<float>\",\n        \"latencyMs\": \"<float>\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "addresses",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "List the current uplink addresses for devices in an organization.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/devices/uplinks/addresses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=withAllTags",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"devices",
																		"uplinks",
																		"addresses",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches."
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>",
																			"description": "Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches."
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>",
																			"description": "Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																		},
																		{
																			"key": "tags",
																			"value": "<string>",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																		},
																		{
																			"key": "tags",
																			"value": "<string>",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "withAllTags",
																			"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the current uplink addresses for devices in an organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/devices/uplinks/addresses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&productTypes=<string>&serials=<string>&tags=<string>&tagsFilterType=withAllTags",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"devices",
																				"uplinks",
																				"addresses",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>",
																					"description": "Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches."
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>",
																					"description": "Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches."
																				},
																				{
																					"key": "serials",
																					"value": "<string>",
																					"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																				},
																				{
																					"key": "tags",
																					"value": "<string>",
																					"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																				},
																				{
																					"key": "tagsFilterType",
																					"value": "withAllTags",
																					"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"systemsManager\",\n    \"serial\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"uplinks\": [\n      {\n        \"interface\": \"wan2\",\n        \"addresses\": [\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"dynamic\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          },\n          {\n            \"protocol\": \"ipv4\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          }\n        ]\n      },\n      {\n        \"interface\": \"man1\",\n        \"addresses\": [\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          },\n          {\n            \"protocol\": \"ipv4\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"sensor\",\n    \"serial\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"uplinks\": [\n      {\n        \"interface\": \"cellular\",\n        \"addresses\": [\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          },\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"dynamic\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          }\n        ]\n      },\n      {\n        \"interface\": \"cellular\",\n        \"addresses\": [\n          {\n            \"protocol\": \"ipv6\",\n            \"assignmentMode\": \"dynamic\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          },\n          {\n            \"protocol\": \"ipv4\",\n            \"assignmentMode\": \"static\",\n            \"address\": \"<string>\",\n            \"gateway\": \"<string>\",\n            \"public\": {\n              \"address\": \"<string>\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "statuses",
									"item": [
										{
											"name": "overview",
											"item": [
												{
													"name": "Return an overview of current device statuses",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/devices/statuses/overview?productTypes=appliance&productTypes=sensor&networkIds=<string>&networkIds=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"devices",
																"statuses",
																"overview"
															],
															"query": [
																{
																	"key": "productTypes",
																	"value": "appliance",
																	"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
																},
																{
																	"key": "productTypes",
																	"value": "sensor",
																	"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "An optional parameter to filter device statuses by network."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "An optional parameter to filter device statuses by network."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return an overview of current device statuses"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/devices/statuses/overview?productTypes=sensor&networkIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"devices",
																		"statuses",
																		"overview"
																	],
																	"query": [
																		{
																			"key": "productTypes",
																			"value": "sensor",
																			"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "An optional parameter to filter device statuses by network."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"counts\": {\n    \"byStatus\": {\n      \"online\": \"<integer>\",\n      \"alerting\": \"<integer>\",\n      \"offline\": \"<integer>\",\n      \"dormant\": \"<integer>\"\n    }\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the status of every Meraki device in the organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/devices/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&statuses=online&statuses=alerting&productTypes=appliance&productTypes=sensor&models=<string>&models=<string>&tags=<string>&tags=<string>&tagsFilterType=withAllTags",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"devices",
														"statuses"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Optional parameter to filter devices by network ids."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Optional parameter to filter devices by network ids."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Optional parameter to filter devices by serials."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Optional parameter to filter devices by serials."
														},
														{
															"key": "statuses",
															"value": "online",
															"description": "Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"]."
														},
														{
															"key": "statuses",
															"value": "alerting",
															"description": "Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"]."
														},
														{
															"key": "productTypes",
															"value": "appliance",
															"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
														},
														{
															"key": "productTypes",
															"value": "sensor",
															"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
														},
														{
															"key": "models",
															"value": "<string>",
															"description": "Optional parameter to filter devices by models."
														},
														{
															"key": "models",
															"value": "<string>",
															"description": "Optional parameter to filter devices by models."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
														},
														{
															"key": "tagsFilterType",
															"value": "withAllTags",
															"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the status of every Meraki device in the organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/devices/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&statuses=alerting&productTypes=sensor&models=<string>&tags=<string>&tagsFilterType=withAllTags",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"devices",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter devices by network ids."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter devices by serials."
																},
																{
																	"key": "statuses",
																	"value": "alerting",
																	"description": "Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"]."
																},
																{
																	"key": "productTypes",
																	"value": "sensor",
																	"description": "An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
																},
																{
																	"key": "models",
																	"value": "<string>",
																	"description": "Optional parameter to filter devices by models."
																},
																{
																	"key": "tags",
																	"value": "<string>",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
																},
																{
																	"key": "tagsFilterType",
																	"value": "withAllTags",
																	"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"name\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"lastReportedAt\": \"<string>\",\n    \"lanIp\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"ipType\": \"<string>\",\n    \"primaryDns\": \"<string>\",\n    \"secondaryDns\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"components\": {\n      \"powerSupplies\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"model\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"publicIp\": \"<string>\",\n    \"networkId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"lastReportedAt\": \"<string>\",\n    \"lanIp\": \"<string>\",\n    \"gateway\": \"<string>\",\n    \"ipType\": \"<string>\",\n    \"primaryDns\": \"<string>\",\n    \"secondaryDns\": \"<string>\",\n    \"productType\": \"<string>\",\n    \"components\": {\n      \"powerSupplies\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"model\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "provisioning",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "List the provisioning statuses information for devices in an organization.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/devices/provisioning/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&status=complete&tags=<string>&tags=<string>&tagsFilterType=withAllTags",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"devices",
																"provisioning",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by network ID. This filter uses multiple exact matches."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by network ID. This filter uses multiple exact matches."
																},
																{
																	"key": "productTypes",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches."
																},
																{
																	"key": "productTypes",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches."
																},
																{
																	"key": "status",
																	"value": "complete",
																	"description": "An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete."
																},
																{
																	"key": "tags",
																	"value": "<string>",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																},
																{
																	"key": "tags",
																	"value": "<string>",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																},
																{
																	"key": "tagsFilterType",
																	"value": "withAllTags",
																	"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the provisioning statuses information for devices in an organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/devices/provisioning/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&productTypes=<string>&serials=<string>&status=complete&tags=<string>&tagsFilterType=withAllTags",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"devices",
																		"provisioning",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter device by network ID. This filter uses multiple exact matches."
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>",
																			"description": "Optional parameter to filter device by device product types. This filter uses multiple exact matches."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches."
																		},
																		{
																			"key": "status",
																			"value": "complete",
																			"description": "An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete."
																		},
																		{
																			"key": "tags",
																			"value": "<string>",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "withAllTags",
																			"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"appliance\",\n    \"serial\": \"<string>\",\n    \"status\": \"complete\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"cellularGateway\",\n    \"serial\": \"<string>\",\n    \"status\": \"unprovisioned\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "powerModules",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "byDevice",
													"item": [
														{
															"name": "List the power status information for devices in an organization",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/devices/powerModules/statuses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=withAllTags",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"devices",
																		"powerModules",
																		"statuses",
																		"byDevice"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
																		},
																		{
																			"key": "productTypes",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																		},
																		{
																			"key": "tags",
																			"value": "<string>",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																		},
																		{
																			"key": "tags",
																			"value": "<string>",
																			"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																		},
																		{
																			"key": "tagsFilterType",
																			"value": "withAllTags",
																			"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the power status information for devices in an organization. The data returned by this endpoint is updated every 5 minutes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/devices/powerModules/statuses/byDevice?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&productTypes=<string>&serials=<string>&tags=<string>&tagsFilterType=withAllTags",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"devices",
																				"powerModules",
																				"statuses",
																				"byDevice"
																			],
																			"query": [
																				{
																					"key": "perPage",
																					"value": "<integer>",
																					"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																				},
																				{
																					"key": "startingAfter",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "endingBefore",
																					"value": "<string>",
																					"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																				},
																				{
																					"key": "networkIds",
																					"value": "<string>",
																					"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
																				},
																				{
																					"key": "productTypes",
																					"value": "<string>",
																					"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
																				},
																				{
																					"key": "serials",
																					"value": "<string>",
																					"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																				},
																				{
																					"key": "tags",
																					"value": "<string>",
																					"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																				},
																				{
																					"key": "tagsFilterType",
																					"value": "withAllTags",
																					"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		},
																		{
																			"key": "Link",
																			"value": "<string>",
																			"description": {
																				"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																				"type": "text/plain"
																			}
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"systemsManager\",\n    \"serial\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"slots\": [\n      {\n        \"number\": 0,\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"status\": \"not connected\"\n      },\n      {\n        \"number\": 2,\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"status\": \"not connected\"\n      }\n    ]\n  },\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"switch\",\n    \"serial\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"slots\": [\n      {\n        \"number\": 2,\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"status\": \"powering\"\n      },\n      {\n        \"number\": 0,\n        \"serial\": \"<string>\",\n        \"model\": \"<string>\",\n        \"status\": \"not connected\"\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "availabilities",
									"item": [
										{
											"name": "List the availability information for devices in an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/devices/availabilities?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&productTypes=<string>&productTypes=<string>&serials=<string>&serials=<string>&tags=<string>&tags=<string>&tagsFilterType=withAllTags",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"devices",
														"availabilities"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
														},
														{
															"key": "productTypes",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
														},
														{
															"key": "productTypes",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
														},
														{
															"key": "tagsFilterType",
															"value": "withAllTags",
															"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List the availability information for devices in an organization. The data returned by this endpoint is updated every 5 minutes."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/devices/availabilities?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&productTypes=<string>&serials=<string>&tags=<string>&tagsFilterType=withAllTags",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"devices",
																"availabilities"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches."
																},
																{
																	"key": "productTypes",
																	"value": "<string>",
																	"description": "Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches."
																},
																{
																	"key": "tags",
																	"value": "<string>",
																	"description": "An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches."
																},
																{
																	"key": "tagsFilterType",
																	"value": "withAllTags",
																	"description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"cloudGateway\",\n    \"serial\": \"<string>\",\n    \"status\": \"dormant\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"mac\": \"<string>\",\n    \"name\": \"<string>\",\n    \"network\": {\n      \"id\": \"<string>\"\n    },\n    \"productType\": \"appliance\",\n    \"serial\": \"<string>\",\n    \"status\": \"alerting\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "List the devices in an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<string>&networkIds=<string>&networkIds=<string>&productTypes=appliance&productTypes=sensor&tags=<string>&tags=<string>&tagsFilterType=withAllTags&name=<string>&mac=<string>&:serial=<string>&model=<string>&macs=<string>&macs=<string>&serials=<string>&serials=<string>&sensorMetrics=<string>&sensorMetrics=<string>&sensorAlertProfileIds=<string>&sensorAlertProfileIds=<string>&models=<string>&models=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"devices"
											],
											"query": [
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "configurationUpdatedAfter",
													"value": "<string>",
													"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
												},
												{
													"key": "networkIds",
													"value": "<string>",
													"description": "Optional parameter to filter devices by network."
												},
												{
													"key": "networkIds",
													"value": "<string>",
													"description": "Optional parameter to filter devices by network."
												},
												{
													"key": "productTypes",
													"value": "appliance",
													"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
												},
												{
													"key": "productTypes",
													"value": "sensor",
													"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Optional parameter to filter devices by tags."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Optional parameter to filter devices by tags."
												},
												{
													"key": "tagsFilterType",
													"value": "withAllTags",
													"description": "Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match."
												},
												{
													"key": "mac",
													"value": "<string>",
													"description": "Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match."
												},
												{
													"key": ":serial",
													"value": "<string>",
													"description": "Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match."
												},
												{
													"key": "model",
													"value": "<string>",
													"description": "Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match."
												},
												{
													"key": "macs",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match."
												},
												{
													"key": "macs",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match."
												},
												{
													"key": "serials",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match."
												},
												{
													"key": "serials",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match."
												},
												{
													"key": "sensorMetrics",
													"value": "<string>",
													"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices."
												},
												{
													"key": "sensorMetrics",
													"value": "<string>",
													"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices."
												},
												{
													"key": "sensorAlertProfileIds",
													"value": "<string>",
													"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices."
												},
												{
													"key": "sensorAlertProfileIds",
													"value": "<string>",
													"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices."
												},
												{
													"key": "models",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match."
												},
												{
													"key": "models",
													"value": "<string>",
													"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match."
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the devices in an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/devices?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&configurationUpdatedAfter=<string>&networkIds=<string>&productTypes=sensor&tags=<string>&tagsFilterType=withAllTags&name=<string>&mac=<string>&:serial=<string>&model=<string>&macs=<string>&serials=<string>&sensorMetrics=<string>&sensorAlertProfileIds=<string>&models=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"devices"
													],
													"query": [
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "configurationUpdatedAfter",
															"value": "<string>",
															"description": "Filter results by whether or not the device's configuration has been updated after the given timestamp"
														},
														{
															"key": "networkIds",
															"value": "<string>",
															"description": "Optional parameter to filter devices by network."
														},
														{
															"key": "productTypes",
															"value": "sensor",
															"description": "Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor, and cloudGateway."
														},
														{
															"key": "tags",
															"value": "<string>",
															"description": "Optional parameter to filter devices by tags."
														},
														{
															"key": "tagsFilterType",
															"value": "withAllTags",
															"description": "Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match."
														},
														{
															"key": "mac",
															"value": "<string>",
															"description": "Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match."
														},
														{
															"key": ":serial",
															"value": "<string>",
															"description": "Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match."
														},
														{
															"key": "model",
															"value": "<string>",
															"description": "Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match."
														},
														{
															"key": "macs",
															"value": "<string>",
															"description": "Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match."
														},
														{
															"key": "serials",
															"value": "<string>",
															"description": "Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match."
														},
														{
															"key": "sensorMetrics",
															"value": "<string>",
															"description": "Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices."
														},
														{
															"key": "sensorAlertProfileIds",
															"value": "<string>",
															"description": "Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices."
														},
														{
															"key": "models",
															"value": "<string>",
															"description": "Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match."
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\",\n    \"address\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"lanIp\": \"<string>\",\n    \"firmware\": \"<string>\",\n    \"productType\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"lat\": \"<float>\",\n    \"lng\": \"<float>\",\n    \"address\": \"<string>\",\n    \"notes\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"mac\": \"<string>\",\n    \"lanIp\": \"<string>\",\n    \"firmware\": \"<string>\",\n    \"productType\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "configurationChanges",
							"item": [
								{
									"name": "View the Change Log for your organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/configurationChanges?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&:network_id=<string>&:admin_id=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"configurationChanges"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
												},
												{
													"key": "t1",
													"value": "<string>",
													"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days."
												},
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": ":network_id",
													"value": "<string>",
													"description": "Filters on the given network"
												},
												{
													"key": ":admin_id",
													"value": "<string>",
													"description": "Filters on the given Admin"
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "View the Change Log for your organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configurationChanges?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&:network_id=<string>&:admin_id=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configurationChanges"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": ":network_id",
															"value": "<string>",
															"description": "Filters on the given network"
														},
														{
															"key": ":admin_id",
															"value": "<string>",
															"description": "Filters on the given Admin"
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "configTemplates",
							"item": [
								{
									"name": "{configTemplateId}",
									"item": [
										{
											"name": "switch",
											"item": [
												{
													"name": "profiles",
													"item": [
														{
															"name": "{profileId}",
															"item": [
																{
																	"name": "ports",
																	"item": [
																		{
																			"name": "{portId}",
																			"item": [
																				{
																					"name": "Return a switch template port",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports/:port_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"organizations",
																								":organization_id",
																								"configTemplates",
																								":config_template_id",
																								"switch",
																								"profiles",
																								":profile_id",
																								"ports",
																								":port_id"
																							],
																							"variable": [
																								{
																									"key": ":organization_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":config_template_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":profile_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":port_id",
																									"value": "<string>"
																								}
																							]
																						},
																						"description": "Return a switch template port"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: apikey",
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>"
																									}
																								],
																								"url": {
																									"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports/:port_id",
																									"protocol": "https",
																									"host": [
																										"{{hostname}}"
																									],
																									"path": [
																										"organizations",
																										":organization_id",
																										"configTemplates",
																										":config_template_id",
																										"switch",
																										"profiles",
																										":profile_id",
																										"ports",
																										":port_id"
																									],
																									"variable": [
																										{
																											"key": ":organization_id"
																										},
																										{
																											"key": ":config_template_id"
																										},
																										{
																											"key": ":profile_id"
																										},
																										{
																											"key": ":port_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"portId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"linkNegotiationCapabilities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Enforce\",\n  \"accessPolicyType\": \"Custom access policy\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}"
																						}
																					]
																				},
																				{
																					"name": "Update a switch template port",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"trunk\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Enforce\",\n  \"accessPolicyType\": \"MAC allow list\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports/:port_id",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"organizations",
																								":organization_id",
																								"configTemplates",
																								":config_template_id",
																								"switch",
																								"profiles",
																								":profile_id",
																								"ports",
																								":port_id"
																							],
																							"variable": [
																								{
																									"key": ":organization_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":config_template_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":profile_id",
																									"value": "<string>"
																								},
																								{
																									"key": ":port_id",
																									"value": "<string>"
																								}
																							]
																						},
																						"description": "Update a switch template port"
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [
																									{
																										"key": "Content-Type",
																										"value": "application/json"
																									},
																									{
																										"key": "Accept",
																										"value": "application/json"
																									},
																									{
																										"description": "Added as a part of security scheme: apikey",
																										"key": "X-Cisco-Meraki-API-Key",
																										"value": "<API Key>"
																									}
																								],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"trunk\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Enforce\",\n  \"accessPolicyType\": \"MAC allow list\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}",
																									"options": {
																										"raw": {
																											"headerFamily": "json",
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports/:port_id",
																									"protocol": "https",
																									"host": [
																										"{{hostname}}"
																									],
																									"path": [
																										"organizations",
																										":organization_id",
																										"configTemplates",
																										":config_template_id",
																										"switch",
																										"profiles",
																										":profile_id",
																										"ports",
																										":port_id"
																									],
																									"variable": [
																										{
																											"key": ":organization_id"
																										},
																										{
																											"key": ":config_template_id"
																										},
																										{
																											"key": ":profile_id"
																										},
																										{
																											"key": ":port_id"
																										}
																									]
																								}
																							},
																							"status": "OK",
																							"code": 200,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "application/json"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"portId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"linkNegotiationCapabilities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Enforce\",\n  \"accessPolicyType\": \"Custom access policy\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Return all the ports of a switch template",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"organizations",
																						":organization_id",
																						"configTemplates",
																						":config_template_id",
																						"switch",
																						"profiles",
																						":profile_id",
																						"ports"
																					],
																					"variable": [
																						{
																							"key": ":organization_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":config_template_id",
																							"value": "<string>"
																						},
																						{
																							"key": ":profile_id",
																							"value": "<string>"
																						}
																					]
																				},
																				"description": "Return all the ports of a switch template"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: apikey",
																								"key": "X-Cisco-Meraki-API-Key",
																								"value": "<API Key>"
																							}
																						],
																						"url": {
																							"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles/:profile_id/ports",
																							"protocol": "https",
																							"host": [
																								"{{hostname}}"
																							],
																							"path": [
																								"organizations",
																								":organization_id",
																								"configTemplates",
																								":config_template_id",
																								"switch",
																								"profiles",
																								":profile_id",
																								"ports"
																							],
																							"variable": [
																								{
																									"key": ":organization_id"
																								},
																								{
																									"key": ":config_template_id"
																								},
																								{
																									"key": ":profile_id"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"portId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enabled\": \"<boolean>\",\n    \"poeEnabled\": \"<boolean>\",\n    \"type\": \"trunk\",\n    \"vlan\": \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"isolationEnabled\": \"<boolean>\",\n    \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\": \"root guard\",\n    \"linkNegotiation\": \"<string>\",\n    \"linkNegotiationCapabilities\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"portScheduleId\": \"<string>\",\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Sticky MAC allow list\",\n    \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\": \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n    \"flexibleStackingEnabled\": \"<boolean>\",\n    \"daiTrusted\": \"<boolean>\",\n    \"profile\": {\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"iname\": \"<string>\"\n    }\n  },\n  {\n    \"portId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enabled\": \"<boolean>\",\n    \"poeEnabled\": \"<boolean>\",\n    \"type\": \"access\",\n    \"vlan\": \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"isolationEnabled\": \"<boolean>\",\n    \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\": \"bpdu guard\",\n    \"linkNegotiation\": \"<string>\",\n    \"linkNegotiationCapabilities\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"portScheduleId\": \"<string>\",\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Open\",\n    \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\": \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n    \"flexibleStackingEnabled\": \"<boolean>\",\n    \"daiTrusted\": \"<boolean>\",\n    \"profile\": {\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"iname\": \"<string>\"\n    }\n  }\n]"
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"name": "List the switch templates for your switch template configuration",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"configTemplates",
																		":config_template_id",
																		"switch",
																		"profiles"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":config_template_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "List the switch templates for your switch template configuration"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id/switch/profiles",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"configTemplates",
																				":config_template_id",
																				"switch",
																				"profiles"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":config_template_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"switchProfileId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"model\": \"<string>\"\n  },\n  {\n    \"switchProfileId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"model\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Update a configuration template",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configTemplates",
														":config_template_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":config_template_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a configuration template"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"configTemplates",
																":config_template_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":config_template_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Remove a configuration template",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configTemplates",
														":config_template_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":config_template_id",
															"value": "<string>"
														}
													]
												},
												"description": "Remove a configuration template"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"configTemplates",
																":config_template_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":config_template_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Return a single configuration template",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configTemplates",
														":config_template_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":config_template_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return a single configuration template"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates/:config_template_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"configTemplates",
																":config_template_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":config_template_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the configuration templates for this organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"configTemplates"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the configuration templates for this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configTemplates"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"productTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"timeZone\": \"<string>\"\n  }\n]"
										}
									]
								},
								{
									"name": "Create a new configuration template",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"configTemplates"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a new configuration template"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"timeZone\": \"<string>\",\n  \"copyFromNetworkId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/configTemplates",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"configTemplates"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"productTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"timeZone\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "clone",
							"item": [
								{
									"name": "Create a new organization by cloning the addressed organization",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/clone",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"clone"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a new organization by cloning the addressed organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/clone",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"clone"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"licensing\": {\n    \"model\": \"per-device\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"<string>\"\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "search",
									"item": [
										{
											"name": "Return the client details in an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/clients/search?mac=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"clients",
														"search"
													],
													"query": [
														{
															"key": "mac",
															"value": "<string>",
															"description": "(Required) The MAC address of the client. Required."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 5. Default is 5."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the client details in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/clients/search?mac=<string>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"clients",
																"search"
															],
															"query": [
																{
																	"key": "mac",
																	"value": "<string>",
																	"description": "(Required) The MAC address of the client. Required."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 5. Default is 5."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														},
														{
															"key": "Link",
															"value": "<string>",
															"description": {
																"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																"type": "text/plain"
															}
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "Return summary information around client data usage (in mb) across the given organization.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/clients/overview?t0=<string>&t1=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"clients",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return summary information around client data usage (in mb) across the given organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/clients/overview?t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"clients",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"usage\": {\n    \"overall\": {\n      \"total\": \"<float>\",\n      \"downstream\": \"<float>\",\n      \"upstream\": \"<float>\"\n    },\n    \"average\": \"<float>\"\n  },\n  \"counts\": {\n    \"total\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "bandwidthUsageHistory",
									"item": [
										{
											"name": "Return data usage (in megabits per second) over time for all clients in the given organization within a given time range.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/clients/bandwidthUsageHistory?t0=<string>&t1=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"clients",
														"bandwidthUsageHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return data usage (in megabits per second) over time for all clients in the given organization within a given time range."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/clients/bandwidthUsageHistory?t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"clients",
																"bandwidthUsageHistory"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ts\": \"<dateTime>\",\n    \"total\": \"<integer>\",\n    \"upstream\": \"<integer>\",\n    \"downstream\": \"<integer>\"\n  },\n  {\n    \"ts\": \"<dateTime>\",\n    \"total\": \"<integer>\",\n    \"upstream\": \"<integer>\",\n    \"downstream\": \"<integer>\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "claim",
							"item": [
								{
									"name": "Claim a list of devices, licenses, and/or orders into an organization",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/claim",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"claim"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"addDevices\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/claim",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"claim"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"orders\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"licenses\": [\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"mode\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "cellularGateway",
							"item": [
								{
									"name": "uplink",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "List the uplink status of every Meraki MG cellular gateway in the organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/cellularGateway/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"cellularGateway",
																"uplink",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																},
																{
																	"key": "iccids",
																	"value": "<string>",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																},
																{
																	"key": "iccids",
																	"value": "<string>",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the uplink status of every Meraki MG cellular gateway in the organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/cellularGateway/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&iccids=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"cellularGateway",
																		"uplink",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																		},
																		{
																			"key": "iccids",
																			"value": "<string>",
																			"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"lastReportedAt\": \"<dateTime>\",\n    \"uplinks\": [\n      {\n        \"interface\": \"<string>\",\n        \"status\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"model\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      },\n      {\n        \"interface\": \"<string>\",\n        \"status\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"model\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"networkId\": \"<string>\",\n    \"serial\": \"<string>\",\n    \"model\": \"<string>\",\n    \"lastReportedAt\": \"<dateTime>\",\n    \"uplinks\": [\n      {\n        \"interface\": \"<string>\",\n        \"status\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"model\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      },\n      {\n        \"interface\": \"<string>\",\n        \"status\": \"<string>\",\n        \"ip\": \"<string>\",\n        \"provider\": \"<string>\",\n        \"publicIp\": \"<string>\",\n        \"model\": \"<string>\",\n        \"signalStat\": {\n          \"rsrp\": \"<string>\",\n          \"rsrq\": \"<string>\"\n        },\n        \"connectionType\": \"<string>\",\n        \"apn\": \"<string>\",\n        \"gateway\": \"<string>\",\n        \"dns1\": \"<string>\",\n        \"dns2\": \"<string>\",\n        \"signalType\": \"<string>\",\n        \"iccid\": \"<string>\"\n      }\n    ]\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "camera",
							"item": [
								{
									"name": "onboarding",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "Fetch onboarding status of cameras",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/camera/onboarding/statuses?serials=<string>&serials=<string>&networkIds=<string>&networkIds=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"camera",
																"onboarding",
																"statuses"
															],
															"query": [
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned cameras will be filtered to only include these networks."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned cameras will be filtered to only include these networks."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Fetch onboarding status of cameras"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/onboarding/statuses?serials=<string>&networkIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"onboarding",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "A list of serial numbers. The returned cameras will be filtered to only include these serials."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of network IDs. The returned cameras will be filtered to only include these networks."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Notify that credential handoff to camera has completed",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serial\": \"<string>\",\n  \"wirelessCredentialsSent\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/camera/onboarding/statuses",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"camera",
																"onboarding",
																"statuses"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Notify that credential handoff to camera has completed"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"serial\": \"<string>\",\n  \"wirelessCredentialsSent\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/onboarding/statuses",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"onboarding",
																		"statuses"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "customAnalytics",
									"item": [
										{
											"name": "artifacts",
											"item": [
												{
													"name": "{artifactId}",
													"item": [
														{
															"name": "Get Custom Analytics Artifact",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts/:artifact_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"customAnalytics",
																		"artifacts",
																		":artifact_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":artifact_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get Custom Analytics Artifact"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts/:artifact_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"camera",
																				"customAnalytics",
																				"artifacts",
																				":artifact_id"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":artifact_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Delete Custom Analytics Artifact",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts/:artifact_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"customAnalytics",
																		"artifacts",
																		":artifact_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		},
																		{
																			"key": ":artifact_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete Custom Analytics Artifact"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts/:artifact_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"camera",
																				"customAnalytics",
																				"artifacts",
																				":artifact_id"
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				},
																				{
																					"key": ":artifact_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List Custom Analytics Artifacts",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"camera",
																"customAnalytics",
																"artifacts"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List Custom Analytics Artifacts"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"customAnalytics",
																		"artifacts"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Create custom analytics artifact",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"camera",
																"customAnalytics",
																"artifacts"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Create custom analytics artifact. Returns an artifact upload URL with expiry time. Upload the artifact file with a put request to the returned upload URL before its expiry."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/camera/customAnalytics/artifacts",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"camera",
																		"customAnalytics",
																		"artifacts"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "brandingPolicies",
							"item": [
								{
									"name": "{brandingPolicyId}",
									"item": [
										{
											"name": "Return a branding policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies",
														":branding_policy_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":branding_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return a branding policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"brandingPolicies",
																":branding_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":branding_policy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks tagged...\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"hide\",\n    \"communitySubtab\": \"default or inherit\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"show\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"show\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"default or inherit\",\n    \"firewallInfoSubtab\": \"show\",\n    \"apiDocsSubtab\": \"show\",\n    \"hardwareReplacementsSubtab\": \"show\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"default or inherit\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"preview\": {\n        \"url\": \"<string>\",\n        \"expiresAt\": \"<dateTime>\"\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Update a branding policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All SAML admins\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"default or inherit\",\n    \"getHelpSubtab\": \"show\",\n    \"communitySubtab\": \"hide\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"hide\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"default or inherit\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"hide\",\n    \"firewallInfoSubtab\": \"default or inherit\",\n    \"apiDocsSubtab\": \"show\",\n    \"hardwareReplacementsSubtab\": \"default or inherit\",\n    \"smForums\": \"default or inherit\",\n    \"helpWidget\": \"default or inherit\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<string>\",\n      \"format\": \"png\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies",
														":branding_policy_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":branding_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update a branding policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All SAML admins\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"default or inherit\",\n    \"getHelpSubtab\": \"show\",\n    \"communitySubtab\": \"hide\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"hide\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"default or inherit\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"hide\",\n    \"firewallInfoSubtab\": \"default or inherit\",\n    \"apiDocsSubtab\": \"show\",\n    \"hardwareReplacementsSubtab\": \"default or inherit\",\n    \"smForums\": \"default or inherit\",\n    \"helpWidget\": \"default or inherit\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<string>\",\n      \"format\": \"png\"\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"brandingPolicies",
																":branding_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":branding_policy_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All admins of networks tagged...\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"show\",\n    \"getHelpSubtab\": \"hide\",\n    \"communitySubtab\": \"default or inherit\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"show\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"show\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"default or inherit\",\n    \"firewallInfoSubtab\": \"show\",\n    \"apiDocsSubtab\": \"show\",\n    \"hardwareReplacementsSubtab\": \"show\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"default or inherit\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"preview\": {\n        \"url\": \"<string>\",\n        \"expiresAt\": \"<dateTime>\"\n      }\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Delete a branding policy",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies",
														":branding_policy_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":branding_policy_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete a branding policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/:branding_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"brandingPolicies",
																":branding_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":branding_policy_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "priorities",
									"item": [
										{
											"name": "Return the branding policy IDs of an organization in priority order",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/priorities",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies",
														"priorities"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority)."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/priorities",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"brandingPolicies",
																"priorities"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										},
										{
											"name": "Update the priority ordering of an organization's branding policies.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/priorities",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies",
														"priorities"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update the priority ordering of an organization's branding policies."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies/priorities",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"brandingPolicies",
																"priorities"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"brandingPolicyIds\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the branding policies of an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"brandingPolicies"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the branding policies of an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adminSettings\": {\n      \"appliesTo\": \"All enterprise admins\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"helpSettings\": {\n      \"helpTab\": \"show\",\n      \"getHelpSubtab\": \"default or inherit\",\n      \"communitySubtab\": \"hide\",\n      \"casesSubtab\": \"default or inherit\",\n      \"dataProtectionRequestsSubtab\": \"show\",\n      \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n      \"universalSearchKnowledgeBaseSearch\": \"default or inherit\",\n      \"ciscoMerakiProductDocumentation\": \"<string>\",\n      \"supportContactInfo\": \"<string>\",\n      \"newFeaturesSubtab\": \"show\",\n      \"firewallInfoSubtab\": \"show\",\n      \"apiDocsSubtab\": \"show\",\n      \"hardwareReplacementsSubtab\": \"default or inherit\",\n      \"smForums\": \"default or inherit\",\n      \"helpWidget\": \"default or inherit\"\n    },\n    \"customLogo\": {\n      \"enabled\": \"<boolean>\",\n      \"image\": {\n        \"preview\": {\n          \"url\": \"<string>\",\n          \"expiresAt\": \"<dateTime>\"\n        }\n      }\n    }\n  },\n  {\n    \"name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"adminSettings\": {\n      \"appliesTo\": \"Specific admins...\",\n      \"values\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"helpSettings\": {\n      \"helpTab\": \"show\",\n      \"getHelpSubtab\": \"default or inherit\",\n      \"communitySubtab\": \"default or inherit\",\n      \"casesSubtab\": \"hide\",\n      \"dataProtectionRequestsSubtab\": \"default or inherit\",\n      \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n      \"universalSearchKnowledgeBaseSearch\": \"default or inherit\",\n      \"ciscoMerakiProductDocumentation\": \"<string>\",\n      \"supportContactInfo\": \"<string>\",\n      \"newFeaturesSubtab\": \"default or inherit\",\n      \"firewallInfoSubtab\": \"default or inherit\",\n      \"apiDocsSubtab\": \"show\",\n      \"hardwareReplacementsSubtab\": \"hide\",\n      \"smForums\": \"default or inherit\",\n      \"helpWidget\": \"show\"\n    },\n    \"customLogo\": {\n      \"enabled\": \"<boolean>\",\n      \"image\": {\n        \"preview\": {\n          \"url\": \"<string>\",\n          \"expiresAt\": \"<dateTime>\"\n        }\n      }\n    }\n  }\n]"
										}
									]
								},
								{
									"name": "Add a new branding policy to an organization",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All enterprise admins\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"default or inherit\",\n    \"getHelpSubtab\": \"hide\",\n    \"communitySubtab\": \"hide\",\n    \"casesSubtab\": \"show\",\n    \"dataProtectionRequestsSubtab\": \"show\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"default or inherit\",\n    \"firewallInfoSubtab\": \"show\",\n    \"apiDocsSubtab\": \"hide\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"show\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<string>\",\n      \"format\": \"png\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"brandingPolicies"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Add a new branding policy to an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All enterprise admins\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"default or inherit\",\n    \"getHelpSubtab\": \"hide\",\n    \"communitySubtab\": \"hide\",\n    \"casesSubtab\": \"show\",\n    \"dataProtectionRequestsSubtab\": \"show\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"default or inherit\",\n    \"firewallInfoSubtab\": \"show\",\n    \"apiDocsSubtab\": \"hide\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"show\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"contents\": \"<string>\",\n      \"format\": \"png\"\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/brandingPolicies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"brandingPolicies"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"enabled\": \"<boolean>\",\n  \"adminSettings\": {\n    \"appliesTo\": \"All enterprise admins\",\n    \"values\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"helpSettings\": {\n    \"helpTab\": \"default or inherit\",\n    \"getHelpSubtab\": \"default or inherit\",\n    \"communitySubtab\": \"hide\",\n    \"casesSubtab\": \"hide\",\n    \"dataProtectionRequestsSubtab\": \"hide\",\n    \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n    \"universalSearchKnowledgeBaseSearch\": \"hide\",\n    \"ciscoMerakiProductDocumentation\": \"<string>\",\n    \"supportContactInfo\": \"<string>\",\n    \"newFeaturesSubtab\": \"hide\",\n    \"firewallInfoSubtab\": \"hide\",\n    \"apiDocsSubtab\": \"show\",\n    \"hardwareReplacementsSubtab\": \"hide\",\n    \"smForums\": \"hide\",\n    \"helpWidget\": \"default or inherit\"\n  },\n  \"customLogo\": {\n    \"enabled\": \"<boolean>\",\n    \"image\": {\n      \"preview\": {\n        \"url\": \"<string>\",\n        \"expiresAt\": \"<dateTime>\"\n      }\n    }\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "appliance",
							"item": [
								{
									"name": "vpn",
									"item": [
										{
											"name": "vpnFirewallRules",
											"item": [
												{
													"name": "Return the firewall rules for an organization's site-to-site VPN",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/vpnFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"vpnFirewallRules"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the firewall rules for an organization's site-to-site VPN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/vpnFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"vpnFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the firewall rules of an organization's site-to-site VPN",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/vpnFirewallRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"vpnFirewallRules"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the firewall rules of an organization's site-to-site VPN"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rules\": [\n    {\n      \"policy\": \"deny\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcCidr\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"comment\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ],\n  \"syslogDefaultRule\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/vpnFirewallRules",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"vpnFirewallRules"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"rules\": [\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    },\n    {\n      \"comment\": \"<string>\",\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"srcCidr\": \"<string>\",\n      \"destPort\": \"<string>\",\n      \"destCidr\": \"<string>\",\n      \"syslogEnabled\": \"<boolean>\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "thirdPartyVPNPeers",
											"item": [
												{
													"name": "Return the third party VPN peers for an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/thirdPartyVPNPeers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"thirdPartyVPNPeers"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the third party VPN peers for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/thirdPartyVPNPeers",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"thirdPartyVPNPeers"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"secret\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"des\",\n          \"aes256\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha1\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfmd5\",\n          \"prfsha256\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"tripledes\",\n          \"aes128\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha256\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"secret\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"des\",\n          \"aes192\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha256\",\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"des\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha1\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update the third party VPN peers for an organization",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"aes128\",\n          \"des\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha1\",\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"aes256\"\n        ],\n        \"childAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"aes128\",\n          \"aes256\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"md5\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha256\",\n          \"default\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"null\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha256\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/thirdPartyVPNPeers",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"thirdPartyVPNPeers"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the third party VPN peers for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"aes128\",\n          \"des\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha1\",\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"aes256\"\n        ],\n        \"childAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"secret\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"aes128\",\n          \"aes256\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"md5\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha256\",\n          \"default\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"null\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha256\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/thirdPartyVPNPeers",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"thirdPartyVPNPeers"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"peers\": [\n    {\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"secret\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"des\",\n          \"aes256\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha1\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfmd5\",\n          \"prfsha256\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"tripledes\",\n          \"aes128\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha256\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"name\": \"<string>\",\n      \"publicIp\": \"<string>\",\n      \"remoteId\": \"<string>\",\n      \"localId\": \"<string>\",\n      \"secret\": \"<string>\",\n      \"privateSubnets\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ipsecPolicies\": {\n        \"ikeCipherAlgo\": [\n          \"des\",\n          \"aes192\"\n        ],\n        \"ikeAuthAlgo\": [\n          \"md5\",\n          \"sha256\"\n        ],\n        \"ikePrfAlgo\": [\n          \"prfsha256\",\n          \"prfsha1\"\n        ],\n        \"ikeDiffieHellmanGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"ikeLifetime\": \"<integer>\",\n        \"childCipherAlgo\": [\n          \"null\",\n          \"des\"\n        ],\n        \"childAuthAlgo\": [\n          \"sha1\",\n          \"sha256\"\n        ],\n        \"childPfsGroup\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"childLifetime\": \"<integer>\"\n      },\n      \"ipsecPoliciesPreset\": \"<string>\",\n      \"ikeVersion\": \"1\",\n      \"networkTags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "Show VPN status for networks in an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Show VPN status for networks in an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "stats",
											"item": [
												{
													"name": "Show VPN history stat for networks in an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/stats?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"vpn",
																"stats"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																},
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Show VPN history stat for networks in an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/vpn/stats?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"vpn",
																		"stats"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
																		},
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "usage",
											"item": [
												{
													"name": "byNetwork",
													"item": [
														{
															"name": "Get the sent and received bytes for each uplink of all MX and Z networks within an organization",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/uplinks/usage/byNetwork?t0=<string>&t1=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"uplinks",
																		"usage",
																		"byNetwork"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 14 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Get the sent and received bytes for each uplink of all MX and Z networks within an organization. If more than one device was active during the specified timespan, then the sent and received bytes will be aggregated by interface."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/appliance/uplinks/usage/byNetwork?t0=<string>&t1=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"appliance",
																				"uplinks",
																				"usage",
																				"byNetwork"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 14 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"networkId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"byUplink\": [\n      {\n        \"serial\": \"<string>\",\n        \"interface\": \"<string>\",\n        \"sent\": \"<integer>\",\n        \"received\": \"<integer>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"interface\": \"<string>\",\n        \"sent\": \"<integer>\",\n        \"received\": \"<integer>\"\n      }\n    ]\n  },\n  {\n    \"networkId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"byUplink\": [\n      {\n        \"serial\": \"<string>\",\n        \"interface\": \"<string>\",\n        \"sent\": \"<integer>\",\n        \"received\": \"<integer>\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"interface\": \"<string>\",\n        \"sent\": \"<integer>\",\n        \"received\": \"<integer>\"\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "uplink",
									"item": [
										{
											"name": "statuses",
											"item": [
												{
													"name": "List the uplink status of every Meraki MX and Z series appliances in the organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&networkIds=<string>&serials=<string>&serials=<string>&iccids=<string>&iccids=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"uplink",
																"statuses"
															],
															"query": [
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																},
																{
																	"key": "networkIds",
																	"value": "<string>",
																	"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																},
																{
																	"key": "serials",
																	"value": "<string>",
																	"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																},
																{
																	"key": "iccids",
																	"value": "<string>",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																},
																{
																	"key": "iccids",
																	"value": "<string>",
																	"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the uplink status of every Meraki MX and Z series appliances in the organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/uplink/statuses?perPage=<integer>&startingAfter=<string>&endingBefore=<string>&networkIds=<string>&serials=<string>&iccids=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"uplink",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "networkIds",
																			"value": "<string>",
																			"description": "A list of network IDs. The returned devices will be filtered to only include these networks."
																		},
																		{
																			"key": "serials",
																			"value": "<string>",
																			"description": "A list of serial numbers. The returned devices will be filtered to only include these serials."
																		},
																		{
																			"key": "iccids",
																			"value": "<string>",
																			"description": "A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "security",
									"item": [
										{
											"name": "intrusion",
											"item": [
												{
													"name": "Returns all supported intrusion settings for an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/intrusion",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns all supported intrusion settings for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/intrusion",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Sets supported intrusion settings for an organization",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/intrusion",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"security",
																"intrusion"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Sets supported intrusion settings for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"allowedRules\": [\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"ruleId\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/intrusion",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"security",
																		"intrusion"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "events",
											"item": [
												{
													"name": "List the security events for an organization",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"appliance",
																"security",
																"events"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
																},
																{
																	"key": "perPage",
																	"value": "<integer>",
																	"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																},
																{
																	"key": "startingAfter",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "endingBefore",
																	"value": "<string>",
																	"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																},
																{
																	"key": "sortOrder",
																	"value": "ascending",
																	"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																}
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																}
															]
														},
														"description": "List the security events for an organization"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/appliance/security/events?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&sortOrder=ascending",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"appliance",
																		"security",
																		"events"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
																		},
																		{
																			"key": "perPage",
																			"value": "<integer>",
																			"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
																		},
																		{
																			"key": "startingAfter",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "endingBefore",
																			"value": "<string>",
																			"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
																		},
																		{
																			"key": "sortOrder",
																			"value": "ascending",
																			"description": "Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																},
																{
																	"key": "Link",
																	"value": "<string>",
																	"description": {
																		"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
																		"type": "text/plain"
																	}
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "apiRequests",
							"item": [
								{
									"name": "overview",
									"item": [
										{
											"name": "responseCodes",
											"item": [
												{
													"name": "byInterval",
													"item": [
														{
															"name": "Tracks organizations' API requests by response code across a given time period",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests/overview/responseCodes/byInterval?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>&version=1&operationIds=<string>&operationIds=<string>&sourceIps=<string>&sourceIps=<string>&adminIds=<string>&adminIds=<string>&userAgent=<string>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"apiRequests",
																		"overview",
																		"responseCodes",
																		"byInterval"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated."
																		},
																		{
																			"key": "interval",
																			"value": "<integer>",
																			"description": "The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided."
																		},
																		{
																			"key": "version",
																			"value": "1",
																			"description": "Filter by API version of the endpoint. Allowable values are: [0, 1]"
																		},
																		{
																			"key": "operationIds",
																			"value": "<string>",
																			"description": "Filter by operation ID of the endpoint"
																		},
																		{
																			"key": "operationIds",
																			"value": "<string>",
																			"description": "Filter by operation ID of the endpoint"
																		},
																		{
																			"key": "sourceIps",
																			"value": "<string>",
																			"description": "Filter by source IP that made the API request"
																		},
																		{
																			"key": "sourceIps",
																			"value": "<string>",
																			"description": "Filter by source IP that made the API request"
																		},
																		{
																			"key": "adminIds",
																			"value": "<string>",
																			"description": "Filter by admin ID of user that made the API request"
																		},
																		{
																			"key": "adminIds",
																			"value": "<string>",
																			"description": "Filter by admin ID of user that made the API request"
																		},
																		{
																			"key": "userAgent",
																			"value": "<string>",
																			"description": "Filter by user agent string for API request. This will filter by a complete or partial match."
																		}
																	],
																	"variable": [
																		{
																			"key": ":organization_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Tracks organizations' API requests by response code across a given time period"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests/overview/responseCodes/byInterval?t0=<string>&t1=<string>&timespan=<float>&interval=<integer>&version=1&operationIds=<string>&sourceIps=<string>&adminIds=<string>&userAgent=<string>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"organizations",
																				":organization_id",
																				"apiRequests",
																				"overview",
																				"responseCodes",
																				"byInterval"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated."
																				},
																				{
																					"key": "interval",
																					"value": "<integer>",
																					"description": "The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided."
																				},
																				{
																					"key": "version",
																					"value": "1",
																					"description": "Filter by API version of the endpoint. Allowable values are: [0, 1]"
																				},
																				{
																					"key": "operationIds",
																					"value": "<string>",
																					"description": "Filter by operation ID of the endpoint"
																				},
																				{
																					"key": "sourceIps",
																					"value": "<string>",
																					"description": "Filter by source IP that made the API request"
																				},
																				{
																					"key": "adminIds",
																					"value": "<string>",
																					"description": "Filter by admin ID of user that made the API request"
																				},
																				{
																					"key": "userAgent",
																					"value": "<string>",
																					"description": "Filter by user agent string for API request. This will filter by a complete or partial match."
																				}
																			],
																			"variable": [
																				{
																					"key": ":organization_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"counts\": [\n      {\n        \"code\": \"<integer>\",\n        \"count\": \"<integer>\"\n      },\n      {\n        \"code\": \"<integer>\",\n        \"count\": \"<integer>\"\n      }\n    ]\n  },\n  {\n    \"startTs\": \"<dateTime>\",\n    \"endTs\": \"<dateTime>\",\n    \"counts\": [\n      {\n        \"code\": \"<integer>\",\n        \"count\": \"<integer>\"\n      },\n      {\n        \"code\": \"<integer>\",\n        \"count\": \"<integer>\"\n      }\n    ]\n  }\n]"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "Return an aggregated overview of API requests data",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests/overview?t0=<string>&t1=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"apiRequests",
														"overview"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
														}
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return an aggregated overview of API requests data"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests/overview?t0=<string>&t1=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"apiRequests",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
																}
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"responseCodeCounts\": {\n    \"200\": \"<integer>\",\n    \"201\": \"<integer>\",\n    \"202\": \"<integer>\",\n    \"203\": \"<integer>\",\n    \"204\": \"<integer>\",\n    \"205\": \"<integer>\",\n    \"206\": \"<integer>\",\n    \"207\": \"<integer>\",\n    \"208\": \"<integer>\",\n    \"226\": \"<integer>\",\n    \"300\": \"<integer>\",\n    \"301\": \"<integer>\",\n    \"302\": \"<integer>\",\n    \"303\": \"<integer>\",\n    \"304\": \"<integer>\",\n    \"305\": \"<integer>\",\n    \"306\": \"<integer>\",\n    \"307\": \"<integer>\",\n    \"308\": \"<integer>\",\n    \"400\": \"<integer>\",\n    \"401\": \"<integer>\",\n    \"402\": \"<integer>\",\n    \"403\": \"<integer>\",\n    \"404\": \"<integer>\",\n    \"405\": \"<integer>\",\n    \"406\": \"<integer>\",\n    \"407\": \"<integer>\",\n    \"408\": \"<integer>\",\n    \"409\": \"<integer>\",\n    \"410\": \"<integer>\",\n    \"411\": \"<integer>\",\n    \"412\": \"<integer>\",\n    \"413\": \"<integer>\",\n    \"414\": \"<integer>\",\n    \"415\": \"<integer>\",\n    \"416\": \"<integer>\",\n    \"417\": \"<integer>\",\n    \"421\": \"<integer>\",\n    \"422\": \"<integer>\",\n    \"423\": \"<integer>\",\n    \"424\": \"<integer>\",\n    \"425\": \"<integer>\",\n    \"426\": \"<integer>\",\n    \"428\": \"<integer>\",\n    \"429\": \"<integer>\",\n    \"431\": \"<integer>\",\n    \"451\": \"<integer>\",\n    \"500\": \"<integer>\",\n    \"501\": \"<integer>\",\n    \"502\": \"<integer>\",\n    \"503\": \"<integer>\",\n    \"504\": \"<integer>\",\n    \"505\": \"<integer>\",\n    \"506\": \"<integer>\",\n    \"507\": \"<integer>\",\n    \"508\": \"<integer>\",\n    \"509\": \"<integer>\",\n    \"510\": \"<integer>\",\n    \"511\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "List the API requests made by an organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&:admin_id=<string>&path=<string>&method=GET&responseCode=<integer>&sourceIp=<string>&userAgent=<string>&version=1&operationIds=<string>&operationIds=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"apiRequests"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
												},
												{
													"key": "t1",
													"value": "<string>",
													"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
												},
												{
													"key": "perPage",
													"value": "<integer>",
													"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
												},
												{
													"key": "startingAfter",
													"value": "<string>",
													"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": "endingBefore",
													"value": "<string>",
													"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
												},
												{
													"key": ":admin_id",
													"value": "<string>",
													"description": "Filter the results by the ID of the admin who made the API requests"
												},
												{
													"key": "path",
													"value": "<string>",
													"description": "Filter the results by the path of the API requests"
												},
												{
													"key": "method",
													"value": "GET",
													"description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
												},
												{
													"key": "responseCode",
													"value": "<integer>",
													"description": "Filter the results by the response code of the API requests"
												},
												{
													"key": "sourceIp",
													"value": "<string>",
													"description": "Filter the results by the IP address of the originating API request"
												},
												{
													"key": "userAgent",
													"value": "<string>",
													"description": "Filter the results by the user agent string of the API request"
												},
												{
													"key": "version",
													"value": "1",
													"description": "Filter the results by the API version of the API request"
												},
												{
													"key": "operationIds",
													"value": "<string>",
													"description": "Filter the results by one or more operation IDs for the API request"
												},
												{
													"key": "operationIds",
													"value": "<string>",
													"description": "Filter the results by one or more operation IDs for the API request"
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the API requests made by an organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/apiRequests?t0=<string>&t1=<string>&timespan=<float>&perPage=<integer>&startingAfter=<string>&endingBefore=<string>&:admin_id=<string>&path=<string>&method=GET&responseCode=<integer>&sourceIp=<string>&userAgent=<string>&version=1&operationIds=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"apiRequests"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
														},
														{
															"key": "perPage",
															"value": "<integer>",
															"description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
														},
														{
															"key": "startingAfter",
															"value": "<string>",
															"description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": "endingBefore",
															"value": "<string>",
															"description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
														},
														{
															"key": ":admin_id",
															"value": "<string>",
															"description": "Filter the results by the ID of the admin who made the API requests"
														},
														{
															"key": "path",
															"value": "<string>",
															"description": "Filter the results by the path of the API requests"
														},
														{
															"key": "method",
															"value": "GET",
															"description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
														},
														{
															"key": "responseCode",
															"value": "<integer>",
															"description": "Filter the results by the response code of the API requests"
														},
														{
															"key": "sourceIp",
															"value": "<string>",
															"description": "Filter the results by the IP address of the originating API request"
														},
														{
															"key": "userAgent",
															"value": "<string>",
															"description": "Filter the results by the user agent string of the API request"
														},
														{
															"key": "version",
															"value": "1",
															"description": "Filter the results by the API version of the API request"
														},
														{
															"key": "operationIds",
															"value": "<string>",
															"description": "Filter the results by one or more operation IDs for the API request"
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Link",
													"value": "<string>",
													"description": {
														"content": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"adminId\": \"<string>\",\n    \"method\": \"<string>\",\n    \"host\": \"<string>\",\n    \"path\": \"<string>\",\n    \"queryString\": \"<string>\",\n    \"userAgent\": \"<string>\",\n    \"ts\": \"<dateTime>\",\n    \"responseCode\": \"<integer>\",\n    \"sourceIp\": \"<string>\",\n    \"version\": 0,\n    \"operationId\": \"<string>\"\n  },\n  {\n    \"adminId\": \"<string>\",\n    \"method\": \"<string>\",\n    \"host\": \"<string>\",\n    \"path\": \"<string>\",\n    \"queryString\": \"<string>\",\n    \"userAgent\": \"<string>\",\n    \"ts\": \"<dateTime>\",\n    \"responseCode\": \"<integer>\",\n    \"sourceIp\": \"<string>\",\n    \"version\": 0,\n    \"operationId\": \"<string>\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "alerts",
							"item": [
								{
									"name": "profiles",
									"item": [
										{
											"name": "{alertConfigId}",
											"item": [
												{
													"name": "Update an organization-wide alert config",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"type\": \"wanUtilization\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"wan3\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles/:alert_config_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"alerts",
																"profiles",
																":alert_config_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":alert_config_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an organization-wide alert config"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"type\": \"wanUtilization\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"wan3\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles/:alert_config_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"alerts",
																		"profiles",
																		":alert_config_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":alert_config_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Removes an organization-wide alert config",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles/:alert_config_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"alerts",
																"profiles",
																":alert_config_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":alert_config_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Removes an organization-wide alert config"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles/:alert_config_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"alerts",
																		"profiles",
																		":alert_config_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":alert_config_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List all organization-wide alert configurations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"alerts",
														"profiles"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List all organization-wide alert configurations"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Create an organization-wide alert configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"wanUtilization\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"wan1\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"alerts",
														"profiles"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Create an organization-wide alert configuration"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"wanUtilization\",\n  \"alertCondition\": {\n    \"duration\": \"<integer>\",\n    \"window\": \"<integer>\",\n    \"bit_rate_bps\": \"<integer>\",\n    \"loss_ratio\": \"<float>\",\n    \"latency_ms\": \"<integer>\",\n    \"jitter_ms\": \"<integer>\",\n    \"mos\": \"<float>\",\n    \"interface\": \"wan1\"\n  },\n  \"recipients\": {\n    \"emails\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"httpServerIds\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"networkTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/alerts/profiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"alerts",
																"profiles"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "admins",
							"item": [
								{
									"name": "{adminId}",
									"item": [
										{
											"name": "Update an administrator",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"orgAccess\": \"enterprise\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"monitor-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/admins/:admin_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"admins",
														":admin_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":admin_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update an administrator"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"orgAccess\": \"enterprise\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"monitor-only\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/admins/:admin_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"admins",
																":admin_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":admin_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"orgAccess\": \"enterprise\",\n  \"accountStatus\": \"ok\",\n  \"twoFactorAuthEnabled\": \"<boolean>\",\n  \"hasApiKey\": \"<boolean>\",\n  \"lastActive\": \"<dateTime>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"Cisco SecureX Sign-On\"\n}"
												}
											]
										},
										{
											"name": "Revoke all access for a dashboard administrator within this organization",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/admins/:admin_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"admins",
														":admin_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":admin_id",
															"value": "<string>"
														}
													]
												},
												"description": "Revoke all access for a dashboard administrator within this organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/admins/:admin_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"admins",
																":admin_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":admin_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the dashboard administrators in this organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/admins",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"admins"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "List the dashboard administrators in this organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/admins",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"admins"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"orgAccess\": \"none\",\n    \"accountStatus\": \"locked\",\n    \"twoFactorAuthEnabled\": \"<boolean>\",\n    \"hasApiKey\": \"<boolean>\",\n    \"lastActive\": \"<dateTime>\",\n    \"tags\": [\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"networks\": [\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"authenticationMethod\": \"Cisco SecureX Sign-On\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"orgAccess\": \"enterprise\",\n    \"accountStatus\": \"pending\",\n    \"twoFactorAuthEnabled\": \"<boolean>\",\n    \"hasApiKey\": \"<boolean>\",\n    \"lastActive\": \"<dateTime>\",\n    \"tags\": [\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"networks\": [\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"access\": \"<string>\"\n      }\n    ],\n    \"authenticationMethod\": \"Email\"\n  }\n]"
										}
									]
								},
								{
									"name": "Create a new dashboard administrator",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orgAccess\": \"full\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"guest-ambassador\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"Email\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/admins",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"admins"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create a new dashboard administrator"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"name\": \"<string>\",\n  \"orgAccess\": \"full\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"read-only\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"guest-ambassador\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"Email\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/admins",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"admins"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"orgAccess\": \"enterprise\",\n  \"accountStatus\": \"ok\",\n  \"twoFactorAuthEnabled\": \"<boolean>\",\n  \"hasApiKey\": \"<boolean>\",\n  \"lastActive\": \"<dateTime>\",\n  \"tags\": [\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"networks\": [\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"access\": \"<string>\"\n    }\n  ],\n  \"authenticationMethod\": \"Cisco SecureX Sign-On\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "adaptivePolicy",
							"item": [
								{
									"name": "settings",
									"item": [
										{
											"name": "Returns global adaptive policy settings in an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"settings"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns global adaptive policy settings in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"settings"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update global adaptive policy settings",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabledNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/settings",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"settings"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update global adaptive policy settings"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabledNetworks\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"settings"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "policies",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Return an adaptive policy",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"policies",
																":adaptive_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return an adaptive policy"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"policies",
																		":adaptive_policy_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":adaptive_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update an Adaptive Policy",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"deny\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"policies",
																":adaptive_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update an Adaptive Policy"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"deny\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"policies",
																		":adaptive_policy_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":adaptive_policy_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete an Adaptive Policy",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"policies",
																":adaptive_policy_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Delete an Adaptive Policy"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies/:adaptive_policy_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"policies",
																		":adaptive_policy_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":adaptive_policy_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List adaptive policies in an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"policies"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List adaptive policies in an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"policies"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Add an Adaptive Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"deny\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"policies"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Add an Adaptive Policy"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sourceGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"destinationGroup\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"sgt\": \"<integer>\"\n  },\n  \"acls\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"lastEntryRule\": \"deny\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/policies",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"policies"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "overview",
									"item": [
										{
											"name": "Returns adaptive policy aggregate statistics for an organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/overview",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"overview"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Returns adaptive policy aggregate statistics for an organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/overview",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"overview"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"counts\": {\n    \"groups\": \"<integer>\",\n    \"customGroups\": \"<integer>\",\n    \"customAcls\": \"<integer>\",\n    \"policies\": \"<integer>\",\n    \"denyPolicies\": \"<integer>\",\n    \"allowPolicies\": \"<integer>\",\n    \"policyObjects\": \"<integer>\"\n  },\n  \"limits\": {\n    \"customGroups\": \"<integer>\",\n    \"rulesInAnAcl\": \"<integer>\",\n    \"aclsInAPolicy\": \"<integer>\",\n    \"policyObjects\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "groups",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Returns an adaptive policy group",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"groups",
																":adaptive_policy_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns an adaptive policy group"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"groups",
																		":adaptive_policy_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":adaptive_policy_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Updates an adaptive policy group",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"groups",
																":adaptive_policy_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates an adaptive policy group. If updating \"Infrastructure\", only the SGT is allowed. Cannot update \"Unknown\"."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"groups",
																		":adaptive_policy_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":adaptive_policy_group_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Deletes the specified adaptive policy group and any associated policies and references",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"groups",
																":adaptive_policy_group_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":adaptive_policy_group_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Deletes the specified adaptive policy group and any associated policies and references"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups/:adaptive_policy_group_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"groups",
																		":adaptive_policy_group_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List adaptive policy groups in a organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"groups"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List adaptive policy groups in a organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"groups"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[]"
												}
											]
										},
										{
											"name": "Creates a new adaptive policy group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"groups"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates a new adaptive policy group"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"sgt\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"policyObjects\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/groups",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"groups"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "acls",
									"item": [
										{
											"name": "{aclId}",
											"item": [
												{
													"name": "Returns the adaptive policy ACL information",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"acls",
																":acl_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":acl_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns the adaptive policy ACL information"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"acls",
																		":acl_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":acl_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"aclId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ipVersion\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
														}
													]
												},
												{
													"name": "Updates an adaptive policy ACL",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"ipVersion\": \"ipv6\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"acls",
																":acl_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":acl_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Updates an adaptive policy ACL"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"udp\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"ipVersion\": \"ipv6\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"acls",
																		":acl_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":acl_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"aclId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ipVersion\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
														}
													]
												},
												{
													"name": "Deletes the specified adaptive policy ACL",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"acls",
																":acl_id"
															],
															"variable": [
																{
																	"key": ":organization_id",
																	"value": "<string>"
																},
																{
																	"key": ":acl_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls/:acl_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"adaptivePolicy",
																		"acls",
																		":acl_id"
																	],
																	"variable": [
																		{
																			"key": ":organization_id"
																		},
																		{
																			"key": ":acl_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List adaptive policy ACLs in a organization",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"acls"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "List adaptive policy ACLs in a organization"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"acls"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"aclId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ipVersion\": \"<string>\",\n    \"rules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"srcPort\": \"<string>\",\n        \"dstPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"srcPort\": \"<string>\",\n        \"dstPort\": \"<string>\"\n      }\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  {\n    \"aclId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"ipVersion\": \"<string>\",\n    \"rules\": [\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"srcPort\": \"<string>\",\n        \"dstPort\": \"<string>\"\n      },\n      {\n        \"policy\": \"<string>\",\n        \"protocol\": \"<string>\",\n        \"srcPort\": \"<string>\",\n        \"dstPort\": \"<string>\"\n      }\n    ],\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n]"
												}
											]
										},
										{
											"name": "Creates new adaptive policy ACL",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"icmp\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"ipVersion\": \"any\",\n  \"description\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"adaptivePolicy",
														"acls"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														}
													]
												},
												"description": "Creates new adaptive policy ACL"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"any\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"allow\",\n      \"protocol\": \"icmp\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"ipVersion\": \"any\",\n  \"description\": \"\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/adaptivePolicy/acls",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"adaptivePolicy",
																"acls"
															],
															"variable": [
																{
																	"key": ":organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"aclId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"ipVersion\": \"<string>\",\n  \"rules\": [\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    },\n    {\n      \"policy\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"srcPort\": \"<string>\",\n      \"dstPort\": \"<string>\"\n    }\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "actionBatches",
							"item": [
								{
									"name": "{actionBatchId}",
									"item": [
										{
											"name": "Return an action batch",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"actionBatches",
														":action_batch_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":action_batch_id",
															"value": "<string>"
														}
													]
												},
												"description": "Return an action batch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"actionBatches",
																":action_batch_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":action_batch_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\"\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\",\n  \"status\": {\n    \"createdResources\": [\n      {\n        \"id\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"completed\": \"<boolean>\",\n    \"failed\": \"<boolean>\",\n    \"errors\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
												}
											]
										},
										{
											"name": "Delete an action batch",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"actionBatches",
														":action_batch_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":action_batch_id",
															"value": "<string>"
														}
													]
												},
												"description": "Delete an action batch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Cisco-Meraki-API-Key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"actionBatches",
																":action_batch_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":action_batch_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update an action batch",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"actionBatches",
														":action_batch_id"
													],
													"variable": [
														{
															"key": ":organization_id",
															"value": "<string>"
														},
														{
															"key": ":action_batch_id",
															"value": "<string>"
														}
													]
												},
												"description": "Update an action batch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches/:action_batch_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"actionBatches",
																":action_batch_id"
															],
															"variable": [
																{
																	"key": ":organization_id"
																},
																{
																	"key": ":action_batch_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "Create an action batch",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": {}\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": {}\n    }\n  ],\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"actionBatches"
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Create an action batch"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": {}\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\",\n      \"body\": {}\n    }\n  ],\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"actionBatches"
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"actions\": [\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\"\n    },\n    {\n      \"resource\": \"<string>\",\n      \"operation\": \"<string>\"\n    }\n  ],\n  \"id\": \"<string>\",\n  \"organizationId\": \"<string>\",\n  \"confirmed\": \"<boolean>\",\n  \"synchronous\": \"<boolean>\",\n  \"status\": {\n    \"createdResources\": [\n      {\n        \"id\": \"<string>\",\n        \"uri\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"uri\": \"<string>\"\n      }\n    ],\n    \"completed\": \"<boolean>\",\n    \"failed\": \"<boolean>\",\n    \"errors\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "Return the list of action batches in the organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches?status=failed",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"actionBatches"
											],
											"query": [
												{
													"key": "status",
													"value": "failed",
													"description": "Filter batches by status. Valid types are pending, completed, and failed."
												}
											],
											"variable": [
												{
													"key": ":organization_id",
													"value": "<string>"
												}
											]
										},
										"description": "Return the list of action batches in the organization"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/organizations/:organization_id/actionBatches?status=failed",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"actionBatches"
													],
													"query": [
														{
															"key": "status",
															"value": "failed",
															"description": "Filter batches by status. Valid types are pending, completed, and failed."
														}
													],
													"variable": [
														{
															"key": ":organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "Return an organization",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{hostname}}/organizations/:organization_id",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"key": ":organization_id",
											"value": "<string>"
										}
									]
								},
								"description": "Return an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": ":organization_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"licensing\": {\n    \"model\": \"per-device\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"<string>\"\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Update an organization",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{hostname}}/organizations/:organization_id",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"key": ":organization_id",
											"value": "<string>"
										}
									]
								},
								"description": "Update an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": ":organization_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"licensing\": {\n    \"model\": \"per-device\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"<string>\"\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Delete an organization",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{hostname}}/organizations/:organization_id",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"key": ":organization_id",
											"value": "<string>"
										}
									]
								},
								"description": "Delete an organization"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/organizations/:organization_id",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": ":organization_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List the organizations that the user has privileges on",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{hostname}}/organizations",
							"protocol": "https",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "List the organizations that the user has privileges on"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Cisco-Meraki-API-Key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "https://{{hostname}}/organizations",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"api\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"licensing\": {\n      \"model\": \"per-device\"\n    },\n    \"cloud\": {\n      \"region\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"management\": {\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"api\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"licensing\": {\n      \"model\": \"per-device\"\n    },\n    \"cloud\": {\n      \"region\": {\n        \"name\": \"<string>\"\n      }\n    },\n    \"management\": {\n      \"details\": [\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{hostname}}/organizations",
							"protocol": "https",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "Create a new organization"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Cisco-Meraki-API-Key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{hostname}}/organizations",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"url\": \"<string>\",\n  \"api\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"licensing\": {\n    \"model\": \"per-device\"\n  },\n  \"cloud\": {\n    \"region\": {\n      \"name\": \"<string>\"\n    }\n  },\n  \"management\": {\n    \"details\": [\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "administered",
			"item": [
				{
					"name": "identities",
					"item": [
						{
							"name": "me",
							"item": [
								{
									"name": "Returns the identity of the current user.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/administered/identities/me",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"administered",
												"identities",
												"me"
											]
										},
										"description": "Returns the identity of the current user."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/administered/identities/me",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"administered",
														"identities",
														"me"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"lastUsedDashboardAt\": \"<dateTime>\",\n  \"authentication\": {\n    \"mode\": \"<string>\",\n    \"api\": {\n      \"key\": {\n        \"created\": \"<boolean>\"\n      }\n    },\n    \"twoFactor\": {\n      \"enabled\": \"<boolean>\"\n    },\n    \"saml\": {\n      \"enabled\": \"<boolean>\"\n    }\n  }\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "devices",
			"item": [
				{
					"name": "{serial}",
					"item": [
						{
							"name": "wireless",
							"item": [
								{
									"name": "status",
									"item": [
										{
											"name": "Return the SSID statuses of an access point",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/wireless/status",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"status"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Return the SSID statuses of an access point"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/status",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"status"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"basicServiceSets\": [\n    {\n      \"ssidName\": \"<string>\",\n      \"ssidNumber\": \"<integer>\",\n      \"enabled\": \"<boolean>\",\n      \"band\": \"<string>\",\n      \"bssid\": \"<string>\",\n      \"channel\": \"<integer>\",\n      \"channelWidth\": \"<string>\",\n      \"power\": \"<string>\",\n      \"visible\": \"<boolean>\",\n      \"broadcasting\": \"<boolean>\"\n    },\n    {\n      \"ssidName\": \"<string>\",\n      \"ssidNumber\": \"<integer>\",\n      \"enabled\": \"<boolean>\",\n      \"band\": \"<string>\",\n      \"bssid\": \"<string>\",\n      \"channel\": \"<integer>\",\n      \"channelWidth\": \"<string>\",\n      \"power\": \"<string>\",\n      \"visible\": \"<boolean>\",\n      \"broadcasting\": \"<boolean>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "radio",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Return the radio settings of a device",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/radio/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the radio settings of a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/wireless/radio/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update the radio settings of a device",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 5,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 128,\n    \"channelWidth\": 20,\n    \"targetPower\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/radio/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the radio settings of a device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 5,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 128,\n    \"channelWidth\": 20,\n    \"targetPower\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/wireless/radio/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "latencyStats",
									"item": [
										{
											"name": "Aggregated latency info for a given AP on this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"latencyStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID"
														},
														{
															"key": "vlan",
															"value": "<integer>",
															"description": "Filter results by VLAN"
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP Tag"
														},
														{
															"key": "fields",
															"value": "<string>",
															"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
														}
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Aggregated latency info for a given AP on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/latencyStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>&fields=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"latencyStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																},
																{
																	"key": "fields",
																	"value": "<string>",
																	"description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
																}
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "connectionStats",
									"item": [
										{
											"name": "Aggregated connectivity info for a given AP on this network",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"wireless",
														"connectionStats"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
														},
														{
															"key": "band",
															"value": "5",
															"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
														},
														{
															"key": "ssid",
															"value": "<integer>",
															"description": "Filter results by SSID"
														},
														{
															"key": "vlan",
															"value": "<integer>",
															"description": "Filter results by VLAN"
														},
														{
															"key": "apTag",
															"value": "<string>",
															"description": "Filter results by AP Tag"
														}
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Aggregated connectivity info for a given AP on this network"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/connectionStats?t0=<string>&t1=<string>&timespan=<float>&band=5&ssid=<integer>&vlan=<integer>&apTag=<string>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"connectionStats"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
																},
																{
																	"key": "band",
																	"value": "5",
																	"description": "Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information."
																},
																{
																	"key": "ssid",
																	"value": "<integer>",
																	"description": "Filter results by SSID"
																},
																{
																	"key": "vlan",
																	"value": "<integer>",
																	"description": "Filter results by VLAN"
																},
																{
																	"key": "apTag",
																	"value": "<string>",
																	"description": "Filter results by AP Tag"
																}
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"serial\": \"<string>\",\n  \"connectionStats\": {\n    \"assoc\": \"<integer>\",\n    \"auth\": \"<integer>\",\n    \"dhcp\": \"<integer>\",\n    \"dns\": \"<integer>\",\n    \"success\": \"<integer>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "bluetooth",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Update the bluetooth settings for a wireless device",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uuid\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/bluetooth/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the bluetooth settings for a wireless device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uuid\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/wireless/bluetooth/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"uuid\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}"
														}
													]
												},
												{
													"name": "Return the bluetooth settings for a wireless device",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/wireless/bluetooth/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"wireless",
																"bluetooth",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the bluetooth settings for a wireless device"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/wireless/bluetooth/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"wireless",
																		"bluetooth",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"uuid\": \"<string>\",\n  \"major\": \"<integer>\",\n  \"minor\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "switch",
							"item": [
								{
									"name": "warmSpare",
									"item": [
										{
											"name": "Return warm spare configuration for a switch",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/switch/warmSpare",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"warmSpare"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Return warm spare configuration for a switch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/warmSpare",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"warmSpare"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update warm spare configuration for a switch",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/switch/warmSpare",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"warmSpare"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"spareSerial\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/warmSpare",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"warmSpare"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "routing",
									"item": [
										{
											"name": "staticRoutes",
											"item": [
												{
													"name": "{staticRouteId}",
													"item": [
														{
															"name": "Return a layer 3 static route for a switch",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":static_route_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return a layer 3 static route for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"staticRoutes",
																				":static_route_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":static_route_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"staticRouteId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}"
																}
															]
														},
														{
															"name": "Update a layer 3 static route for a switch",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":static_route_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update a layer 3 static route for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"staticRoutes",
																				":static_route_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":static_route_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Delete a layer 3 static route for a switch",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes",
																		":static_route_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":static_route_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete a layer 3 static route for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes/:static_route_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"staticRoutes",
																				":static_route_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":static_route_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List layer 3 static routes for a switch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "List layer 3 static routes for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												},
												{
													"name": "Create a layer 3 static route for a switch",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"staticRoutes"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Create a layer 3 static route for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"subnet\": \"<string>\",\n  \"nextHopIp\": \"<string>\",\n  \"name\": \"<string>\",\n  \"advertiseViaOspfEnabled\": \"<boolean>\",\n  \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/staticRoutes",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"staticRoutes"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "interfaces",
											"item": [
												{
													"name": "{interfaceId}",
													"item": [
														{
															"name": "dhcp",
															"item": [
																{
																	"name": "Return a layer 3 interface DHCP configuration for a switch",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id/dhcp",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interface_id",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": ":serial",
																					"value": "<string>"
																				},
																				{
																					"key": ":interface_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return a layer 3 interface DHCP configuration for a switch"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id/dhcp",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"devices",
																						":serial",
																						"switch",
																						"routing",
																						"interfaces",
																						":interface_id",
																						"dhcp"
																					],
																					"variable": [
																						{
																							"key": ":serial"
																						},
																						{
																							"key": ":interface_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Update a layer 3 interface DHCP configuration for a switch",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"dhcpMode\": \"dhcpDisabled\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"12 hours\",\n  \"dnsNameserversOption\": \"openDns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"ip\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"integer\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id/dhcp",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interface_id",
																				"dhcp"
																			],
																			"variable": [
																				{
																					"key": ":serial",
																					"value": "<string>"
																				},
																				{
																					"key": ":interface_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Update a layer 3 interface DHCP configuration for a switch"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"dhcpMode\": \"dhcpDisabled\",\n  \"dhcpRelayServerIps\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"dhcpLeaseTime\": \"12 hours\",\n  \"dnsNameserversOption\": \"openDns\",\n  \"dnsCustomNameservers\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"bootOptionsEnabled\": \"<boolean>\",\n  \"bootNextServer\": \"<string>\",\n  \"bootFileName\": \"<string>\",\n  \"dhcpOptions\": [\n    {\n      \"code\": \"<string>\",\n      \"type\": \"ip\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"type\": \"integer\",\n      \"value\": \"<string>\"\n    }\n  ],\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"ip\": \"<string>\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id/dhcp",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"devices",
																						":serial",
																						"switch",
																						"routing",
																						"interfaces",
																						":interface_id",
																						"dhcp"
																					],
																					"variable": [
																						{
																							"key": ":serial"
																						},
																						{
																							"key": ":interface_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																}
															]
														},
														{
															"name": "Return a layer 3 interface for a switch",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interface_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":interface_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return a layer 3 interface for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interface_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":interface_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"address\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Update a layer 3 interface for a switch",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interface_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":interface_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Update a layer 3 interface for a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interface_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":interface_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"address\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}"
																}
															]
														},
														{
															"name": "Delete a layer 3 interface from the switch",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces",
																		":interface_id"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		},
																		{
																			"key": ":interface_id",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Delete a layer 3 interface from the switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces/:interface_id",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"routing",
																				"interfaces",
																				":interface_id"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				},
																				{
																					"key": ":interface_id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List layer 3 interfaces for a switch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "List layer 3 interfaces for a switch. Those for a stack may be found under switch stack routing."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"interfaceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"interfaceIp\": \"<string>\",\n    \"multicastRouting\": \"<string>\",\n    \"vlanId\": \"<integer>\",\n    \"defaultGateway\": \"<string>\",\n    \"ospfSettings\": {\n      \"area\": \"<string>\",\n      \"cost\": \"<integer>\",\n      \"isPassiveEnabled\": \"<boolean>\"\n    },\n    \"ospfV3\": {\n      \"area\": \"<string>\",\n      \"cost\": \"<integer>\",\n      \"isPassiveEnabled\": \"<boolean>\"\n    },\n    \"ipv6\": {\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  },\n  {\n    \"interfaceId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"subnet\": \"<string>\",\n    \"interfaceIp\": \"<string>\",\n    \"multicastRouting\": \"<string>\",\n    \"vlanId\": \"<integer>\",\n    \"defaultGateway\": \"<string>\",\n    \"ospfSettings\": {\n      \"area\": \"<string>\",\n      \"cost\": \"<integer>\",\n      \"isPassiveEnabled\": \"<boolean>\"\n    },\n    \"ospfV3\": {\n      \"area\": \"<string>\",\n      \"cost\": \"<integer>\",\n      \"isPassiveEnabled\": \"<boolean>\"\n    },\n    \"ipv6\": {\n      \"assignmentMode\": \"<string>\",\n      \"address\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"gateway\": \"<string>\"\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "Create a layer 3 interface for a switch",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"routing",
																"interfaces"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Create a layer 3 interface for a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"disabled\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"address\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/routing/interfaces",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"routing",
																		"interfaces"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaceId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"subnet\": \"<string>\",\n  \"interfaceIp\": \"<string>\",\n  \"multicastRouting\": \"<string>\",\n  \"vlanId\": \"<integer>\",\n  \"defaultGateway\": \"<string>\",\n  \"ospfSettings\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ospfV3\": {\n    \"area\": \"<string>\",\n    \"cost\": \"<integer>\",\n    \"isPassiveEnabled\": \"<boolean>\"\n  },\n  \"ipv6\": {\n    \"assignmentMode\": \"<string>\",\n    \"address\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"gateway\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "ports",
									"item": [
										{
											"name": "{portId}",
											"item": [
												{
													"name": "Return a switch port",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/ports/:port_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																":port_id"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																},
																{
																	"key": ":port_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a switch port"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/ports/:port_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		":port_id"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		},
																		{
																			"key": ":port_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"portId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"root guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"linkNegotiationCapabilities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"peerSgtCapable\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update a switch port",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Custom access policy\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"peerSgtCapable\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/ports/:port_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																":port_id"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																},
																{
																	"key": ":port_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Update a switch port"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"loop guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Custom access policy\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"peerSgtCapable\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/ports/:port_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		":port_id"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		},
																		{
																			"key": ":port_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"portId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"enabled\": \"<boolean>\",\n  \"poeEnabled\": \"<boolean>\",\n  \"type\": \"access\",\n  \"vlan\": \"<integer>\",\n  \"voiceVlan\": \"<integer>\",\n  \"allowedVlans\": \"<string>\",\n  \"isolationEnabled\": \"<boolean>\",\n  \"rstpEnabled\": \"<boolean>\",\n  \"stpGuard\": \"root guard\",\n  \"linkNegotiation\": \"<string>\",\n  \"linkNegotiationCapabilities\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"portScheduleId\": \"<string>\",\n  \"udld\": \"Alert only\",\n  \"accessPolicyType\": \"Open\",\n  \"accessPolicyNumber\": \"<integer>\",\n  \"macAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stickyMacAllowListLimit\": \"<integer>\",\n  \"stormControlEnabled\": \"<boolean>\",\n  \"adaptivePolicyGroupId\": \"<string>\",\n  \"peerSgtCapable\": \"<boolean>\",\n  \"flexibleStackingEnabled\": \"<boolean>\",\n  \"daiTrusted\": \"<boolean>\",\n  \"profile\": {\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"iname\": \"<string>\"\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "statuses",
											"item": [
												{
													"name": "packets",
													"item": [
														{
															"name": "Return the packet counters for all the ports of a switch",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/ports/statuses/packets?t0=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		"statuses",
																		"packets"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return the packet counters for all the ports of a switch"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/switch/ports/statuses/packets?t0=<string>&timespan=<float>",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"switch",
																				"ports",
																				"statuses",
																				"packets"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 1 day from today."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day."
																				}
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[]"
																}
															]
														}
													]
												},
												{
													"name": "Return the status for all the ports of a switch",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/ports/statuses?t0=<string>&timespan=<float>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																"statuses"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																}
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the status for all the ports of a switch"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/ports/statuses?t0=<string>&timespan=<float>",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
																		}
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"portId\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"status\": \"Disabled\",\n    \"isUplink\": \"<boolean>\",\n    \"errors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"warnings\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"speed\": \"\",\n    \"duplex\": \"\",\n    \"usageInKb\": {\n      \"total\": \"<integer>\",\n      \"sent\": \"<integer>\",\n      \"recv\": \"<integer>\"\n    },\n    \"cdp\": {\n      \"systemName\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"deviceId\": \"<string>\",\n      \"portId\": \"<string>\",\n      \"nativeVlan\": \"<integer>\",\n      \"address\": \"<string>\",\n      \"managementAddress\": \"<string>\",\n      \"version\": \"<string>\",\n      \"vtpManagementDomain\": \"<string>\",\n      \"capabilities\": \"<string>\"\n    },\n    \"lldp\": {\n      \"systemName\": \"<string>\",\n      \"systemDescription\": \"<string>\",\n      \"chassisId\": \"<string>\",\n      \"portId\": \"<string>\",\n      \"managementVlan\": \"<integer>\",\n      \"portVlan\": \"<integer>\",\n      \"managementAddress\": \"<string>\",\n      \"portDescription\": \"<string>\",\n      \"systemCapabilities\": \"<string>\"\n    },\n    \"clientCount\": \"<integer>\",\n    \"powerUsageInWh\": \"<float>\",\n    \"trafficInKbps\": {\n      \"total\": \"<float>\",\n      \"sent\": \"<float>\",\n      \"recv\": \"<float>\"\n    },\n    \"securePort\": {\n      \"enabled\": \"<boolean>\",\n      \"active\": \"<boolean>\",\n      \"authenticationStatus\": \"Authentication successful\",\n      \"configOverrides\": {\n        \"type\": \"trunk\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\"\n      }\n    }\n  },\n  {\n    \"portId\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"status\": \"Connected\",\n    \"isUplink\": \"<boolean>\",\n    \"errors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"warnings\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"speed\": \"40 Gbps\",\n    \"duplex\": \"full\",\n    \"usageInKb\": {\n      \"total\": \"<integer>\",\n      \"sent\": \"<integer>\",\n      \"recv\": \"<integer>\"\n    },\n    \"cdp\": {\n      \"systemName\": \"<string>\",\n      \"platform\": \"<string>\",\n      \"deviceId\": \"<string>\",\n      \"portId\": \"<string>\",\n      \"nativeVlan\": \"<integer>\",\n      \"address\": \"<string>\",\n      \"managementAddress\": \"<string>\",\n      \"version\": \"<string>\",\n      \"vtpManagementDomain\": \"<string>\",\n      \"capabilities\": \"<string>\"\n    },\n    \"lldp\": {\n      \"systemName\": \"<string>\",\n      \"systemDescription\": \"<string>\",\n      \"chassisId\": \"<string>\",\n      \"portId\": \"<string>\",\n      \"managementVlan\": \"<integer>\",\n      \"portVlan\": \"<integer>\",\n      \"managementAddress\": \"<string>\",\n      \"portDescription\": \"<string>\",\n      \"systemCapabilities\": \"<string>\"\n    },\n    \"clientCount\": \"<integer>\",\n    \"powerUsageInWh\": \"<float>\",\n    \"trafficInKbps\": {\n      \"total\": \"<float>\",\n      \"sent\": \"<float>\",\n      \"recv\": \"<float>\"\n    },\n    \"securePort\": {\n      \"enabled\": \"<boolean>\",\n      \"active\": \"<boolean>\",\n      \"authenticationStatus\": \"Authentication timed out\",\n      \"configOverrides\": {\n        \"type\": \"access\",\n        \"vlan\": \"<integer>\",\n        \"voiceVlan\": \"<integer>\",\n        \"allowedVlans\": \"<string>\"\n      }\n    }\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "cycle",
											"item": [
												{
													"name": "Cycle a set of switch ports",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/ports/cycle",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports",
																"cycle"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Cycle a set of switch ports"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/switch/ports/cycle",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"switch",
																		"ports",
																		"cycle"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ports\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "List the switch ports for a switch",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/switch/ports",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"switch",
														"ports"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "List the switch ports for a switch"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/switch/ports",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"switch",
																"ports"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"portId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enabled\": \"<boolean>\",\n    \"poeEnabled\": \"<boolean>\",\n    \"type\": \"trunk\",\n    \"vlan\": \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"isolationEnabled\": \"<boolean>\",\n    \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\": \"loop guard\",\n    \"linkNegotiation\": \"<string>\",\n    \"linkNegotiationCapabilities\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"portScheduleId\": \"<string>\",\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Custom access policy\",\n    \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\": \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n    \"adaptivePolicyGroupId\": \"<string>\",\n    \"peerSgtCapable\": \"<boolean>\",\n    \"flexibleStackingEnabled\": \"<boolean>\",\n    \"daiTrusted\": \"<boolean>\",\n    \"profile\": {\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"iname\": \"<string>\"\n    }\n  },\n  {\n    \"portId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"enabled\": \"<boolean>\",\n    \"poeEnabled\": \"<boolean>\",\n    \"type\": \"access\",\n    \"vlan\": \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n    \"allowedVlans\": \"<string>\",\n    \"isolationEnabled\": \"<boolean>\",\n    \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\": \"root guard\",\n    \"linkNegotiation\": \"<string>\",\n    \"linkNegotiationCapabilities\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"portScheduleId\": \"<string>\",\n    \"udld\": \"Alert only\",\n    \"accessPolicyType\": \"Sticky MAC allow list\",\n    \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\": \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n    \"adaptivePolicyGroupId\": \"<string>\",\n    \"peerSgtCapable\": \"<boolean>\",\n    \"flexibleStackingEnabled\": \"<boolean>\",\n    \"daiTrusted\": \"<boolean>\",\n    \"profile\": {\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<string>\",\n      \"iname\": \"<string>\"\n    }\n  }\n]"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "sensor",
							"item": [
								{
									"name": "relationships",
									"item": [
										{
											"name": "List the sensor roles for a given sensor or camera device.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/sensor/relationships",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "List the sensor roles for a given sensor or camera device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/sensor/relationships",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"livestream\": {\n      \"relatedDevices\": [\n        {\n          \"serial\": \"<string>\",\n          \"productType\": \"camera\"\n        },\n        {\n          \"serial\": \"<string>\",\n          \"productType\": \"camera\"\n        }\n      ]\n    }\n  },\n  {\n    \"livestream\": {\n      \"relatedDevices\": [\n        {\n          \"serial\": \"<string>\",\n          \"productType\": \"sensor\"\n        },\n        {\n          \"serial\": \"<string>\",\n          \"productType\": \"camera\"\n        }\n      ]\n    }\n  }\n]"
												}
											]
										},
										{
											"name": "Assign one or more sensor roles to a given sensor or camera device.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/sensor/relationships",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"sensor",
														"relationships"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Assign one or more sensor roles to a given sensor or camera device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"<string>\"\n      },\n      {\n        \"serial\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/sensor/relationships",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"sensor",
																"relationships"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"livestream\": {\n    \"relatedDevices\": [\n      {\n        \"serial\": \"<string>\",\n        \"productType\": \"camera\"\n      },\n      {\n        \"serial\": \"<string>\",\n        \"productType\": \"camera\"\n      }\n    ]\n  }\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "reboot",
							"item": [
								{
									"name": "Reboot a device",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/reboot",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"reboot"
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "Reboot a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/reboot",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"reboot"
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "managementInterface",
							"item": [
								{
									"name": "Return the management interface settings for a device",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/managementInterface",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"managementInterface"
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "Return the management interface settings for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/managementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"managementInterface"
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Update the management interface settings for a device",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"wan1\": {\n    \"wanEnabled\": \"not configured\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"enabled\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/managementInterface",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"managementInterface"
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "Update the management interface settings for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"wan1\": {\n    \"wanEnabled\": \"not configured\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  },\n  \"wan2\": {\n    \"wanEnabled\": \"enabled\",\n    \"usingStaticIp\": \"<boolean>\",\n    \"staticIp\": \"<string>\",\n    \"staticGatewayIp\": \"<string>\",\n    \"staticSubnetMask\": \"<string>\",\n    \"staticDns\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"vlan\": \"<integer>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/managementInterface",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"managementInterface"
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "lossAndLatencyHistory",
							"item": [
								{
									"name": "Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for a wired network device.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/lossAndLatencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&uplink=cellular&ip=<string>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"lossAndLatencyHistory"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
												},
												{
													"key": "t1",
													"value": "<string>",
													"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
												},
												{
													"key": "resolution",
													"value": "<integer>",
													"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
												},
												{
													"key": "uplink",
													"value": "cellular",
													"description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, wan3, cellular. The default is wan1."
												},
												{
													"key": "ip",
													"value": "<string>",
													"description": "(Required) The destination IP used to obtain the requested stats. This is required."
												}
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for a wired network device."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/lossAndLatencyHistory?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&uplink=cellular&ip=<string>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"lossAndLatencyHistory"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 60 days from today."
														},
														{
															"key": "t1",
															"value": "<string>",
															"description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														},
														{
															"key": "resolution",
															"value": "<integer>",
															"description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
														},
														{
															"key": "uplink",
															"value": "cellular",
															"description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, wan3, cellular. The default is wan1."
														},
														{
															"key": "ip",
															"value": "<string>",
															"description": "(Required) The destination IP used to obtain the requested stats. This is required."
														}
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "lldpCdp",
							"item": [
								{
									"name": "List LLDP and CDP information for a device",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/lldpCdp",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"lldpCdp"
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "List LLDP and CDP information for a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/lldpCdp",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"lldpCdp"
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "liveTools",
							"item": [
								{
									"name": "pingDevice",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Return a ping device job",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/liveTools/pingDevice/:ping_device_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"pingDevice",
																":ping_device_id"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																},
																{
																	"key": ":ping_device_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a ping device job. Latency unit in response is in milliseconds. Size is in bytes."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/liveTools/pingDevice/:ping_device_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"liveTools",
																		"pingDevice",
																		":ping_device_id"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		},
																		{
																			"key": ":ping_device_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pingId\": \"<string>\",\n  \"url\": \"<string>\",\n  \"request\": {\n    \"serial\": \"<string>\",\n    \"target\": \"<string>\",\n    \"count\": \"<integer>\"\n  },\n  \"status\": \"<string>\",\n  \"results\": {\n    \"sent\": \"<integer>\",\n    \"received\": \"<integer>\",\n    \"loss\": {\n      \"percentage\": \"<float>\"\n    },\n    \"latencies\": {\n      \"minimum\": \"<float>\",\n      \"average\": \"<float>\",\n      \"maximum\": \"<float>\"\n    },\n    \"replies\": [\n      {\n        \"sequenceId\": \"<integer>\",\n        \"size\": \"<integer>\",\n        \"latency\": \"<float>\"\n      },\n      {\n        \"sequenceId\": \"<integer>\",\n        \"size\": \"<integer>\",\n        \"latency\": \"<float>\"\n      }\n    ]\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Enqueue a job to check connectivity status to the device",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"count\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/liveTools/pingDevice",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"pingDevice"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Enqueue a job to check connectivity status to the device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/liveTools/pingDevice",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"pingDevice"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"pingId\": \"<string>\",\n  \"url\": \"<string>\",\n  \"request\": {\n    \"serial\": \"<string>\",\n    \"target\": \"<string>\",\n    \"count\": \"<integer>\"\n  },\n  \"status\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "ping",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Return a ping job",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/liveTools/ping/:ping_device_id",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"ping",
																":ping_device_id"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																},
																{
																	"key": ":ping_device_id",
																	"value": "<string>"
																}
															]
														},
														"description": "Return a ping job. Latency unit in response is in milliseconds. Size is in bytes."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/liveTools/ping/:ping_device_id",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"liveTools",
																		"ping",
																		":ping_device_id"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		},
																		{
																			"key": ":ping_device_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"pingId\": \"<string>\",\n  \"url\": \"<string>\",\n  \"request\": {\n    \"serial\": \"<string>\",\n    \"target\": \"<string>\",\n    \"count\": \"<integer>\"\n  },\n  \"status\": \"<string>\",\n  \"results\": {\n    \"sent\": \"<integer>\",\n    \"received\": \"<integer>\",\n    \"loss\": {\n      \"percentage\": \"<float>\"\n    },\n    \"latencies\": {\n      \"minimum\": \"<float>\",\n      \"average\": \"<float>\",\n      \"maximum\": \"<float>\"\n    },\n    \"replies\": [\n      {\n        \"sequenceId\": \"<integer>\",\n        \"size\": \"<integer>\",\n        \"latency\": \"<float>\"\n      },\n      {\n        \"sequenceId\": \"<integer>\",\n        \"size\": \"<integer>\",\n        \"latency\": \"<float>\"\n      }\n    ]\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Enqueue a job to ping a target host from the device",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"target\": \"<string>\",\n  \"count\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/liveTools/ping",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"liveTools",
														"ping"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Enqueue a job to ping a target host from the device"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"target\": \"<string>\",\n  \"count\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/liveTools/ping",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"liveTools",
																"ping"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"pingId\": \"<string>\",\n  \"url\": \"<string>\",\n  \"request\": {\n    \"serial\": \"<string>\",\n    \"target\": \"<string>\",\n    \"count\": \"<integer>\"\n  },\n  \"status\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "clients",
							"item": [
								{
									"name": "List the clients of a device, up to a maximum of a month ago",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/clients?t0=<string>&timespan=<float>",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"clients"
											],
											"query": [
												{
													"key": "t0",
													"value": "<string>",
													"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
												},
												{
													"key": "timespan",
													"value": "<float>",
													"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
												}
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/clients?t0=<string>&timespan=<float>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"clients"
													],
													"query": [
														{
															"key": "t0",
															"value": "<string>",
															"description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
														},
														{
															"key": "timespan",
															"value": "<float>",
															"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
														}
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "cellularGateway",
							"item": [
								{
									"name": "portForwardingRules",
									"item": [
										{
											"name": "Returns the port forwarding rules for a single MG.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellularGateway/portForwardingRules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"portForwardingRules"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Returns the port forwarding rules for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellularGateway/portForwardingRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Updates the port forwarding rules for a single MG.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellularGateway/portForwardingRules",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"portForwardingRules"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Updates the port forwarding rules for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rules\": [\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"lanIp\": \"<string>\",\n      \"publicPort\": \"<string>\",\n      \"localPort\": \"<string>\",\n      \"protocol\": \"<string>\",\n      \"access\": \"<string>\",\n      \"name\": \"<string>\",\n      \"allowedIps\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellularGateway/portForwardingRules",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"portForwardingRules"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "lan",
									"item": [
										{
											"name": "Show the LAN Settings of a MG",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellularGateway/lan",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"lan"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Show the LAN Settings of a MG"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellularGateway/lan",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"lan"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update the LAN Settings for a single MG.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellularGateway/lan",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellularGateway",
														"lan"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Update the LAN Settings for a single MG."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reservedIpRanges\": [\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    },\n    {\n      \"start\": \"<string>\",\n      \"end\": \"<string>\",\n      \"comment\": \"<string>\"\n    }\n  ],\n  \"fixedIpAssignments\": [\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"ip\": \"<string>\",\n      \"mac\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellularGateway/lan",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellularGateway",
																"lan"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "cellular",
							"item": [
								{
									"name": "sims",
									"item": [
										{
											"name": "Return the SIM and APN configurations for a cellular device.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellular/sims",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellular",
														"sims"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Return the SIM and APN configurations for a cellular device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellular/sims",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellular",
																"sims"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Updates the SIM and APN configurations for a cellular device.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sims\": [\n    {\n      \"slot\": \"sim1\",\n      \"isPrimary\": false\n    },\n    {\n      \"slot\": \"sim2\",\n      \"isPrimary\": false\n    }\n  ],\n  \"simFailover\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/cellular/sims",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"cellular",
														"sims"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Updates the SIM and APN configurations for a cellular device."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"sims\": [\n    {\n      \"slot\": \"sim1\",\n      \"isPrimary\": false\n    },\n    {\n      \"slot\": \"sim2\",\n      \"isPrimary\": false\n    }\n  ],\n  \"simFailover\": {\n    \"enabled\": \"<boolean>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/cellular/sims",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"cellular",
																"sims"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "camera",
							"item": [
								{
									"name": "wirelessProfiles",
									"item": [
										{
											"name": "Returns wireless profile assigned to the given camera",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/wirelessProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Returns wireless profile assigned to the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/wirelessProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Assign wireless profiles to the given camera",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": {\n    \"primary\": \"<string>\",\n    \"secondary\": \"<string>\",\n    \"backup\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/wirelessProfiles",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"wirelessProfiles"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": {\n    \"primary\": \"<string>\",\n    \"secondary\": \"<string>\",\n    \"backup\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/wirelessProfiles",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"wirelessProfiles"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "videoLink",
									"item": [
										{
											"name": "Returns video link to the specified camera",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/videoLink?timestamp=<dateTime>",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"videoLink"
													],
													"query": [
														{
															"key": "timestamp",
															"value": "<dateTime>",
															"description": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time."
														}
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/videoLink?timestamp=<dateTime>",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"videoLink"
															],
															"query": [
																{
																	"key": "timestamp",
																	"value": "<dateTime>",
																	"description": "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time."
																}
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "video",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Returns video settings for the given camera",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/video/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"video",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns video settings for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/video/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"video",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Update video settings for the given camera",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"externalRtspEnabled\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/video/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"video",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Update video settings for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalRtspEnabled\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/video/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"video",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "sense",
									"item": [
										{
											"name": "objectDetectionModels",
											"item": [
												{
													"name": "Returns the MV Sense object detection model list for the given camera",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/sense/objectDetectionModels",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense",
																"objectDetectionModels"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns the MV Sense object detection model list for the given camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/sense/objectDetectionModels",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"sense",
																		"objectDetectionModels"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "Returns sense settings for a given camera",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/sense",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"sense"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Returns sense settings for a given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/sense",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update sense settings for the given camera",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"senseEnabled\": \"<boolean>\",\n  \"mqttBrokerId\": \"<string>\",\n  \"audioDetection\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"detectionModelId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/sense",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"sense"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Update sense settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"senseEnabled\": \"<boolean>\",\n  \"mqttBrokerId\": \"<string>\",\n  \"audioDetection\": {\n    \"enabled\": \"<boolean>\"\n  },\n  \"detectionModelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/sense",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"sense"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "qualityAndRetention",
									"item": [
										{
											"name": "Returns quality and retention settings for the given camera",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/qualityAndRetention",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"qualityAndRetention"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Returns quality and retention settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/qualityAndRetention",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"qualityAndRetention"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update quality and retention settings for the given camera",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"profileId\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"quality\": \"Standard\",\n  \"resolution\": \"2112x2112\",\n  \"motionDetectorVersion\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/qualityAndRetention",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"qualityAndRetention"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Update quality and retention settings for the given camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"profileId\": \"<string>\",\n  \"motionBasedRetentionEnabled\": \"<boolean>\",\n  \"audioRecordingEnabled\": \"<boolean>\",\n  \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n  \"quality\": \"Standard\",\n  \"resolution\": \"2112x2112\",\n  \"motionDetectorVersion\": 1\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/qualityAndRetention",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"qualityAndRetention"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "generateSnapshot",
									"item": [
										{
											"name": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"fullframe\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/generateSnapshot",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"generateSnapshot"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"fullframe\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/generateSnapshot",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"generateSnapshot"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "customAnalytics",
									"item": [
										{
											"name": "Return custom analytics settings for a camera",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/customAnalytics",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"customAnalytics"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Return custom analytics settings for a camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/customAnalytics",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"customAnalytics"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										},
										{
											"name": "Update custom analytics settings for a camera",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"parameters\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/camera/customAnalytics",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"camera",
														"customAnalytics"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Update custom analytics settings for a camera"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"artifactId\": \"<string>\",\n  \"parameters\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/customAnalytics",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"customAnalytics"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "analytics",
									"item": [
										{
											"name": "zones",
											"item": [
												{
													"name": "{zoneId}",
													"item": [
														{
															"name": "history",
															"item": [
																{
																	"name": "Return historical records for analytic zones",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/camera/analytics/zones/:zone_id/history?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&objectType=vehicle",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"camera",
																				"analytics",
																				"zones",
																				":zone_id",
																				"history"
																			],
																			"query": [
																				{
																					"key": "t0",
																					"value": "<string>",
																					"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																				},
																				{
																					"key": "t1",
																					"value": "<string>",
																					"description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
																				},
																				{
																					"key": "timespan",
																					"value": "<float>",
																					"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
																				},
																				{
																					"key": "resolution",
																					"value": "<integer>",
																					"description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
																				},
																				{
																					"key": "objectType",
																					"value": "vehicle",
																					"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																				}
																			],
																			"variable": [
																				{
																					"key": ":serial",
																					"value": "<string>"
																				},
																				{
																					"key": ":zone_id",
																					"value": "<string>"
																				}
																			]
																		},
																		"description": "Return historical records for analytic zones"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "X-Cisco-Meraki-API-Key",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "https://{{hostname}}/devices/:serial/camera/analytics/zones/:zone_id/history?t0=<string>&t1=<string>&timespan=<float>&resolution=<integer>&objectType=vehicle",
																					"protocol": "https",
																					"host": [
																						"{{hostname}}"
																					],
																					"path": [
																						"devices",
																						":serial",
																						"camera",
																						"analytics",
																						"zones",
																						":zone_id",
																						"history"
																					],
																					"query": [
																						{
																							"key": "t0",
																							"value": "<string>",
																							"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																						},
																						{
																							"key": "t1",
																							"value": "<string>",
																							"description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
																						},
																						{
																							"key": "timespan",
																							"value": "<float>",
																							"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
																						},
																						{
																							"key": "resolution",
																							"value": "<integer>",
																							"description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
																						},
																						{
																							"key": "objectType",
																							"value": "vehicle",
																							"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																						}
																					],
																					"variable": [
																						{
																							"key": ":serial"
																						},
																						{
																							"key": ":zone_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[]"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "Returns all configured analytic zones for this camera",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/analytics/zones",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"zones"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns all configured analytic zones for this camera"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/analytics/zones",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"zones"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "recent",
											"item": [
												{
													"name": "Returns most recent record for analytics zones",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/analytics/recent?objectType=vehicle",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"recent"
															],
															"query": [
																{
																	"key": "objectType",
																	"value": "vehicle",
																	"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																}
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns most recent record for analytics zones"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/analytics/recent?objectType=vehicle",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"recent"
																	],
																	"query": [
																		{
																			"key": "objectType",
																			"value": "vehicle",
																			"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																		}
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "overview",
											"item": [
												{
													"name": "Returns an overview of aggregate analytics data for a timespan",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/analytics/overview?t0=<string>&t1=<string>&timespan=<float>&objectType=vehicle",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"overview"
															],
															"query": [
																{
																	"key": "t0",
																	"value": "<string>",
																	"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																},
																{
																	"key": "t1",
																	"value": "<string>",
																	"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																},
																{
																	"key": "timespan",
																	"value": "<float>",
																	"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
																},
																{
																	"key": "objectType",
																	"value": "vehicle",
																	"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																}
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns an overview of aggregate analytics data for a timespan"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/analytics/overview?t0=<string>&t1=<string>&timespan=<float>&objectType=vehicle",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"overview"
																	],
																	"query": [
																		{
																			"key": "t0",
																			"value": "<string>",
																			"description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
																		},
																		{
																			"key": "t1",
																			"value": "<string>",
																			"description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
																		},
																		{
																			"key": "timespan",
																			"value": "<float>",
																			"description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
																		},
																		{
																			"key": "objectType",
																			"value": "vehicle",
																			"description": "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
																		}
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										},
										{
											"name": "live",
											"item": [
												{
													"name": "Returns live state from camera of analytics zones",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/camera/analytics/live",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"camera",
																"analytics",
																"live"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns live state from camera of analytics zones"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/camera/analytics/live",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"camera",
																		"analytics",
																		"live"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "blinkLeds",
							"item": [
								{
									"name": "Blink the LEDs on a device",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"duration\": \"<integer>\",\n  \"period\": \"<integer>\",\n  \"duty\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/devices/:serial/blinkLeds",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial",
												"blinkLeds"
											],
											"variable": [
												{
													"key": ":serial",
													"value": "<string>"
												}
											]
										},
										"description": "Blink the LEDs on a device"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Cisco-Meraki-API-Key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"period\": \"<integer>\",\n  \"duty\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/blinkLeds",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"blinkLeds"
													],
													"variable": [
														{
															"key": ":serial"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"duration\": \"<integer>\",\n  \"period\": \"<integer>\",\n  \"duty\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "appliance",
							"item": [
								{
									"name": "vmx",
									"item": [
										{
											"name": "authenticationToken",
											"item": [
												{
													"name": "Generate a new vMX authentication token",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/vmx/authenticationToken",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"vmx",
																"authenticationToken"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Generate a new vMX authentication token"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/vmx/authenticationToken",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"vmx",
																		"authenticationToken"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"token\": \"<string>\",\n  \"expiresAt\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "uplinks",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Return the uplink settings for an MX appliance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/uplinks/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"uplinks",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the uplink settings for an MX appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/uplinks/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"uplinks",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
														}
													]
												},
												{
													"name": "Update the uplink settings for an MX appliance",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/uplinks/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"uplinks",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the uplink settings for an MX appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\",\n          \"password\": \"<string>\"\n        }\n      }\n    }\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/uplinks/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"uplinks",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"interfaces\": {\n    \"wan1\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"dynamic\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\"\n        }\n      }\n    },\n    \"wan2\": {\n      \"enabled\": \"<boolean>\",\n      \"vlanTagging\": {\n        \"enabled\": \"<boolean>\",\n        \"vlanId\": \"<integer>\"\n      },\n      \"svis\": {\n        \"ipv4\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        \"ipv6\": {\n          \"assignmentMode\": \"static\",\n          \"address\": \"<string>\",\n          \"gateway\": \"<string>\",\n          \"nameservers\": {\n            \"addresses\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      },\n      \"pppoe\": {\n        \"enabled\": \"<boolean>\",\n        \"authentication\": {\n          \"enabled\": \"<boolean>\",\n          \"username\": \"<string>\"\n        }\n      }\n    }\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "radio",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Return the radio settings of an appliance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/radio/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the radio settings of an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/radio/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"<string>\",\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 5,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 169,\n    \"channelWidth\": 20,\n    \"targetPower\": \"<integer>\"\n  }\n}"
														}
													]
												},
												{
													"name": "Update the radio settings of an appliance",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 14,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 173,\n    \"channelWidth\": 80,\n    \"targetPower\": \"<integer>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/radio/settings",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"radio",
																"settings"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Update the radio settings of an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 14,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 173,\n    \"channelWidth\": 80,\n    \"targetPower\": \"<integer>\"\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/radio/settings",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"radio",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serial\": \"<string>\",\n  \"rfProfileId\": \"<string>\",\n  \"twoFourGhzSettings\": {\n    \"channel\": 5,\n    \"targetPower\": \"<integer>\"\n  },\n  \"fiveGhzSettings\": {\n    \"channel\": 169,\n    \"channelWidth\": 20,\n    \"targetPower\": \"<integer>\"\n  }\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "prefixes",
									"item": [
										{
											"name": "delegated",
											"item": [
												{
													"name": "vlanAssignments",
													"item": [
														{
															"name": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/prefixes/delegated/vlanAssignments",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"prefixes",
																		"delegated",
																		"vlanAssignments"
																	],
																	"variable": [
																		{
																			"key": ":serial",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Return prefixes assigned to all IPv6 enabled VLANs on an appliance."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "X-Cisco-Meraki-API-Key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "https://{{hostname}}/devices/:serial/appliance/prefixes/delegated/vlanAssignments",
																			"protocol": "https",
																			"host": [
																				"{{hostname}}"
																			],
																			"path": [
																				"devices",
																				":serial",
																				"appliance",
																				"prefixes",
																				"delegated",
																				"vlanAssignments"
																			],
																			"variable": [
																				{
																					"key": ":serial"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[]"
																}
															]
														}
													]
												},
												{
													"name": "Return current delegated IPv6 prefixes on an appliance.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/prefixes/delegated",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"prefixes",
																"delegated"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return current delegated IPv6 prefixes on an appliance."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/prefixes/delegated",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"prefixes",
																		"delegated"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "performance",
									"item": [
										{
											"name": "Return the performance score for a single MX",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "https://{{hostname}}/devices/:serial/appliance/performance",
													"protocol": "https",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"devices",
														":serial",
														"appliance",
														"performance"
													],
													"variable": [
														{
															"key": ":serial",
															"value": "<string>"
														}
													]
												},
												"description": "Return the performance score for a single MX. Only primary MX devices supported. If no data is available, a 204 error code is returned."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/performance",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"performance"
															],
															"variable": [
																{
																	"key": ":serial"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "dhcp",
									"item": [
										{
											"name": "subnets",
											"item": [
												{
													"name": "Return the DHCP subnet information for an appliance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "https://{{hostname}}/devices/:serial/appliance/dhcp/subnets",
															"protocol": "https",
															"host": [
																"{{hostname}}"
															],
															"path": [
																"devices",
																":serial",
																"appliance",
																"dhcp",
																"subnets"
															],
															"variable": [
																{
																	"key": ":serial",
																	"value": "<string>"
																}
															]
														},
														"description": "Return the DHCP subnet information for an appliance"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "X-Cisco-Meraki-API-Key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "https://{{hostname}}/devices/:serial/appliance/dhcp/subnets",
																	"protocol": "https",
																	"host": [
																		"{{hostname}}"
																	],
																	"path": [
																		"devices",
																		":serial",
																		"appliance",
																		"dhcp",
																		"subnets"
																	],
																	"variable": [
																		{
																			"key": ":serial"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Return a single device",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{hostname}}/devices/:serial",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": ":serial",
											"value": "<string>"
										}
									]
								},
								"description": "Return a single device"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "https://{{hostname}}/devices/:serial",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial"
											],
											"variable": [
												{
													"key": ":serial"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Update the attributes of a device",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lat\": \"<float>\",\n  \"lng\": \"<float>\",\n  \"address\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"moveMapMarker\": \"<boolean>\",\n  \"switchProfileId\": \"<string>\",\n  \"floorPlanId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{hostname}}/devices/:serial",
									"protocol": "https",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"devices",
										":serial"
									],
									"variable": [
										{
											"key": ":serial",
											"value": "<string>"
										}
									]
								},
								"description": "Update the attributes of a device"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Cisco-Meraki-API-Key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"lat\": \"<float>\",\n  \"lng\": \"<float>\",\n  \"address\": \"<string>\",\n  \"notes\": \"<string>\",\n  \"moveMapMarker\": \"<boolean>\",\n  \"switchProfileId\": \"<string>\",\n  \"floorPlanId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{hostname}}/devices/:serial",
											"protocol": "https",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"devices",
												":serial"
											],
											"variable": [
												{
													"key": ":serial"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "hostname",
			"value": "",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "",
			"type": "string"
		}
	]
}